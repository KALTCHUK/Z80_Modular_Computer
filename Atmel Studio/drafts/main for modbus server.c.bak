/*
  ModbusRTUSlave for Proton Remote I/O units.
*/

#include <ModbusRTUSlave.h>
#include <avr/portpins.h>
#include <avr/eeprom.h>

#define forcePin		PD2		// Connect this pin to 0 for setup, it will force baud=9600 and slaveID=1.
#define forceBaud		9600
#define forceSlaveID	250

// Here are some constants used elsewhere in the program.
const word bufSize = 256;
const unsigned long responseDelay = 10;
const unsigned byte slaveIDaddr=0, baudAddr=2;

// This is the buffer for the ModbusRTUSlave object.
// It is used to store the Modbus messages.
// A size of 256 bytes is recommended, but sizes as low as 8 bytes can be used.
byte buf[bufSize];

void EEPROMwrite(unsigned int a, byte b);
byte EEPROMread(unsigned int a);

void main(void) {
	// Initilize serial port and Modbus.
	// Get baudrate from EEPROM (input register 40001).
	// Get slave ID from EEPROM (input register 40000).
	// If forcePin=0, use baud=9600.
	if(!forcePin) {
		serialInit(forceBaud);
		modbusInit(forceSlaveID, responseDelay);
	}
	else {
		serialInit(_bytesToWord(EEPROMread(baudAddr), EEPROMread(baudAddr+1)));
		modbusInit(_bytesToWord(EEPROMread(slaveIDaddr), EEPROMread(slaveIDaddr+1)), responseDelay);
	}
	// Initilize a ModbusRTUSlave with DE pin and response delay.
	

	while(1) {
		// Poll for Modbus RTU requests from the master device.
		modbusPoll();
	}
}