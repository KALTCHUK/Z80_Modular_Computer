RC51 COMPILER V06.20.17.263,  SERIAL_AND_TIMER_TEST    12/17/22  11:10:55  PAGE
            -  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.20.17.263, COMPILATION OF MODULE SERIAL_AND_TIMER_TEST
OBJECT MODULE PLACED IN C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Rid
            -e7\serial_and_timer_test\serial_and_timer_test.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\kaltc\Documents\GitHub\Z8
            -0_Modular_Computer\Ride7\serial_and_timer_test\serial_and_timer_tes
            -t.obj) PIN(C:\Users\kaltc\Documents\Raisonance\Ride\Inc;C:\Users\ka
            -ltc\Documents\Raisonance\Ride\Inc\51) PIN(C:\Users\kaltc\Documents\
            -Raisonance\Ride\\inc\51\Atmel) NOAM CD PR(C:\Users\kaltc\Documents\
            -GitHub\Z80_Modular_Computer\Ride7\serial_and_timer_test\serial_and_
            -timer_test.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CHAR) PR PL(60)
            - PW(80) OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) SM MOD517(NOD
            -P8,NOAU) 

stmt level    source
   1          /* Serial communication test.
   2          
   3          With crystal = 11.059MHz
   4          -------------
   5          Baud    TH1
   6          -------------
   7           1200   0xD0
   8           2400   0xE8
   9           4800   0xF4
  10           9600   0xFA
  11          19200   0xFD
  12          28800   0xFE
  13          57600   0xFF
  14          -------------
  15          */
  16          
  17          #include "REG51.h" 
  18          #include <stdio.h> 
  19          #include <stdlib.h>
  20          
  21          void Inits(void);
  22          unsigned char serialRX(void);
  23          void serialTX(unsigned char x);
  24          
  25          int milli;
  26          
  27          void timer0_isr() interrupt 1
  28          {
  29   1          TH0 = 0xfc;        //ReLoad the timer value
  30   1          TL0 = 0x66;
  31   1      
  32   1          milli++;
  33   1      }

*** WARNING C233 IN LINE 33 OF C:\Users\kaltc\Documents\GitHub\Z80_Modular_Comp
            -uter\Ride7\serial_and_timer_test\serial_and_timer_test.c : using ab
            -solute registers together with interrupts can cause register corrup
            -tions (mixup of register banks)
  34          
  35          void main(void) {
  36   1          //int tempo = 0;
  37   1      
  38   1          Inits();
  39   1      
RC51 COMPILER V06.20.17.263,  SERIAL_AND_TIMER_TEST    12/17/22  11:10:55  PAGE
            -  2

  40   1          while(1) {
  41   2              serialTX(serialRX());
  42   2          }
  43   1      /*
  44   1          while(1) {
  45   1              serialTX(0x30 + tempo++);
  46   1              if(tempo > 9)   tempo = 0;
  47   1          
  48   1              milli = 0;
  49   1              while(milli < 1000);
  50   1          }
  51   1      */
  52   1      }
  53          
  54          void Inits() {     // Initialize UART and TIMER0
  55   1          TMOD = 0x21;        // TIMER0 = mode_1 and TIMER1 = mode_2
  56   1          PCON |= 0x80;       // SMOD=1 => double baud rate;
  57   1          TH1 = 0xFD;         // 19200bps (see table in the header)
  58   1          SCON = 0x50;        // Serial port = mode 1 (8 bits, clocked b
            -y TIMER1)
  59   1          TR1 = 1;            // Turn on TIMER1
  60   1      
  61   1          TH0 = 0xfc;        //ReLoad the timer value
  62   1          TL0 = 0x66;
  63   1          TR0 = 1;           //turn ON Timer zero
  64   1          ET0 = 1;           //Enable TImer0 Interrupt
  65   1          EA = 1;            //Enable Global Interrupt bit
  66   1      }
  67          
  68          unsigned char serialRX(void) {
  69   1          while(RI == 0);
  70   1          RI = 0;
  71   1          return SBUF;
  72   1      }
  73          
  74          void serialTX(unsigned char x) {
  75   1          SBUF = x;
  76   1          while(TI == 0);
  77   1          TI = 0;
  78   1      }
  79          
  80          
RC51 COMPILER V06.20.17.263,  SERIAL_AND_TIMER_TEST    12/17/22  11:10:55  PAGE
            -  4

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION timer0_isr (BEGIN)
                                           ; SOURCE LINE # 27 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 29 
0004 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 30 
0007 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 32 
000A 0500    R      INC    milli+01H
000C E500    R      MOV    A,milli+01H
000E 7002           JNZ    ?NXT1
0010 0500    R      INC    milli
0012         ?NXT1:
0012 D0D0           POP    PSW
0014 D0E0           POP    ACC
                                           ; SOURCE LINE # 33 
0016 32             RETI   

            ; FUNCTION timer0_isr (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 38 
0000 120000  R      LCALL  Inits
0003         ?WHILE1:
                                           ; SOURCE LINE # 41 
0003 120000  R      LCALL  serialRX
0006 120000  R      LCALL  _serialTX
0009 80F8           SJMP   ?WHILE1

            ; FUNCTION main (END)

            ; FUNCTION Inits (BEGIN)
                                           ; SOURCE LINE # 55 
0000 758921         MOV    TMOD,#021H
                                           ; SOURCE LINE # 56 
0003 438780         ORL    PCON,#080H
                                           ; SOURCE LINE # 57 
0006 758DFD         MOV    TH1,#0FDH
                                           ; SOURCE LINE # 58 
0009 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 59 
000C D28E           SETB   TR1
                                           ; SOURCE LINE # 61 
000E 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 62 
0011 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 63 
0014 D28C           SETB   TR0
                                           ; SOURCE LINE # 64 
0016 D2A9           SETB   ET0
                                           ; SOURCE LINE # 65 
0018 D2AF           SETB   EA
                                           ; SOURCE LINE # 66 
001A 22             RET    

            ; FUNCTION Inits (END)

RC51 COMPILER V06.20.17.263,  SERIAL_AND_TIMER_TEST    12/17/22  11:10:55  PAGE
            -  3

            ; FUNCTION serialRX (BEGIN)
0000         ?WHILE3:
                                           ; SOURCE LINE # 69 
0000 3098FD         JNB    RI,?WHILE3
                                           ; SOURCE LINE # 70 
0003 C298           CLR    RI
                                           ; SOURCE LINE # 71 
0005 AF99           MOV    R7,SBUF
                                           ; SOURCE LINE # 72 
0007 22             RET    

            ; FUNCTION serialRX (END)

            ; FUNCTION _serialTX (BEGIN)
              ; Register R7 is assigned to parameter x
                                           ; SOURCE LINE # 75 
0000 8F99           MOV    SBUF,R7
0002         ?WHILE5:
                                           ; SOURCE LINE # 76 
0002 3099FD         JNB    TI,?WHILE5
                                           ; SOURCE LINE # 77 
0005 C299           CLR    TI
                                           ; SOURCE LINE # 78 
0007 22             RET    

            ; FUNCTION _serialTX (END)

RC51 COMPILER V06.20.17.263,  SERIAL_AND_TIMER_TEST    12/17/22  11:10:55  PAGE
            -  5



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     77    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  1 WARNING,  0 ERROR
