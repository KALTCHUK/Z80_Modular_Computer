0001   0000             #INCLUDE	"equates.h"
0001+  0000             
0002+  0000             CCP				.EQU	0D000h			; Base of CCP (or Monitor).
0003+  0000             BIOS			.EQU	0E620h			; Base of BIOS.
0004+  0000             ROM_CCP			.EQU	CCP-0C000h		; Base of CCP in ROM
0005+  0000             ROM_BIOS		.EQU	BIOS-0C000h		; Base of BIOS in ROM
0006+  0000             
0007+  0000             ccp				.EQU	CCP
0008+  0000             bios			.EQU	BIOS
0002   0000             
0003   0000             BOOT		.EQU	0
0004   0000             LEAP		.EQU	3					; 3 bytes for each entry (JP aaaa)
0005   0000             
0006   0000             CONST:		.EQU	BIOS+(LEAP*2)		;  2 Console status.
0007   0000             CONIN:		.EQU	BIOS+(LEAP*3)		;  3 Console input.
0008   0000             CONOUT:		.EQU	BIOS+(LEAP*4)		;  4 Console OUTput.
0009   0000             LIST:		.EQU	BIOS+(LEAP*5)		;  3 Console input.
0010   0000             LISTST:		.EQU	BIOS+(LEAP*15)		;  2 Console status.
0011   0000             PRINTSEQ:	.EQU	BIOS+(LEAP*17)		;  4 Console OUTput.
0012   0000             
0013   0000             LF			.EQU	0AH
0014   0000             CR			.EQU	0DH
0015   0000             ;================================================================================================
0016   0100             			.ORG	0100H
0017   0100             
0018   0100 CD 1D 01    			CALL CRLF
0019   0103 CD 29 E6    REPEAT:		CALL CONIN
0020   0106 FE 1A       			CP	01AH
0021   0108 28 1E       			JR	Z,FINAL
0022   010A 47          			LD	B,A
0023   010B CD 2E 01    			CALL B2HL
0024   010E 4C          			LD	C,H
0025   010F CD 2C E6    			CALL CONOUT
0026   0112 4D          			LD	C,L
0027   0113 CD 2C E6    			CALL CONOUT
0028   0116 0E 2C       			LD	C,','
0029   0118 CD 2C E6    			CALL CONOUT
0030   011B 18 E6       			JR	REPEAT
0031   011D             
0032   011D 0E 0D       CRLF:		LD	C,CR
0033   011F CD 2C E6    			CALL CONOUT
0034   0122 0E 0A       			LD	C,LF
0035   0124 CD 2C E6    			CALL CONOUT					; Output <CR><LF>.
0036   0127 C9          			RET
0037   0128             
0038   0128 CD 1D 01    FINAL:		CALL CRLF
0039   012B C3 00 00    			JP BOOT
0040   012E             			
0041   012E             ;================================================================================================
0042   012E             ; Convert HEX to ASCII (B --> HL)
0043   012E             ;================================================================================================
0044   012E C5          B2HL:		PUSH	BC
0045   012F 78          			LD	A,B
0046   0130 E6 0F       			AND	0FH
0047   0132 6F          			LD	L,A
0048   0133 D6 0A       			SUB	0AH
0049   0135 0E 30       			LD	C,030H
0050   0137 DA 3C 01    			JP	C,COMPENSE
0051   013A 0E 37       			LD	C,037H
0052   013C 7D          COMPENSE:	LD	A,L
0053   013D 81          			ADD	A,C
0054   013E 6F          			LD	L,A
0055   013F 78          			LD	A,B
0056   0140 E6 F0       			AND	0F0H
0057   0142 CB 3F       			SRL	A
0058   0144 CB 3F       			SRL	A
0059   0146 CB 3F       			SRL	A
0060   0148 CB 3F       			SRL	A
0061   014A 67          			LD	H,A
0062   014B D6 0A       			SUB	0AH
0063   014D 0E 30       			LD	C,030H
0064   014F DA 54 01    			JP	C,COMPENSE2
0065   0152 0E 37       			LD	C,037H
0066   0154 7C          COMPENSE2:	LD	A,H
0067   0155 81          			ADD	A,C
0068   0156 67          			LD	H,A
0069   0157 C1          			POP	BC
0070   0158 C9          			RET
0071   0159             
0072   0159             ;================================================================================================
0073   0159             
0074   0159             			.END
tasm: Number of errors = 0
