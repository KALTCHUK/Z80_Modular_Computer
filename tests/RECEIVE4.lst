0001   0000             ;==================================================================================
0002   0000             ; Receive version 1.4 - Kaltchuk, feb/2021
0003   0000             ;
0004   0000             ; RECEIVE is a program that runs on CP/M. On the Windows console there's a 
0005   0000             ; counterpart program called SEND.PY.
0006   0000             ;
0007   0000             ;==================================================================================
0008   0000             REBOOT		.EQU	0H
0009   0000             BDOS		.EQU	5H
0010   0000             TPA			.EQU	0100H
0011   0000             BIOS		.EQU	0E600h			; Base of BIOS.
0012   0000             
0013   0000             CONIN		.EQU	BIOS+(3*3)		; BIOS entry for Console Input (console --> regA)
0014   0000             CONOUT		.EQU	BIOS+(3*4)		; BIOS entry for Console Output (regC --> console)
0015   0000             C_STRING	.EQU	9
0016   0000             F_CLOSE		.EQU	16
0017   0000             F_DELETE	.EQU	19
0018   0000             F_WRITE		.EQU	21
0019   0000             F_MAKE		.EQU	22
0020   0000             F_DMAOFF	.EQU	26
0021   0000             
0022   0000             EOT			.EQU	04H
0023   0000             ACK			.EQU	06H
0024   0000             LF			.EQU	0AH
0025   0000             CR			.EQU	0DH
0026   0000             NAK			.EQU	015H
0027   0000             EM			.EQU	019H
0028   0000             		
0029   0000             FCB			.EQU	0005CH
0030   0000             DMA			.EQU	080H
0031   0000             ;==================================================================================
0032   0100             			.ORG TPA
0033   0100             
0034   0100 31 94 02    			LD	SP,STACK			; Set default stack.
0035   0103 3A 5D 00    			LD	A,(FCB+1)
0036   0106 FE 20       			CP	' '					; Test if program has argument (file name)
0037   0108 20 0B       			JR	NZ,START
0038   010A 11 F8 01    			LD	DE,MSG
0039   010D 0E 09       			LD	C,C_STRING
0040   010F CD 05 00    			CALL BDOS
0041   0112 C3 00 00    			JP	REBOOT
0042   0115             
0043   0115 21 80 00    START:		LD	HL,DMA				; Initialize buffer pointer
0044   0118 22 71 02    			LD	(BuffPtr),HL
0045   011B 3E 00       			LD	A,0					; Initialize checksum
0046   011D 32 73 02    			LD	(CheckSum),A
0047   0120             			
0048   0120 CD AB 01    			CALL DELFILE			; Delete file
0049   0123 CD B4 01    			CALL MAKEFILE			; Create file
0050   0126 FE 04       			CP	4					; 0, 1, 2 or 3 = OK
0051   0128 FA 31 01    			JP	M,GETHEX
0052   012B CD CC 01    			CALL SENDNAK
0053   012E C3 00 00    			JP	REBOOT
0054   0131             		
0055   0131 CD C6 01    GETHEX:		CALL SENDACK
0056   0134 CD 09 E6    			CALL CONIN				; Get 1st char
0057   0137 FE 04       			CP	EOT					; Is it the end?
0058   0139 28 38       			JR	Z,CLOSE
0059   013B 47          			LD	B,A
0060   013C C5          			PUSH BC
0061   013D CD 09 E6    			CALL CONIN				; Get 2nd char
0062   0140 C1          			POP	BC
0063   0141 4F          			LD	C,A
0064   0142 CD DF 01    			CALL BC2A				; Convert ASCII to byte
0065   0145 47          			LD	B,A
0066   0146 3A 73 02    			LD	A,(CheckSum)		; Update checksum
0067   0149 80          			ADD A,B
0068   014A 32 73 02    			LD	(CheckSum),A
0069   014D 2A 71 02    			LD	HL,(BuffPtr)
0070   0150 70          			LD	(HL),B				; Put byte in buffer
0071   0151 23          			INC	HL
0072   0152 22 71 02    			LD	(BuffPtr),HL
0073   0155 7C          			LD	A,H
0074   0156 FE 01       			CP	1					; Check if we reached the end of the buffer (0FFh is the last valid position)
0075   0158 20 D7       			JR	NZ,GETHEX
0076   015A CD D2 01    			CALL SENDEM				; Tell SEND to wait
0077   015D 21 80 00    			LD	HL,DMA
0078   0160 22 71 02    			LD	(BuffPtr),HL
0079   0163 CD D6 01    			CALL WRITEBLK
0080   0166 FE 00       			CP	0					; 0 = write OK
0081   0168 28 C7       			JR	Z,GETHEX
0082   016A CD BD 01    CLOSENAK:	CALL CLOSFILE
0083   016D CD CC 01    NAKEXIT:	CALL SENDNAK
0084   0170 C3 00 00    			JP	REBOOT
0085   0173             
0086   0173 2A 71 02    CLOSE:		LD	HL,(BuffPtr)
0087   0176 7D          			LD	A,L
0088   0177 FE 80       			CP	DMA
0089   0179 28 0F       			JR	Z,BUFVOID
0090   017B CD D6 01    			CALL WRITEBLK
0091   017E FE 00       			CP	0					; 0 = write OK
0092   0180 28 08       			JR	Z,BUFVOID
0093   0182 CD 09 E6    PIPECLR:	CALL CONIN				; Get 2 chars from checksum, just to clean the pipe
0094   0185 CD 09 E6    			CALL CONIN
0095   0188 18 E0       			JR	CLOSENAK
0096   018A             			
0097   018A CD BD 01    BUFVOID:	CALL CLOSFILE			; Close the file.
0098   018D FE 04       			CP	4					; 0, 1, 2 or 3 = OK
0099   018F F2 82 01    			JP	P,PIPECLR
0100   0192 CD 09 E6    			CALL CONIN				; Get 1st checksum char
0101   0195 47          			LD	B,A
0102   0196 C5          			PUSH BC
0103   0197 CD 09 E6    			CALL CONIN				; Get 2nd checksum char
0104   019A C1          			POP	BC
0105   019B 4F          			LD	C,A
0106   019C CD DF 01    			CALL BC2A				; Convert ASCII to byte. regA holds the
0107   019F 21 73 02    			LD	HL,CheckSum			; received checksum byte.
0108   01A2 BE          			CP	(HL)				; test checksum
0109   01A3 20 C8       			JR	NZ,NAKEXIT
0110   01A5 CD C6 01    			CALL SENDACK
0111   01A8 C3 00 00    			JP	REBOOT
0112   01AB             
0113   01AB             ;==================================================================================
0114   01AB             ; Delete file. Returns 0, 1, 2 or 3 if successful.
0115   01AB             ;==================================================================================
0116   01AB 0E 13       DELFILE:	LD	C,F_DELETE			; Delete file
0117   01AD 11 5C 00    			LD	DE,FCB
0118   01B0 CD 05 00    			CALL BDOS
0119   01B3 C9          			RET
0120   01B4             			
0121   01B4             ;==================================================================================
0122   01B4             ; Make file. Returns 0, 1, 2 or 3 if successful.
0123   01B4             ;==================================================================================
0124   01B4 0E 16       MAKEFILE:	LD	C,F_MAKE			; Create file
0125   01B6 11 5C 00    			LD	DE,FCB
0126   01B9 CD 05 00    			CALL BDOS
0127   01BC C9          			RET
0128   01BD             
0129   01BD             ;==================================================================================
0130   01BD             ; Close file. Returns 0, 1, 2 or 3 if successful.
0131   01BD             ;==================================================================================
0132   01BD 0E 10       CLOSFILE:	LD	C,F_CLOSE			; Close file
0133   01BF 11 5C 00    			LD	DE,FCB
0134   01C2 CD 05 00    			CALL BDOS
0135   01C5 C9          			RET
0136   01C6             			
0137   01C6             ;==================================================================================
0138   01C6             ; Send ACK
0139   01C6             ;==================================================================================
0140   01C6 0E 06       SENDACK:	LD C,ACK
0141   01C8 CD 0C E6    			CALL CONOUT
0142   01CB C9          			RET
0143   01CC             
0144   01CC             ;==================================================================================
0145   01CC             ; Send NAK
0146   01CC             ;==================================================================================
0147   01CC 0E 15       SENDNAK:	LD C,NAK
0148   01CE CD 0C E6    			CALL CONOUT
0149   01D1 C9          			RET
0150   01D2             
0151   01D2             ;==================================================================================
0152   01D2             ; Send EM
0153   01D2             ;==================================================================================
0154   01D2             SENDEM	:	LD C,EM
0155   01D2 CD 0C E6    			CALL CONOUT
0156   01D5 C9          			RET
0157   01D6             
0158   01D6             ;==================================================================================
0159   01D6             ; Write block to file. Returns 0 if successful.
0160   01D6             ;==================================================================================
0161   01D6 0E 15       WRITEBLK:	LD	C,F_WRITE			; Write buffer to disk.
0162   01D8 11 5C 00    			LD	DE,FCB
0163   01DB CD 05 00    			CALL BDOS
0164   01DE C9          			RET
0165   01DF             
0166   01DF             ;==================================================================================
0167   01DF             ; Convert ASCII characters in BC to a byte in A
0168   01DF             ;==================================================================================
0169   01DF 78          BC2A:		LD   A,B				
0170   01E0 D6 30       			SUB  $30
0171   01E2 FE 0A       			CP   $0A
0172   01E4 38 02       			JR   C,BC2A1
0173   01E6 D6 07       			SUB  $07
0174   01E8 07          BC2A1:		RLCA
0175   01E9 07          			RLCA
0176   01EA 07          			RLCA
0177   01EB 07          			RLCA
0178   01EC 47          			LD   B,A
0179   01ED 79          			LD   A,C
0180   01EE D6 30       			SUB  $30
0181   01F0 FE 0A       			CP   $0A
0182   01F2 38 02       			JR   C,BC2A2
0183   01F4 D6 07       			SUB  $07
0184   01F6 80          BC2A2:		ADD  A,B
0185   01F7 C9          			RET
0186   01F8             			
0187   01F8             ;==================================================================================
0188   01F8 52 45 43 45 MSG:		.DB	"RECEIVE 1.4 - Receive a file from console and store it on disk."
0188   01FC 49 56 45 20 
0188   0200 31 2E 34 20 
0188   0204 2D 20 52 65 
0188   0208 63 65 69 76 
0188   020C 65 20 61 20 
0188   0210 66 69 6C 65 
0188   0214 20 66 72 6F 
0188   0218 6D 20 63 6F 
0188   021C 6E 73 6F 6C 
0188   0220 65 20 61 6E 
0188   0224 64 20 73 74 
0188   0228 6F 72 65 20 
0188   022C 69 74 20 6F 
0188   0230 6E 20 64 69 
0188   0234 73 6B 2E 
0189   0237 0D 0A       			.DB	CR,LF
0190   0239 55 73 65 20 			.DB	"Use 'SEND.PY' on Windows console to start this program.$"
0190   023D 27 53 45 4E 
0190   0241 44 2E 50 59 
0190   0245 27 20 6F 6E 
0190   0249 20 57 69 6E 
0190   024D 64 6F 77 73 
0190   0251 20 63 6F 6E 
0190   0255 73 6F 6C 65 
0190   0259 20 74 6F 20 
0190   025D 73 74 61 72 
0190   0261 74 20 74 68 
0190   0265 69 73 20 70 
0190   0269 72 6F 67 72 
0190   026D 61 6D 2E 24 
0191   0271 00 00       BuffPtr		.DW	0000H
0192   0273 00          CheckSum 	.DB	0H
0193   0274             
0194   0274             			.DS	020h			; Start of stack area.
0195   0294             STACK		.EQU	$
0196   0294             
0197   0294             			.END
tasm: Number of errors = 0
