RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.20.17.263, COMPILATION OF MODULE DO_8      
OBJECT MODULE PLACED IN C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Rid
            -e7\DO-8\DO-8.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\kaltc\Documents\GitHub\Z8
            -0_Modular_Computer\Ride7\DO-8\DO-8.obj) PIN(C:\Users\kaltc\Document
            -s\Raisonance\Ride\Inc;C:\Users\kaltc\Documents\Raisonance\Ride\Inc\
            -51) PIN(C:\Users\kaltc\Documents\Raisonance\Ride\\inc\51) NOAM CD P
            -R(C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Ride7\DO-8\D
            -O-8.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CHAR) PR PL(60) PW(80)
            - OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) SM MOD517(NODP8,NOAU
            -) 

stmt level    source
   1          /*
   2           DO-8.c - Modbus RTU Slave controller (AT89C4051) for DO-8 Card. B
            -y Kaltchuk, Sep/2022.
   3          */
   4          
   5          #include <REG51.h>
   6          #include "Serial.h"
   7          #include "EEPROM.h"

*** WARNING C176 IN LINE 110 OF EEPROM.h : '|' : only one operand have bit type
            -
   8          #include "ModbusSlave.h"

*** WARNING C233 IN LINE 56 OF ModbusSlave.h : using absolute registers togethe
            -r with interrupts can cause register corruptions (mixup of register
            - banks)

*** WARNING C191 IN LINE 141 OF ModbusSlave.h : Inconsistent comparison with 'u
            -nsigned'
   9          
  10          // Definitions
  11          #define baudEEaddr		0	// Baud rate address in EEPROM (register 1).
            -
  12          #define idEEaddr		2	// ID address in EEPROM (register 2).
  13          
  14          void main() {
  15   1          blink(5);
  16   1      
  17   1      	numCoils = 8;
  18   1      	numDiscreteInputs = 0;
  19   1      	numHoldingRegisters = 2;
  20   1      	
  21   1      	baud = 9600;	// factory set baud rate.
  22   1      	id = 7;			// factory set modbus slave id.
  23   1      
  24   1      	if (_FS == 1) {
  25   2      		baud = EEPROMread(baudEEaddr);
  26   2      		id =  EEPROMread(idEEaddr);
  27   2              blink(2);
  28   2      	}
  29   1      	serialInit(baud);
  30   1      	modbusBegin(baud);
  31   1      	
  32   1      	while (1) {
  33   2              modbusPoll();
  34   2      	}
  35   1      }
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 27

  36          
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 29

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _serialInit (BEGIN)
              ; Register R6R7 is assigned to parameter baud
                                           ; SOURCE LINE # 25 
0000 438920         ORL    TMOD,#020H
                                           ; SOURCE LINE # 26 
0003 438780         ORL    PCON,#080H
                                           ; SOURCE LINE # 27 
0006 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 28 
0009 BE2507         CJNE   R6,#025H,?LAB9
000C EF             MOV    A,R7
000D 2480           ADD    A,#080H
000F 6051           JZ     ?CASE10
0011 8061           SJMP   ?NXT1
0013         ?LAB9:
0013 5021           JNC    ?LAB10
0015 EE             MOV    A,R6
0016 B40407         CJNE   A,#004H,?LAB11
0019 EF             MOV    A,R7
001A 2450           ADD    A,#050H
001C 6035           JZ     ?CASE7
001E 8054           SJMP   ?NXT1
0020         ?LAB11:
0020 EE             MOV    A,R6
0021 B40907         CJNE   A,#009H,?LAB12
0024 EF             MOV    A,R7
0025 24A0           ADD    A,#0A0H
0027 602F           JZ     ?CASE8
0029 8049           SJMP   ?NXT1
002B         ?LAB12:
002B EE             MOV    A,R6
002C B41245         CJNE   A,#012H,?NXT1
002F EF             MOV    A,R7
0030 2440           ADD    A,#040H
0032 6029           JZ     ?CASE9
0034 803E           SJMP   ?NXT1
0036         ?LAB10:
0036 EE             MOV    A,R6
0037 B44B05         CJNE   A,#04BH,?LAB13
003A EF             MOV    A,R7
003B 602A           JZ     ?CASE11
003D 8035           SJMP   ?NXT1
003F         ?LAB13:
003F EE             MOV    A,R6
0040 B47007         CJNE   A,#070H,?LAB14
0043 EF             MOV    A,R7
0044 2480           ADD    A,#080H
0046 6024           JZ     ?CASE12
0048 802A           SJMP   ?NXT1
004A         ?LAB14:
004A EE             MOV    A,R6
004B B4E126         CJNE   A,#0E1H,?NXT1
004E EF             MOV    A,R7
004F 6020           JZ     ?CASE13
0051 8021           SJMP   ?NXT1
0053         ?CASE7:
                                           ; SOURCE LINE # 30 
0053 758DD0         MOV    TH1,#0D0H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  2

                                           ; SOURCE LINE # 31 
0056 801C           SJMP   ?NXT1
0058         ?CASE8:
                                           ; SOURCE LINE # 33 
0058 758DE8         MOV    TH1,#0E8H
                                           ; SOURCE LINE # 34 
005B 8017           SJMP   ?NXT1
005D         ?CASE9:
                                           ; SOURCE LINE # 36 
005D 758DF4         MOV    TH1,#0F4H
                                           ; SOURCE LINE # 37 
0060 8012           SJMP   ?NXT1
0062         ?CASE10:
                                           ; SOURCE LINE # 39 
0062 758DFA         MOV    TH1,#0FAH
                                           ; SOURCE LINE # 40 
0065 800D           SJMP   ?NXT1
0067         ?CASE11:
                                           ; SOURCE LINE # 42 
0067 758DFD         MOV    TH1,#0FDH
                                           ; SOURCE LINE # 43 
006A 8008           SJMP   ?NXT1
006C         ?CASE12:
                                           ; SOURCE LINE # 45 
006C 758DFE         MOV    TH1,#0FEH
                                           ; SOURCE LINE # 46 
006F 8003           SJMP   ?NXT1
0071         ?CASE13:
                                           ; SOURCE LINE # 48 
0071 758DFF         MOV    TH1,#0FFH
0074         ?NXT1:
                                           ; SOURCE LINE # 51 
0074 D28E           SETB   TR1
                                           ; SOURCE LINE # 52 
0076 22             RET    

            ; FUNCTION _serialInit (END)

            ; FUNCTION _serialTX (BEGIN)
              ; Register R7 is assigned to parameter x
                                           ; SOURCE LINE # 55 
0000 8F99           MOV    SBUF,R7
0002         ?WHILE1:
                                           ; SOURCE LINE # 56 
0002 3099FD         JNB    TI,?WHILE1
                                           ; SOURCE LINE # 57 
0005 C299           CLR    TI
                                           ; SOURCE LINE # 58 
0007 22             RET    

            ; FUNCTION _serialTX (END)

            ; FUNCTION serialRX (BEGIN)
0000         ?WHILE3:
                                           ; SOURCE LINE # 61 
0000 3098FD         JNB    RI,?WHILE3
                                           ; SOURCE LINE # 62 
0003 C298           CLR    RI
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  3

                                           ; SOURCE LINE # 63 
0005 AF99           MOV    R7,SBUF
                                           ; SOURCE LINE # 64 
0007 22             RET    

            ; FUNCTION serialRX (END)

            ; FUNCTION I2C_delay (BEGIN)
                                           ; SOURCE LINE # 52 
0000 22             RET    

            ; FUNCTION I2C_delay (END)

            ; FUNCTION I2C_start (BEGIN)
                                           ; SOURCE LINE # 58 
0000 C2B2           CLR    INT0
                                           ; SOURCE LINE # 59 
0002 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 60 
0005 C2B3           CLR    INT1
                                           ; SOURCE LINE # 61 
0007 22             RET    

            ; FUNCTION I2C_start (END)

            ; FUNCTION I2C_stop (BEGIN)
                                           ; SOURCE LINE # 67 
0000 D2B3           SETB   INT1
                                           ; SOURCE LINE # 68 
0002 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 69 
0005 D2B2           SETB   INT0
                                           ; SOURCE LINE # 70 
0007 22             RET    

            ; FUNCTION I2C_stop (END)

            ; FUNCTION _I2C_write (BEGIN)
              ; Register R7 is assigned to parameter byte
              ; R6 is assigned to bt
                                           ; SOURCE LINE # 78 
0000 7E00           MOV    R6,#000H
0002         ?FOR1:
                                           ; SOURCE LINE # 79 
0002 EF             MOV    A,R7
0003 30E704         JNB    ACC.7,?ELSE1
                                           ; SOURCE LINE # 80 
0006 D2B2           SETB   INT0
0008 8002           SJMP   ?NXT11
000A         ?ELSE1:
                                           ; SOURCE LINE # 82 
000A C2B2           CLR    INT0
000C         ?NXT11:
                                           ; SOURCE LINE # 84 
000C 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 85 
000F D2B3           SETB   INT1
                                           ; SOURCE LINE # 86 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  4

0011 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 87 
0014 C2B3           CLR    INT1
                                           ; SOURCE LINE # 88 
0016 EF             MOV    A,R7
0017 C3             CLR    C
0018 33             RLC    A
0019 FF             MOV    R7,A
                                           ; SOURCE LINE # 78 
001A 0E             INC    R6
001B BE08E4         CJNE   R6,#008H,?FOR1
                                           ; SOURCE LINE # 90 
001E D2B3           SETB   INT1
                                           ; SOURCE LINE # 91 
0020 120000  R      LCALL  I2C_delay
              ; R3 is assigned to reply
                                           ; SOURCE LINE # 92 
0023 7B00           MOV    R3,#000H
0025 30B201         JNB    INT0,?LAB29
0028 0B             INC    R3
0029         ?LAB29:
                                           ; SOURCE LINE # 93 
0029 C2B3           CLR    INT1
                                           ; SOURCE LINE # 94 
002B 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 95 
002E 8B07           MOV    AR7,R3
                                           ; SOURCE LINE # 96 
0030 22             RET    

            ; FUNCTION _I2C_write (END)

            ; FUNCTION _I2C_read (BEGIN)
              ; Register R7 is assigned to parameter condition
              ; R6 is assigned to byte
                                           ; SOURCE LINE # 102 
0000 7E00           MOV    R6,#000H
              ; R5 is assigned to bt
                                           ; SOURCE LINE # 104 
0002 7D00           MOV    R5,#000H
0004         ?FOR3:
                                           ; SOURCE LINE # 105 
0004 D2B2           SETB   INT0
                                           ; SOURCE LINE # 106 
0006 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 107 
0009 D2B3           SETB   INT1
                                           ; SOURCE LINE # 108 
000B 120000  R      LCALL  I2C_delay
000E         ?WHILE6:
                                           ; SOURCE LINE # 109 
000E 20B302         JB     INT1,?NXT19
0011 80FB           SJMP   ?WHILE6
0013         ?NXT19:
                                           ; SOURCE LINE # 110 
0013 EE             MOV    A,R6
0014 C3             CLR    C
0015 33             RLC    A
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  5

0016 FE             MOV    R6,A
0017 A2B2           MOV    C,INT0
0019 E4             CLR    A
001A 33             RLC    A
001B FC             MOV    R4,A
001C EE             MOV    A,R6
001D 4C             ORL    A,R4
001E FE             MOV    R6,A
                                           ; SOURCE LINE # 111 
001F C2B3           CLR    INT1
                                           ; SOURCE LINE # 104 
0021 0D             INC    R5
0022 BD08DF         CJNE   R5,#008H,?FOR3
                                           ; SOURCE LINE # 113 
0025 EF             MOV    A,R7
0026 B40104         CJNE   A,#001H,?ELSE3
                                           ; SOURCE LINE # 114 
0029 C2B2           CLR    INT0
002B 8002           SJMP   ?NXT20
002D         ?ELSE3:
                                           ; SOURCE LINE # 116 
002D D2B2           SETB   INT0
002F         ?NXT20:
                                           ; SOURCE LINE # 118 
002F 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 119 
0032 D2B3           SETB   INT1
                                           ; SOURCE LINE # 120 
0034 120000  R      LCALL  I2C_delay
0037         ?WHILE7:
                                           ; SOURCE LINE # 121 
0037 20B302         JB     INT1,?NXT21
003A 80FB           SJMP   ?WHILE7
003C         ?NXT21:
                                           ; SOURCE LINE # 122 
003C C2B3           CLR    INT1
                                           ; SOURCE LINE # 123 
003E 120000  R      LCALL  I2C_delay
                                           ; SOURCE LINE # 124 
0041 8E07           MOV    AR7,R6
                                           ; SOURCE LINE # 125 
0043 22             RET    

            ; FUNCTION _I2C_read (END)

            ; FUNCTION _EEPROMread (BEGIN)
              ; Register R4R5 is assigned to parameter address
                                           ; SOURCE LINE # 134 
0000 8E02           MOV    AR2,R6
0002 EF             MOV    A,R7
0003 C3             CLR    C
0004 33             RLC    A
0005 CA             XCH    A,R2
0006 33             RLC    A
0007 CA             XCH    A,R2
                                           ; SOURCE LINE # 135 
0008 FF             MOV    R7,A
0009 8A06           MOV    AR6,R2
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  6

000B 120000  R      LCALL  _EEPROMcommon
                                           ; SOURCE LINE # 136 
000E 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 138 
0011 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 139 
0014 7FA1           MOV    R7,#0A1H
0016 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 140 
0019 E4             CLR    A
001A FF             MOV    R7,A
001B 120000  R      LCALL  _I2C_read
001E EF             MOV    A,R7
001F FA             MOV    R2,A
0020 750000  R      MOV    word,#000H
0023 8F00    R      MOV    word+01H,R7
                                           ; SOURCE LINE # 141 
0025 7F01           MOV    R7,#001H
0027 120000  R      LCALL  _I2C_read
002A 8F00    R      MOV    word+01H,R7
002C 8A00    R      MOV    word,R2
                                           ; SOURCE LINE # 142 
002E 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 144 
0031 AE00    R      MOV    R6,word
0033 AF00    R      MOV    R7,word+01H
                                           ; SOURCE LINE # 145 
0035 22             RET    

            ; FUNCTION _EEPROMread (END)

            ; FUNCTION _EEPROMwrite (BEGIN)
                                           ; SOURCE LINE # 151 
0000 8E00    R      MOV    address,R6
0002 8F00    R      MOV    address+01H,R7
0004 8C00    R      MOV    word,R4
0006 8D00    R      MOV    word+01H,R5
                                           ; SOURCE LINE # 152 
0008 AA00    R      MOV    R2,address
000A E500    R      MOV    A,address+01H
000C C3             CLR    C
000D 33             RLC    A
000E CA             XCH    A,R2
000F 33             RLC    A
0010 CA             XCH    A,R2
0011 F500    R      MOV    address+01H,A
0013 8A00    R      MOV    address,R2
                                           ; SOURCE LINE # 153 
0015 AE00    R      MOV    R6,address
0017 AF00    R      MOV    R7,address+01H
0019 120000  R      LCALL  _EEPROMcommon
                                           ; SOURCE LINE # 154 
001C AF00    R      MOV    R7,word
001E 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 155 
0021 AF00    R      MOV    R7,word+01H
0023 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 156 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  7

0026 020000  R      LJMP   I2C_stop

            ; FUNCTION _EEPROMwrite (END)

            ; FUNCTION _EEPROMcommon (BEGIN)
              ; Register R4R5 is assigned to parameter address
                                           ; SOURCE LINE # 162 
0000 8E04           MOV    AR4,R6
0002 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 163 
0004 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 164 
0007 7FA0           MOV    R7,#0A0H
0009 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 165 
000C 8C07           MOV    AR7,R4
000E 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 166 
0011 8D07           MOV    AR7,R5
0013 020000  R      LJMP   _I2C_write

            ; FUNCTION _EEPROMcommon (END)

            ; FUNCTION timer0_isr (BEGIN)
                                           ; SOURCE LINE # 50 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 52 
0004 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 53 
0007 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 55 
000A 0500    R      INC    milli+01H
000C E500    R      MOV    A,milli+01H
000E 7002           JNZ    ?NXT23
0010 0500    R      INC    milli
0012         ?NXT23:
0012 D0D0           POP    PSW
0014 D0E0           POP    ACC
                                           ; SOURCE LINE # 56 
0016 32             RETI   

            ; FUNCTION timer0_isr (END)

            ; FUNCTION milliStart (BEGIN)
                                           ; SOURCE LINE # 59 
0000 C2A9           CLR    ET0
                                           ; SOURCE LINE # 60 
0002 438901         ORL    TMOD,#001H
                                           ; SOURCE LINE # 61 
0005 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 62 
0008 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 63 
000B D28C           SETB   TR0
                                           ; SOURCE LINE # 64 
000D D2A9           SETB   ET0
                                           ; SOURCE LINE # 65 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  8

000F D2AF           SETB   EA
                                           ; SOURCE LINE # 67 
0011 E4             CLR    A
0012 F500    R      MOV    milli,A
0014 F500    R      MOV    milli+01H,A
                                           ; SOURCE LINE # 68 
0016 22             RET    

            ; FUNCTION milliStart (END)

            ; FUNCTION _modbusBegin (BEGIN)
                                           ; SOURCE LINE # 70 
0000 8E00    R      MOV    baud,R6
0002 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 71 
0004 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 73 
0007 EE             MOV    A,R6
0008 B44B00         CJNE   A,#04BH,?LAB56
000B         ?LAB56:
000B 400D           JC     ?ELSE6
                                           ; SOURCE LINE # 74 
000D E4             CLR    A
000E F500    R      MOV    charTimeout,A
0010 750001  R      MOV    charTimeout+01H,#001H
                                           ; SOURCE LINE # 75 
0013 F500    R      MOV    frameTimeout,A
0015 750002  R      MOV    frameTimeout+01H,#002H
0018 802A           SJMP   ?DO1
001A         ?ELSE6:
                                           ; SOURCE LINE # 78 
001A 7E3A           MOV    R6,#03AH
001C 7F98           MOV    R7,#098H
001E AC00    R      MOV    R4,baud
0020 AD00    R      MOV    R5,baud+01H
0022 120000  R      LCALL  ?C_UIDIV
0025 8E00    R      MOV    charTimeout,R6
0027 8F00    R      MOV    charTimeout+01H,R7
                                           ; SOURCE LINE # 79 
0029 E4             CLR    A
002A C0E0           PUSH   ACC
002C C0E0           PUSH   ACC
002E 7488           MOV    A,#088H
0030 C0E0           PUSH   ACC
0032 74B8           MOV    A,#0B8H
0034 C0E0           PUSH   ACC
0036 E4             CLR    A
0037 FC             MOV    R4,A
0038 FD             MOV    R5,A
0039 AE00    R      MOV    R6,baud
003B AF00    R      MOV    R7,baud+01H
003D 120000  R      LCALL  ?C_SLDIV_SP
0040 8E00    R      MOV    frameTimeout,R6
0042 8F00    R      MOV    frameTimeout+01H,R7
0044         ?DO1:
                                           ; SOURCE LINE # 83 
0044 309805         JNB    RI,?TEST1
                                           ; SOURCE LINE # 84 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE  9

0047 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 85 
004A C298           CLR    RI
004C         ?TEST1:
004C E500    R      MOV    A,milli
004E B50005  R      CJNE   A,frameTimeout,?LAB58
0051 E500    R      MOV    A,milli+01H
0053 B50000  R      CJNE   A,frameTimeout+01H,?LAB58
0056         ?LAB58:
0056 40EC           JC     ?DO1
                                           ; SOURCE LINE # 88 
0058 22             RET    

            ; FUNCTION _modbusBegin (END)

            ; FUNCTION modbusPoll (BEGIN)
                                           ; SOURCE LINE # 91 
0000 750000  R      MOV    i,#000H
                                           ; SOURCE LINE # 94 
0003 209803         JB     RI,$ + 6
0006 020000  R      LJMP   ?NXT60
0009         ?DO3:
                                           ; SOURCE LINE # 96 
0009 30981A         JNB    RI,?TEST3
                                           ; SOURCE LINE # 97 
000C 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 98 
000F E500    R      MOV    A,i
0011 B41800         CJNE   A,#018H,?LAB120
0014         ?LAB120:
0014 500C           JNC    ?ELSE31
0016 120000  R      LCALL  serialRX
0019 E500    R      MOV    A,i
001B 2400    R      ADD    A,#buf
001D F8             MOV    R0,A
001E A607           MOV    @R0,AR7
0020 8002           SJMP   ?NXT63
0022         ?ELSE31:
                                           ; SOURCE LINE # 99 
0022 C298           CLR    RI
0024         ?NXT63:
                                           ; SOURCE LINE # 100 
0024 0500    R      INC    i
0026         ?TEST3:
0026 E500    R      MOV    A,milli
0028 B50005  R      CJNE   A,charTimeout,?LAB123
002B E500    R      MOV    A,milli+01H
002D B50000  R      CJNE   A,charTimeout+01H,?LAB123
0030         ?LAB123:
0030 5007           JNC    ?WHILE9
0032 E500    R      MOV    A,i
0034 B41800         CJNE   A,#018H,?LAB125
0037         ?LAB125:
0037 40D0           JC     ?DO3
0039         ?WHILE9:
                                           ; SOURCE LINE # 104 
0039 E500    R      MOV    A,milli
003B B50005  R      CJNE   A,frameTimeout,?LAB127
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 10

003E E500    R      MOV    A,milli+01H
0040 B50000  R      CJNE   A,frameTimeout+01H,?LAB127
0043         ?LAB127:
0043 5004           JNC    ?NXT64
0045 C298           CLR    RI
0047 80F0           SJMP   ?WHILE9
0049         ?NXT64:
                                           ; SOURCE LINE # 106 
0049 309803         JNB    RI,$ + 6
004C 020000  R      LJMP   ?NXT60
004F E4             CLR    A
0050 B50006  R      CJNE   A,id,?LAB132
0053 E500    R      MOV    A,buf
0055 6500    R      XRL    A,id+01H
0057 600A           JZ     ?LAB130
0059         ?LAB132:
0059 E500    R      MOV    A,buf
005B B40002         CJNE   A,#000H,$ + 5
005E 8003           SJMP   $ + 5
0060 020000  R      LJMP   ?NXT60
0063         ?LAB130:
0063 E500    R      MOV    A,i
0065 B41800         CJNE   A,#018H,?LAB133
0068         ?LAB133:
0068 4003           JC     $ + 5
006A 020000  R      LJMP   ?NXT60
                                           ; SOURCE LINE # 107 
006D E500    R      MOV    A,i
006F 2400    R      ADD    A,#buf+0FFH
0071 F8             MOV    R0,A
0072 8607           MOV    AR7,@R0
0074 E500    R      MOV    A,i
0076 2400    R      ADD    A,#buf+0FEH
0078 F8             MOV    R0,A
0079 8605           MOV    AR5,@R0
007B 120000  R      LCALL  _bytesToWord
007E C006           PUSH   AR6
0080 C007           PUSH   AR7
0082 E500    R      MOV    A,i
0084 24FE           ADD    A,#0FEH
0086 FF             MOV    R7,A
0087 120000  R      LCALL  _crc
008A D005           POP    AR5
008C D0F0           POP    B
008E EE             MOV    A,R6
008F B5F004         CJNE   A,B,?LAB135
0092 EF             MOV    A,R7
0093 6D             XRL    A,R5
0094 6001           JZ     ?NXT66
0096         ?LAB135:
                                           ; SOURCE LINE # 194 
0096 22             RET    
0097         ?NXT66:
                                           ; SOURCE LINE # 112 
0097 E500    R      MOV    A,buf+01H
0099 14             DEC    A
009A 601E           JZ     ?CASE19
009C 24FE           ADD    A,#0FEH
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 11

009E 7003           JNZ    $ + 5
00A0 020000  R      LJMP   ?CASE20
00A3 24FE           ADD    A,#0FEH
00A5 7003           JNZ    $ + 5
00A7 020000  R      LJMP   ?CASE21
00AA 14             DEC    A
00AB 7003           JNZ    $ + 5
00AD 020000  R      LJMP   ?CASE22
00B0 24F7           ADD    A,#0F7H
00B2 7003           JNZ    $ + 5
00B4 020000  R      LJMP   ?CASE23
00B7 020000  R      LJMP   ?DEFAULT1
00BA         ?CASE19:
                                           ; SOURCE LINE # 114 
00BA AF00    R      MOV    R7,buf+02H
00BC AD00    R      MOV    R5,buf+03H
00BE 120000  R      LCALL  _bytesToWord
00C1 8E00    R      MOV    startAddress,R6
00C3 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 115 
00C5 AF00    R      MOV    R7,buf+04H
00C7 AD00    R      MOV    R5,buf+05H
00C9 120000  R      LCALL  _bytesToWord
00CC 8E00    R      MOV    quantity,R6
00CE 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 116 
00D0 E500    R      MOV    A,quantity
00D2 4500    R      ORL    A,quantity+01H
00D4 600D           JZ     ?LAB138
00D6 E500    R      MOV    A,quantity
00D8 B40006         CJNE   A,#000H,?LAB139
00DB E500    R      MOV    A,quantity+01H
00DD B49001         CJNE   A,#090H,?LAB139
00E0 D3             SETB   C
00E1         ?LAB139:
00E1 400A           JC     ?ELSE34
00E3         ?LAB138:
00E3 E4             CLR    A
00E4 FE             MOV    R6,A
00E5 7F03           MOV    R7,#003H
00E7 120000  R      LCALL  _oops
00EA 020000  R      LJMP   ?NXT67
00ED         ?ELSE34:
                                           ; SOURCE LINE # 117 
00ED E500    R      MOV    A,quantity+01H
00EF 2500    R      ADD    A,startAddress+01H
00F1 FE             MOV    R6,A
00F2 E500    R      MOV    A,quantity
00F4 3500    R      ADDC   A,startAddress
00F6 B40005         CJNE   A,#000H,?LAB141
00F9 EE             MOV    A,R6
00FA B50001  R      CJNE   A,numCoils,?LAB141
00FD D3             SETB   C
00FE         ?LAB141:
00FE 400A           JC     ?ELSE35
0100 E4             CLR    A
0101 FE             MOV    R6,A
0102 7F02           MOV    R7,#002H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 12

0104 120000  R      LCALL  _oops
0107 020000  R      LJMP   ?NXT67
010A         ?ELSE35:
                                           ; SOURCE LINE # 119 
010A 750000  R      MOV    j,#000H
010D         ?FOR7:
010D E4             CLR    A
010E B50005  R      CJNE   A,quantity,?LAB143
0111 E500    R      MOV    A,j
0113 B50000  R      CJNE   A,quantity+01H,?LAB143
0116         ?LAB143:
0116 506C           JNC    ?NXT70
                                           ; SOURCE LINE # 120 
0118 E500    R      MOV    A,startAddress+01H
011A 2500    R      ADD    A,j
011C FF             MOV    R7,A
011D E4             CLR    A
011E 3500    R      ADDC   A,startAddress
0120 FE             MOV    R6,A
0121 120000  R      LCALL  _boolRead
0124 750000  R      MOV    value,#000H
0127 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 121 
0129 E500    R      MOV    A,value
012B B40006         CJNE   A,#000H,?LAB145
012E E500    R      MOV    A,value+01H
0130 B40101         CJNE   A,#001H,?LAB145
0133 D3             SETB   C
0134         ?LAB145:
0134 4007           JC     ?NXT72
                                           ; SOURCE LINE # 122 
0136 E4             CLR    A
0137 FE             MOV    R6,A
0138 7F04           MOV    R7,#004H
013A 020000  R      LJMP   _oops
013D         ?NXT72:
                                           ; SOURCE LINE # 125 
013D E500    R      MOV    A,value+01H
013F 6401           XRL    A,#001H
0141 4500    R      ORL    A,value
0143 701E           JNZ    ?ELSE37
0145 E500    R      MOV    A,j
0147 03             RR     A
0148 03             RR     A
0149 03             RR     A
014A 541F           ANL    A,#01FH
014C 2400    R      ADD    A,#buf+03H
014E F8             MOV    R0,A
014F E500    R      MOV    A,j
0151 5407           ANL    A,#007H
0153 FB             MOV    R3,A
0154 0B             INC    R3
0155 7401           MOV    A,#001H
0157 8002           SJMP   ?LAB148
0159         ?LAB149:
0159 C3             CLR    C
015A 33             RLC    A
015B         ?LAB148:
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 13

015B DBFC           DJNZ   R3,?LAB149
015D FA             MOV    R2,A
015E E6             MOV    A,@R0
015F 4A             ORL    A,R2
0160 F6             MOV    @R0,A
0161 801D           SJMP   ?NXT71
0163         ?ELSE37:
                                           ; SOURCE LINE # 126 
0163 E500    R      MOV    A,j
0165 03             RR     A
0166 03             RR     A
0167 03             RR     A
0168 541F           ANL    A,#01FH
016A 2400    R      ADD    A,#buf+03H
016C F8             MOV    R0,A
016D E500    R      MOV    A,j
016F 5407           ANL    A,#007H
0171 FC             MOV    R4,A
0172 0C             INC    R4
0173 7401           MOV    A,#001H
0175 8002           SJMP   ?LAB150
0177         ?LAB151:
0177 C3             CLR    C
0178 33             RLC    A
0179         ?LAB150:
0179 DCFC           DJNZ   R4,?LAB151
017B F4             CPL    A
017C FA             MOV    R2,A
017D E6             MOV    A,@R0
017E 5A             ANL    A,R2
017F F6             MOV    @R0,A
0180         ?NXT71:
                                           ; SOURCE LINE # 119 
0180 0500    R      INC    j
0182 8089           SJMP   ?FOR7
0184         ?NXT70:
                                           ; SOURCE LINE # 128 
0184 AE00    R      MOV    R6,quantity
0186 AF00    R      MOV    R7,quantity+01H
0188 120000  R      LCALL  _div8RndUp
                                           ; SOURCE LINE # 129 
018B EF             MOV    A,R7
                                           ; SOURCE LINE # 128 
018C 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 129 
018E 2403           ADD    A,#003H
0190 FF             MOV    R7,A
0191 020000  R      LJMP   _write
0194         ?CASE20:
                                           ; SOURCE LINE # 134 
0194 AF00    R      MOV    R7,buf+02H
0196 AD00    R      MOV    R5,buf+03H
0198 120000  R      LCALL  _bytesToWord
019B 8E00    R      MOV    startAddress,R6
019D 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 135 
019F AF00    R      MOV    R7,buf+04H
01A1 AD00    R      MOV    R5,buf+05H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 14

01A3 120000  R      LCALL  _bytesToWord
01A6 8E00    R      MOV    quantity,R6
01A8 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 136 
01AA E500    R      MOV    A,quantity
01AC 4500    R      ORL    A,quantity+01H
01AE 600D           JZ     ?LAB152
01B0 E500    R      MOV    A,quantity
01B2 B40006         CJNE   A,#000H,?LAB153
01B5 E500    R      MOV    A,quantity+01H
01B7 B40901         CJNE   A,#009H,?LAB153
01BA D3             SETB   C
01BB         ?LAB153:
01BB 400A           JC     ?ELSE38
01BD         ?LAB152:
01BD E4             CLR    A
01BE FE             MOV    R6,A
01BF 7F03           MOV    R7,#003H
01C1 120000  R      LCALL  _oops
01C4 020000  R      LJMP   ?NXT67
01C7         ?ELSE38:
                                           ; SOURCE LINE # 137 
01C7 E500    R      MOV    A,quantity+01H
01C9 2500    R      ADD    A,startAddress+01H
01CB FE             MOV    R6,A
01CC E500    R      MOV    A,quantity
01CE 3500    R      ADDC   A,startAddress
01D0 B40005         CJNE   A,#000H,?LAB155
01D3 EE             MOV    A,R6
01D4 B50001  R      CJNE   A,numHoldingRegisters,?LAB155
01D7 D3             SETB   C
01D8         ?LAB155:
01D8 400A           JC     ?ELSE39
01DA E4             CLR    A
01DB FE             MOV    R6,A
01DC 7F02           MOV    R7,#002H
01DE 120000  R      LCALL  _oops
01E1 020000  R      LJMP   ?NXT67
01E4         ?ELSE39:
                                           ; SOURCE LINE # 139 
01E4 750000  R      MOV    j,#000H
01E7         ?FOR8:
01E7 E4             CLR    A
01E8 B50005  R      CJNE   A,quantity,?LAB157
01EB E500    R      MOV    A,j
01ED B50000  R      CJNE   A,quantity+01H,?LAB157
01F0         ?LAB157:
01F0 502F           JNC    ?NXT76
                                           ; SOURCE LINE # 140 
01F2 E500    R      MOV    A,startAddress+01H
01F4 2500    R      ADD    A,j
01F6 FF             MOV    R7,A
01F7 E4             CLR    A
01F8 3500    R      ADDC   A,startAddress
01FA FE             MOV    R6,A
01FB 120000  R      LCALL  _wordRead
01FE 8E00    R      MOV    value,R6
0200 8F00    R      MOV    value+01H,R7
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 15

                                           ; SOURCE LINE # 141 
0202 8007           SJMP   ?NXT78
                                           ; SOURCE LINE # 142 
0204 E4             CLR    A
0205 FE             MOV    R6,A
0206 7F04           MOV    R7,#004H
0208 020000  R      LJMP   _oops
020B         ?NXT78:
                                           ; SOURCE LINE # 145 
020B 75F002         MOV    B,#002H
020E E500    R      MOV    A,j
0210 A4             MUL    AB
0211 FF             MOV    R7,A
0212 2400    R      ADD    A,#buf+03H
0214 F8             MOV    R0,A
0215 A600    R      MOV    @R0,value
                                           ; SOURCE LINE # 146 
0217 EF             MOV    A,R7
0218 2400    R      ADD    A,#buf+04H
021A F8             MOV    R0,A
021B A600    R      MOV    @R0,value+01H
                                           ; SOURCE LINE # 139 
021D 0500    R      INC    j
021F 80C6           SJMP   ?FOR8
0221         ?NXT76:
                                           ; SOURCE LINE # 148 
0221 E500    R      MOV    A,quantity+01H
0223 C3             CLR    C
0224 33             RLC    A
0225 F500    R      MOV    buf+02H,A
                                           ; SOURCE LINE # 149 
0227 2403           ADD    A,#003H
0229 FF             MOV    R7,A
022A 020000  R      LJMP   _write
022D         ?CASE21:
                                           ; SOURCE LINE # 154 
022D AF00    R      MOV    R7,buf+02H
022F AD00    R      MOV    R5,buf+03H
0231 120000  R      LCALL  _bytesToWord
0234 8E00    R      MOV    startAddress,R6
0236 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 155 
0238 AF00    R      MOV    R7,buf+04H
023A AD00    R      MOV    R5,buf+05H
023C 120000  R      LCALL  _bytesToWord
023F 8E00    R      MOV    value,R6
0241 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 156 
0243 E500    R      MOV    A,value
0245 4500    R      ORL    A,value+01H
0247 6013           JZ     ?ELSE41
0249 E500    R      MOV    A,value
024B B4FF04         CJNE   A,#0FFH,?LAB160
024E E500    R      MOV    A,value+01H
0250 600A           JZ     ?ELSE41
0252         ?LAB160:
0252 E4             CLR    A
0253 FE             MOV    R6,A
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 16

0254 7F03           MOV    R7,#003H
0256 120000  R      LCALL  _oops
0259 020000  R      LJMP   ?NXT67
025C         ?ELSE41:
                                           ; SOURCE LINE # 157 
025C E500    R      MOV    A,startAddress
025E B40005         CJNE   A,#000H,?LAB162
0261 E500    R      MOV    A,startAddress+01H
0263 B50000  R      CJNE   A,numCoils,?LAB162
0266         ?LAB162:
0266 400A           JC     ?ELSE42
0268 E4             CLR    A
0269 FE             MOV    R6,A
026A 7F02           MOV    R7,#002H
026C 120000  R      LCALL  _oops
026F 020000  R      LJMP   ?NXT67
0272         ?ELSE42:
                                           ; SOURCE LINE # 158 
0272 AE00    R      MOV    R6,startAddress
0274 AF00    R      MOV    R7,startAddress+01H
0276 AC00    R      MOV    R4,value
0278 AD00    R      MOV    R5,value+01H
027A 120000  R      LCALL  _coilWrite
027D 400A           JC     ?ELSE43
027F E4             CLR    A
0280 FE             MOV    R6,A
0281 7F04           MOV    R7,#004H
0283 120000  R      LCALL  _oops
0286 020000  R      LJMP   ?NXT67
0289         ?ELSE43:
                                           ; SOURCE LINE # 159 
0289 7F06           MOV    R7,#006H
028B 020000  R      LJMP   _write
028E         ?CASE22:
                                           ; SOURCE LINE # 163 
028E AF00    R      MOV    R7,buf+02H
0290 AD00    R      MOV    R5,buf+03H
0292 120000  R      LCALL  _bytesToWord
0295 8E00    R      MOV    startAddress,R6
0297 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 164 
0299 AF00    R      MOV    R7,buf+04H
029B AD00    R      MOV    R5,buf+05H
029D 120000  R      LCALL  _bytesToWord
02A0 8E00    R      MOV    value,R6
02A2 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 165 
02A4 E500    R      MOV    A,startAddress
02A6 B40005         CJNE   A,#000H,?LAB164
02A9 E500    R      MOV    A,startAddress+01H
02AB B50000  R      CJNE   A,numHoldingRegisters,?LAB164
02AE         ?LAB164:
02AE 400A           JC     ?ELSE44
02B0 E4             CLR    A
02B1 FE             MOV    R6,A
02B2 7F02           MOV    R7,#002H
02B4 120000  R      LCALL  _oops
02B7 020000  R      LJMP   ?NXT67
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 17

02BA         ?ELSE44:
                                           ; SOURCE LINE # 166 
02BA AE00    R      MOV    R6,startAddress
02BC AF00    R      MOV    R7,startAddress+01H
02BE AC00    R      MOV    R4,value
02C0 AD00    R      MOV    R5,value+01H
02C2 120000  R      LCALL  _holdingRegisterWrite
02C5 400A           JC     ?ELSE45
02C7 E4             CLR    A
02C8 FE             MOV    R6,A
02C9 7F04           MOV    R7,#004H
02CB 120000  R      LCALL  _oops
02CE 020000  R      LJMP   ?NXT67
02D1         ?ELSE45:
                                           ; SOURCE LINE # 167 
02D1 7F06           MOV    R7,#006H
02D3 020000  R      LJMP   _write
02D6         ?CASE23:
                                           ; SOURCE LINE # 171 
02D6 AF00    R      MOV    R7,buf+02H
02D8 AD00    R      MOV    R5,buf+03H
02DA 120000  R      LCALL  _bytesToWord
02DD 8E00    R      MOV    startAddress,R6
02DF 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 172 
02E1 AF00    R      MOV    R7,buf+04H
02E3 AD00    R      MOV    R5,buf+05H
02E5 120000  R      LCALL  _bytesToWord
02E8 8E00    R      MOV    quantity,R6
02EA 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 173 
02EC E500    R      MOV    A,quantity
02EE 4500    R      ORL    A,quantity+01H
02F0 601D           JZ     ?LAB166
02F2 E500    R      MOV    A,quantity
02F4 B40006         CJNE   A,#000H,?LAB168
02F7 E500    R      MOV    A,quantity+01H
02F9 B47001         CJNE   A,#070H,?LAB168
02FC D3             SETB   C
02FD         ?LAB168:
02FD 5010           JNC    ?LAB166
02FF AE00    R      MOV    R6,quantity
0301 AF00    R      MOV    R7,quantity+01H
0303 120000  R      LCALL  _div8RndUp
0306 E4             CLR    A
0307 B50605         CJNE   A,AR6,?LAB166
030A E500    R      MOV    A,buf+06H
030C 6F             XRL    A,R7
030D 600A           JZ     ?ELSE46
030F         ?LAB166:
030F E4             CLR    A
0310 FE             MOV    R6,A
0311 7F03           MOV    R7,#003H
0313 120000  R      LCALL  _oops
0316 020000  R      LJMP   ?NXT67
0319         ?ELSE46:
                                           ; SOURCE LINE # 174 
0319 E500    R      MOV    A,quantity+01H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 18

031B 2500    R      ADD    A,startAddress+01H
031D FE             MOV    R6,A
031E E500    R      MOV    A,quantity
0320 3500    R      ADDC   A,startAddress
0322 B40005         CJNE   A,#000H,?LAB171
0325 EE             MOV    A,R6
0326 B50001  R      CJNE   A,numCoils,?LAB171
0329 D3             SETB   C
032A         ?LAB171:
032A 4009           JC     ?ELSE47
032C E4             CLR    A
032D FE             MOV    R6,A
032E 7F02           MOV    R7,#002H
0330 120000  R      LCALL  _oops
0333 806B           SJMP   ?NXT67
0335         ?ELSE47:
                                           ; SOURCE LINE # 176 
0335 750000  R      MOV    j,#000H
0338         ?FOR9:
0338 E4             CLR    A
0339 B50005  R      CJNE   A,quantity,?LAB173
033C E500    R      MOV    A,j
033E B50000  R      CJNE   A,quantity+01H,?LAB173
0341         ?LAB173:
0341 5051           JNC    ?NXT86
                                           ; SOURCE LINE # 177 
0343 E500    R      MOV    A,j
0345 5407           ANL    A,#007H
0347 7A00           MOV    R2,#000H
0349 F8             MOV    R0,A
034A 08             INC    R0
034B 7401           MOV    A,#001H
034D 8005           SJMP   ?LAB175
034F         ?LAB176:
034F C3             CLR    C
0350 33             RLC    A
0351 CA             XCH    A,R2
0352 33             RLC    A
0353 CA             XCH    A,R2
0354         ?LAB175:
0354 D8F9           DJNZ   R0,?LAB176
0356 FE             MOV    R6,A
0357 E500    R      MOV    A,j
0359 03             RR     A
035A 03             RR     A
035B 03             RR     A
035C 541F           ANL    A,#01FH
035E 2400    R      ADD    A,#buf+07H
0360 F9             MOV    R1,A
0361 E7             MOV    A,@R1
0362 FF             MOV    R7,A
0363 EE             MOV    A,R6
0364 5207           ANL    AR7,A
0366 750000  R      MOV    value,#000H
0369 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 178 
036B E500    R      MOV    A,value
036D 4500    R      ORL    A,value+01H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 19

036F 6006           JZ     ?NXT88
0371 7500FF  R      MOV    value,#0FFH
0374 E4             CLR    A
0375 F500    R      MOV    value+01H,A
0377         ?NXT88:
                                           ; SOURCE LINE # 179 
0377 E500    R      MOV    A,startAddress+01H
0379 2500    R      ADD    A,j
037B FF             MOV    R7,A
037C E4             CLR    A
037D 3500    R      ADDC   A,startAddress
037F FE             MOV    R6,A
0380 AC00    R      MOV    R4,value
0382 AD00    R      MOV    R5,value+01H
0384 120000  R      LCALL  _coilWrite
0387 4007           JC     ?NXT87
                                           ; SOURCE LINE # 180 
0389 E4             CLR    A
038A FE             MOV    R6,A
038B 7F04           MOV    R7,#004H
038D 020000  R      LJMP   _oops
0390         ?NXT87:
                                           ; SOURCE LINE # 176 
0390 0500    R      INC    j
0392 80A4           SJMP   ?FOR9
0394         ?NXT86:
                                           ; SOURCE LINE # 184 
0394 7F06           MOV    R7,#006H
0396 020000  R      LJMP   _write
0399         ?DEFAULT1:
                                           ; SOURCE LINE # 189 
0399 E4             CLR    A
039A FE             MOV    R6,A
039B 7F01           MOV    R7,#001H
039D 120000  R      LCALL  _oops
03A0         ?NXT67:

03A0         ?NXT60:
                                           ; SOURCE LINE # 194 
03A0 22             RET    

            ; FUNCTION modbusPoll (END)

            ; FUNCTION _boolRead (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
                                           ; SOURCE LINE # 199 
0000 BE0004         CJNE   R6,#000H,?LAB185
0003 BF0701         CJNE   R7,#007H,?LAB185
0006 D3             SETB   C
0007         ?LAB185:
0007 4003           JC     ?NXT92
0009 7F02           MOV    R7,#002H
                                           ; SOURCE LINE # 203 
000B 22             RET    
000C         ?NXT92:
              ; R3 is assigned to boolStatus
                                           ; SOURCE LINE # 200 
000C 8F00           MOV    AR0,R7
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 20

000E 08             INC    R0
000F 7401           MOV    A,#001H
0011 8002           SJMP   ?LAB188
0013         ?LAB189:
0013 C3             CLR    C
0014 33             RLC    A
0015         ?LAB188:
0015 D8FC           DJNZ   R0,?LAB189
0017 5590           ANL    A,P1
0019 FB             MOV    R3,A
                                           ; SOURCE LINE # 201 
001A 6002           JZ     ?NXT93
001C 7B01           MOV    R3,#001H
001E         ?NXT93:
                                           ; SOURCE LINE # 202 
001E 8B07           MOV    AR7,R3
                                           ; SOURCE LINE # 203 
0020 22             RET    

            ; FUNCTION _boolRead (END)

            ; FUNCTION _wordRead (BEGIN)
                                           ; SOURCE LINE # 205 
0000 8E00    R      MOV    startAddress,R6
0002 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 206 
0004 E500    R      MOV    A,startAddress
0006 B40005         CJNE   A,#000H,?LAB195
0009 E500    R      MOV    A,startAddress+01H
000B B40200         CJNE   A,#002H,?LAB195
000E         ?LAB195:
000E 500B           JNC    ?NXT95
0010 AE00    R      MOV    R6,startAddress
0012 AF00    R      MOV    R7,startAddress+01H
0014 120000  R      LCALL  _EEPROMread
0017 E4             CLR    A
0018 FC             MOV    R4,A
0019 FD             MOV    R5,A
                                           ; SOURCE LINE # 208 
001A 22             RET    
001B         ?NXT95:
                                           ; SOURCE LINE # 207 
001B 74FF           MOV    A,#0FFH
001D FC             MOV    R4,A
001E FD             MOV    R5,A
001F FE             MOV    R6,A
0020 FF             MOV    R7,A
                                           ; SOURCE LINE # 208 
0021 22             RET    

            ; FUNCTION _wordRead (END)

            ; FUNCTION _coilWrite (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
              ; Register R4R5 is assigned to parameter value
                                           ; SOURCE LINE # 211 
0000 BE0004         CJNE   R6,#000H,?LAB207
0003 BF0701         CJNE   R7,#007H,?LAB207
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 21

0006 D3             SETB   C
0007         ?LAB207:
0007 4002           JC     ?NXT98
0009 C3             CLR    C
                                           ; SOURCE LINE # 215 
000A 22             RET    
000B         ?NXT98:
                                           ; SOURCE LINE # 212 
000B EC             MOV    A,R4
000C 4D             ORL    A,R5
000D 7010           JNZ    ?ELSE59
000F 7401           MOV    A,#001H
0011 8F02           MOV    AR2,R7
0013 0A             INC    R2
0014 8002           SJMP   ?LAB210
0016         ?LAB211:
0016 C3             CLR    C
0017 33             RLC    A
0018         ?LAB210:
0018 DAFC           DJNZ   R2,?LAB211
001A F4             CPL    A
001B 5290           ANL    P1,A
001D 800D           SJMP   ?NXT99
001F         ?ELSE59:
                                           ; SOURCE LINE # 213 
001F 8F02           MOV    AR2,R7
0021 0A             INC    R2
0022 7401           MOV    A,#001H
0024 8002           SJMP   ?LAB212
0026         ?LAB213:
0026 C3             CLR    C
0027 33             RLC    A
0028         ?LAB212:
0028 DAFC           DJNZ   R2,?LAB213
002A 4290           ORL    P1,A
002C         ?NXT99:
                                           ; SOURCE LINE # 214 
002C D3             SETB   C
                                           ; SOURCE LINE # 215 
002D 22             RET    

            ; FUNCTION _coilWrite (END)

            ; FUNCTION _holdingRegisterWrite (BEGIN)
              ; Register R2R3 is assigned to parameter startAddress
                                           ; SOURCE LINE # 217 
0000 8E02           MOV    AR2,R6
0002 8F03           MOV    AR3,R7
0004 8C00    R      MOV    value,R4
0006 8D00    R      MOV    value+01H,R5
                                           ; SOURCE LINE # 218 
0008 BE0004         CJNE   R6,#000H,?LAB219
000B BF0101         CJNE   R7,#001H,?LAB219
000E D3             SETB   C
000F         ?LAB219:
000F 4002           JC     ?NXT101
0011 C3             CLR    C
                                           ; SOURCE LINE # 221 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 22

0012 22             RET    
0013         ?NXT101:
                                           ; SOURCE LINE # 219 
0013 8A06           MOV    AR6,R2
0015 8B07           MOV    AR7,R3
0017 AC00    R      MOV    R4,value
0019 AD00    R      MOV    R5,value+01H
001B 120000  R      LCALL  _EEPROMwrite
                                           ; SOURCE LINE # 220 
001E D3             SETB   C
                                           ; SOURCE LINE # 221 
001F 22             RET    

            ; FUNCTION _holdingRegisterWrite (END)

            ; FUNCTION _oops (BEGIN)
              ; Register R6R7 is assigned to parameter errCode
                                           ; SOURCE LINE # 224 
0000 430080  R      ORL    buf+01H,#080H
                                           ; SOURCE LINE # 225 
0003 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 226 
0005 7F03           MOV    R7,#003H
0007 020000  R      LJMP   _write

            ; FUNCTION _oops (END)

            ; FUNCTION _write (BEGIN)
                                           ; SOURCE LINE # 229 
0000 8F00    R      MOV    len,R7
                                           ; SOURCE LINE # 233 
0002 E500    R      MOV    A,buf
0004 6044           JZ     ?NXT105
                                           ; SOURCE LINE # 234 
0006 120000  R      LCALL  _crc
                                           ; SOURCE LINE # 236 
0009 EF             MOV    A,R7
000A FB             MOV    R3,A
                                           ; SOURCE LINE # 234 
000B 8E00    R      MOV    CRC,R6
000D 8F00    R      MOV    CRC+01H,R7
                                           ; SOURCE LINE # 236 
000F E500    R      MOV    A,len
0011 2400    R      ADD    A,#buf
0013 F8             MOV    R0,A
0014 A603           MOV    @R0,AR3
                                           ; SOURCE LINE # 237 
0016 E500    R      MOV    A,len
0018 2400    R      ADD    A,#buf+01H
001A F8             MOV    R0,A
001B A600    R      MOV    @R0,CRC
                                           ; SOURCE LINE # 239 
001D D2B5           SETB   T1
                                           ; SOURCE LINE # 240 
001F 750000  R      MOV    i,#000H
0022         ?FOR11:
0022 E500    R      MOV    A,len
0024 2402           ADD    A,#002H
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 23

0026 FB             MOV    R3,A
0027 E4             CLR    A
0028 33             RLC    A
0029 F5F0           MOV    B,A
002B B2F7           CPL    B.7
002D 7480           MOV    A,#080H
002F B5F006         CJNE   A,B,?LAB228
0032 E500    R      MOV    A,i
0034 B50301         CJNE   A,AR3,?LAB228
0037 D3             SETB   C
0038         ?LAB228:
0038 500E           JNC    ?NXT106
003A E500    R      MOV    A,i
003C 2400    R      ADD    A,#buf
003E F8             MOV    R0,A
003F 8607           MOV    AR7,@R0
0041 120000  R      LCALL  _serialTX
0044 0500    R      INC    i
0046 80DA           SJMP   ?FOR11
0048         ?NXT106:
                                           ; SOURCE LINE # 241 
0048 C2B5           CLR    T1
004A         ?NXT105:
                                           ; SOURCE LINE # 243 
004A 22             RET    

            ; FUNCTION _write (END)

            ; FUNCTION _crc (BEGIN)
              ; Register R7 is assigned to parameter len
              ; R4R5 is assigned to crc
                                           ; SOURCE LINE # 248 
0000 74FF           MOV    A,#0FFH
0002 FC             MOV    R4,A
0003 FD             MOV    R5,A
              ; R6 is assigned to i
                                           ; SOURCE LINE # 250 
0004 7E00           MOV    R6,#000H
0006         ?FOR14:
0006 EE             MOV    A,R6
0007 B50700         CJNE   A,AR7,?LAB237
000A         ?LAB237:
000A 5032           JNC    ?NXT113
                                           ; SOURCE LINE # 251 
000C 2400    R      ADD    A,#buf
000E F8             MOV    R0,A
000F E6             MOV    A,@R0
0010 FB             MOV    R3,A
0011 ED             MOV    A,R5
0012 6B             XRL    A,R3
0013 FD             MOV    R5,A
                                           ; SOURCE LINE # 252 
0014 750000  R      MOV    j,#000H
0017         ?FOR15:
                                           ; SOURCE LINE # 253 
0017 ED             MOV    A,R5
0018 5401           ANL    A,#001H
001A 24FF           ADD    A,#0FFH
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 24

001C 9200    R      MOV    lsb,C
                                           ; SOURCE LINE # 254 
001E 8D03           MOV    AR3,R5
0020 EC             MOV    A,R4
0021 C3             CLR    C
0022 13             RRC    A
0023 CB             XCH    A,R3
0024 13             RRC    A
0025 CB             XCH    A,R3
0026 FC             MOV    R4,A
0027 8B05           MOV    AR5,R3
                                           ; SOURCE LINE # 255 
0029 300008  R      JNB    lsb,?NXT116
                                           ; SOURCE LINE # 256 
002C EB             MOV    A,R3
002D 6401           XRL    A,#001H
002F FD             MOV    R5,A
0030 EC             MOV    A,R4
0031 64A0           XRL    A,#0A0H
0033 FC             MOV    R4,A
0034         ?NXT116:
                                           ; SOURCE LINE # 252 
0034 0500    R      INC    j
0036 E500    R      MOV    A,j
0038 B408DC         CJNE   A,#008H,?FOR15
                                           ; SOURCE LINE # 250 
003B 0E             INC    R6
003C 80C8           SJMP   ?FOR14
003E         ?NXT113:
                                           ; SOURCE LINE # 260 
003E 8C06           MOV    AR6,R4
0040 8D07           MOV    AR7,R5
                                           ; SOURCE LINE # 261 
0042 22             RET    

            ; FUNCTION _crc (END)

            ; FUNCTION _div8RndUp (BEGIN)
              ; Register R6R7 is assigned to parameter value
                                           ; SOURCE LINE # 264 
0000 EF             MOV    A,R7
0001 2407           ADD    A,#007H
0003 FF             MOV    R7,A
0004 E4             CLR    A
0005 3E             ADDC   A,R6
0006 75F003         MOV    B,#003H
0009         ?LAB243:
0009 C3             CLR    C
000A 13             RRC    A
000B CF             XCH    A,R7
000C 13             RRC    A
000D CF             XCH    A,R7
000E D5F0F8         DJNZ   B,?LAB243
0011 FE             MOV    R6,A
                                           ; SOURCE LINE # 265 
0012 22             RET    

            ; FUNCTION _div8RndUp (END)
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 25


            ; FUNCTION _bytesToWord (BEGIN)
              ; Register R7 is assigned to parameter high
              ; Register R5 is assigned to parameter low
                                           ; SOURCE LINE # 268 
0000 ED             MOV    A,R5
0001 FB             MOV    R3,A
0002 7A00           MOV    R2,#000H
0004 C002           PUSH   AR2
0006 C003           PUSH   AR3
0008 EF             MOV    A,R7
0009 FA             MOV    R2,A
000A D007           POP    AR7
000C D0E0           POP    ACC
000E 4A             ORL    A,R2
000F FE             MOV    R6,A
                                           ; SOURCE LINE # 269 
0010 22             RET    

            ; FUNCTION _bytesToWord (END)

            ; FUNCTION _blink (BEGIN)
              ; Register R7 is assigned to parameter X
                                           ; SOURCE LINE # 275 
0000 C2B5           CLR    T1
                                           ; SOURCE LINE # 276 
0002 120000  R      LCALL  milliStart
0005         ?WHILE13:
                                           ; SOURCE LINE # 277 
0005 E500    R      MOV    A,milli
0007 B40005         CJNE   A,#000H,?LAB256
000A E500    R      MOV    A,milli+01H
000C B4FA00         CJNE   A,#0FAH,?LAB256
000F         ?LAB256:
000F 40F4           JC     ?WHILE13
              ; R6 is assigned to i
                                           ; SOURCE LINE # 279 
0011 7E00           MOV    R6,#000H
0013         ?FOR17:
0013 EE             MOV    A,R6
0014 B50700         CJNE   A,AR7,?LAB258
0017         ?LAB258:
0017 5025           JNC    ?NXT124
                                           ; SOURCE LINE # 280 
0019 D2B5           SETB   T1
                                           ; SOURCE LINE # 281 
001B 120000  R      LCALL  milliStart
001E         ?WHILE14:
                                           ; SOURCE LINE # 282 
001E E500    R      MOV    A,milli
0020 B40005         CJNE   A,#000H,?LAB260
0023 E500    R      MOV    A,milli+01H
0025 B4FA00         CJNE   A,#0FAH,?LAB260
0028         ?LAB260:
0028 40F4           JC     ?WHILE14
                                           ; SOURCE LINE # 283 
002A C2B5           CLR    T1
                                           ; SOURCE LINE # 284 
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 26

002C 120000  R      LCALL  milliStart
002F         ?WHILE15:
                                           ; SOURCE LINE # 285 
002F E500    R      MOV    A,milli
0031 B40005         CJNE   A,#000H,?LAB262
0034 E500    R      MOV    A,milli+01H
0036 B4FA00         CJNE   A,#0FAH,?LAB262
0039         ?LAB262:
0039 40F4           JC     ?WHILE15
                                           ; SOURCE LINE # 279 
003B 0E             INC    R6
003C 80D5           SJMP   ?FOR17
003E         ?NXT124:
                                           ; SOURCE LINE # 8 
003E 22             RET    

            ; FUNCTION _blink (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 15 
0000 7F05           MOV    R7,#005H
0002 120000  R      LCALL  _blink
                                           ; SOURCE LINE # 17 
0005 750008  R      MOV    numCoils,#008H
                                           ; SOURCE LINE # 18 
0008 E4             CLR    A
0009 F500    R      MOV    numDiscreteInputs,A
                                           ; SOURCE LINE # 19 
000B 750002  R      MOV    numHoldingRegisters,#002H
                                           ; SOURCE LINE # 21 
000E 750025  R      MOV    baud,#025H
0011 750080  R      MOV    baud+01H,#080H
                                           ; SOURCE LINE # 22 
0014 F500    R      MOV    id,A
0016 750007  R      MOV    id+01H,#007H
                                           ; SOURCE LINE # 24 
0019 30B419         JNB    T0,?NXT130
                                           ; SOURCE LINE # 25 
001C FE             MOV    R6,A
001D FF             MOV    R7,A
001E 120000  R      LCALL  _EEPROMread
0021 8E00    R      MOV    baud,R6
0023 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 26 
0025 E4             CLR    A
0026 FE             MOV    R6,A
0027 7F02           MOV    R7,#002H
0029 120000  R      LCALL  _EEPROMread
002C 8E00    R      MOV    id,R6
002E 8F00    R      MOV    id+01H,R7
                                           ; SOURCE LINE # 27 
0030 7F02           MOV    R7,#002H
0032 120000  R      LCALL  _blink
0035         ?NXT130:
                                           ; SOURCE LINE # 29 
0035 AE00    R      MOV    R6,baud
0037 AF00    R      MOV    R7,baud+01H
0039 120000  R      LCALL  _serialInit
RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:05  PAGE 28

                                           ; SOURCE LINE # 30 
003C AE00    R      MOV    R6,baud
003E AF00    R      MOV    R7,baud+01H
0040 120000  R      LCALL  _modbusBegin
0043         ?WHILE17:
                                           ; SOURCE LINE # 33 
0043 120000  R      LCALL  modbusPoll
0046 80FB           SJMP   ?WHILE17

            ; FUNCTION main (END)

RC51 COMPILER V06.20.17.263,  DO_8               09/25/22  14:56:06  PAGE 30



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1918    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  3 WARNINGS,  0 ERROR
