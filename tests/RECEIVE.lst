0001   0000             ;==================================================================================
0002   0000             ; RECEIVE is a program that runs on CP/M. On the Windows console the is a 
0003   0000             ; counterpart program called SEND.PY.
0004   0000             ;
0005   0000             ; How it works? SEND sends an archive, converting each byte into a pair of
0006   0000             ; ASCII characters. For example, byte 0x2F will be transmitted as 0x32 0x46.
0007   0000             ; Packets of 128 bytes (256 characters) are transmitted. This gives time to the 
0008   0000             ; receiver to save a block on disk. After completing the disk write operation,
0009   0000             ; the reciver sends an ACK (6) to the transmitter so it can continue transmitting.
0010   0000             ; When the end of file has been reached, an EOT (4) is sent, followed by the CRC,
0011   0000             ; also in ASCII (2 bytes).
0012   0000             ; RECEIVE writes the last block, closes the file and sends an ACK if all went OK.
0013   0000             ; Otherwise, it sends a NAK (21).
0014   0000             ;==================================================================================
0015   0000             TPA			.EQU	100H
0016   0000             REBOOT		.EQU	0H
0017   0000             BDOS		.EQU	5H
0018   0000             
0019   0000             C_RAWIO		.EQU	6
0020   0000             C_READ		.EQU	1
0021   0000             C_WRITE		.EQU	2
0022   0000             C_WRITESTR	.EQU	9
0023   0000             F_MAKE		.EQU	22
0024   0000             F_CLOSE		.EQU	16
0025   0000             F_WRITE		.EQU	21
0026   0000             F_DELETE	.EQU	19
0027   0000             
0028   0000             STX			.EQU	02H
0029   0000             EOT			.EQU	04H
0030   0000             ACK			.EQU	06H
0031   0000             LF			.EQU	0AH
0032   0000             CR			.EQU	0DH
0033   0000             NAK			.EQU	015H
0034   0000             		
0035   0000             FCB			.EQU	05CH
0036   0000             BUFF		.EQU	080H
0037   0000             ;==================================================================================
0038   0100             			.ORG TPA
0039   0100 3E 06       			LD	A,ACK				; Ok, I'm alive. You can start communication.
0040   0102 CD CA 01    			CALL PUTCHAR
0041   0105             
0042   0105 CD BE 01    NEWFILE:	CALL GETCHAR			; Get Drive letter (A...P)
0043   0108 D6 40       			SUB	040H				; convert from ASCII letter to byte (A=1, B=2...)
0044   010A 21 5C 00    			LD	HL,FCB
0045   010D 77          			LD	(HL),A
0046   010E 23          			INC	HL
0047   010F 06 0B       			LD	B,11
0048   0111 C5          NEXT1:		PUSH BC
0049   0112 CD BE 01    			CALL GETCHAR			; Get 11 chars,8 from name + 3 type (NNNNNNNN.TTT)
0050   0115 77          			LD	(HL),A
0051   0116 23          			INC	HL
0052   0117 C1          			POP	BC
0053   0118 05          			DEC	B
0054   0119 20 F6       			JR	NZ,NEXT1
0055   011B 3E 00       			LD	A,0
0056   011D 77          			LD (HL),A				; Extension = 0
0057   011E             
0058   011E 3E 00       			LD	A,0					; Set initial parameters
0059   0120 32 EC 01    			LD	(checkSum),A
0060   0123 21 80 00    			LD	HL,BUFF
0061   0126 22 EA 01    			LD	(buffPtr),HL
0062   0129             			
0063   0129 0E 13       			LD	C,F_DELETE			; Delete file
0064   012B 11 5C 00    			LD	DE,FCB
0065   012E CD 05 00    			CALL BDOS
0066   0131             
0067   0131 0E 16       			LD	C,F_MAKE			; Create file
0068   0133 11 5C 00    			LD	DE,FCB
0069   0136 CD 05 00    			CALL BDOS
0070   0139             			
0071   0139 3E 06       			LD	A,ACK				; Tell SEND to start xmit archive.
0072   013B CD CA 01    			CALL PUTCHAR
0073   013E             
0074   013E CD BE 01    GETHEX:		CALL GETCHAR				; Start receiving the archive
0075   0141 FE 04       			CP	EOT
0076   0143 28 35       			JR	Z,CLOSE
0077   0145 47          			LD	B,A
0078   0146 C5          			PUSH BC
0079   0147 CD BE 01    			CALL GETCHAR
0080   014A C1          			POP	BC
0081   014B 4F          			LD	C,A
0082   014C CD D1 01    			CALL BCTOA
0083   014F             
0084   014F 47          			LD	B,A					; Update checksum
0085   0150 3A EC 01    			LD	A,(checkSum)
0086   0153 80          			ADD	A,B
0087   0154 32 EC 01    			LD	(checkSum),A
0088   0157             			
0089   0157 78          			LD	A,B					; Put received byte in buffer
0090   0158 2A EA 01    			LD	HL,(buffPtr)
0091   015B 77          			LD	(HL),A
0092   015C 23          			INC	HL
0093   015D 22 EA 01    			LD	(buffPtr),HL
0094   0160 7C          			LD	A,H
0095   0161 FE 01       			CP	1					; Check if we reached the end of the buffer
0096   0163 20 D9       			JR	NZ,GETHEX
0097   0165             
0098   0165 0E 15       			LD	C,F_WRITE			; We got a full buffer. Write it on disk.
0099   0167 11 5C 00    			LD	DE,FCB
0100   016A CD 05 00    			CALL BDOS
0101   016D             
0102   016D 21 80 00    			LD	HL,BUFF				; Reset buffer.
0103   0170 22 EA 01    			LD	(buffPtr),HL
0104   0173             			
0105   0173 3E 06       			LD	A,ACK				; Tell SEND to resume transmission.
0106   0175 CD CA 01    			CALL PUTCHAR
0107   0178 18 C4       			JR	GETHEX
0108   017A             
0109   017A 01 80 00    CLOSE:		LD	BC,BUFF				; Check if buffer is empty
0110   017D 2A EA 01    			LD	HL,(buffPtr)
0111   0180 37          			SCF
0112   0181 3F          			CCF
0113   0182 ED 42       			SBC	HL,BC
0114   0184 28 08       			JR	Z,BEMPTY
0115   0186             
0116   0186 0E 15       			LD	C,F_WRITE			; Write the last block to file.
0117   0188 11 5C 00    			LD	DE,FCB
0118   018B CD 05 00    			CALL BDOS
0119   018E             
0120   018E 0E 10       BEMPTY:		LD	C,F_CLOSE			; Close the file.
0121   0190 11 5C 00    			LD	DE,FCB
0122   0193 CD 05 00    			CALL BDOS
0123   0196             
0124   0196 CD BE 01    			CALL GETCHAR			; Get checksum
0125   0199 47          			LD   B,A
0126   019A C5          			PUSH BC
0127   019B CD BE 01    			CALL GETCHAR
0128   019E C1          			POP BC
0129   019F 4F          			LD   C,A
0130   01A0 CD D1 01    			CALL BCTOA
0131   01A3 47          			LD	B,A
0132   01A4 3A EC 01    			LD	A,(checkSum)
0133   01A7 90          			SUB	B
0134   01A8 FE 00       			CP	0
0135   01AA 3E 06       			LD	A,ACK
0136   01AC 28 02       			JR	Z,CHECKOK
0137   01AE 3E 15       			LD	A,NAK
0138   01B0 CD CA 01    CHECKOK:	CALL PUTCHAR
0139   01B3             
0140   01B3 CD BE 01    			CALL GETCHAR
0141   01B6 FE 02       			CP	STX
0142   01B8 CA 05 01    			JP	Z,NEWFILE
0143   01BB             
0144   01BB C3 00 00    			JP	REBOOT
0145   01BE             
0146   01BE             ;==================================================================================
0147   01BE             ; Wait for a char into A (no echo)
0148   01BE             ;==================================================================================
0149   01BE 1E FF       GETCHAR:	LD	E,$FF
0150   01C0 0E 06       			LD 	C,C_RAWIO
0151   01C2 CD 05 00    			CALL BDOS
0152   01C5 FE 00       			CP	0
0153   01C7 28 F5       			JR	Z,GETCHAR
0154   01C9 C9          			RET
0155   01CA             
0156   01CA             ;==================================================================================
0157   01CA             ; Write A to output
0158   01CA             ;==================================================================================
0159   01CA 0E 02       PUTCHAR:	LD C,C_WRITE
0160   01CC 5F          			LD E,A
0161   01CD CD 05 00    			CALL BDOS
0162   01D0 C9          			RET
0163   01D1             
0164   01D1             ;==================================================================================
0165   01D1             ; Convert ASCII characters in BC to a byte in A
0166   01D1             ;==================================================================================
0167   01D1 78          BCTOA:		LD   A,B				
0168   01D2 D6 30       			SUB  $30
0169   01D4 FE 0A       			CP   $0A
0170   01D6 38 02       			JR   C,BCTOA1
0171   01D8 D6 07       			SUB  $07
0172   01DA 07          BCTOA1:		RLCA
0173   01DB 07          			RLCA
0174   01DC 07          			RLCA
0175   01DD 07          			RLCA
0176   01DE 47          			LD   B,A
0177   01DF 79          			LD   A,C
0178   01E0 D6 30       			SUB  $30
0179   01E2 FE 0A       			CP   $0A
0180   01E4 38 02       			JR   C,BCTOA2
0181   01E6 D6 07       			SUB  $07
0182   01E8 80          BCTOA2:		ADD  A,B
0183   01E9 C9          			RET
0184   01EA             			
0185   01EA             ;==================================================================================
0186   01EA 00 00       buffPtr		.DW	0000H
0187   01EC 00          checkSum 	.DB	0H
0188   01ED             
0189   01ED             			.END
tasm: Number of errors = 0
