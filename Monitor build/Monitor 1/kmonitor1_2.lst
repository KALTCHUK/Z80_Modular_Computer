0001   0000             ;Monitor 1.0: Commands available: Read memory, Write to memory, Jump to address.
0002   0000             ;Monitor 1.1: Commands added: write Hex to memory, Test memory range.
0003   0000             ;Monitor 1.2: Commands modified: Read memory accepts multiple scrolls.
0004   0000             ;
0005   0000             ;==================================================================================
0006   0000             ; Monitor for Z80 Modular Computer by P.R.Kaltchuk 2020
0007   0000             ;==================================================================================
0008   0000             BIOS			.EQU	0E600H		; BIOS entry point
0009   0000             LF			.EQU	0AH			; line feed
0010   0000             FF			.EQU	0CH			; form feed
0011   0000             CR			.EQU	0DH			; carriage return
0012   0000             SPACE			.EQU	020H			; space
0013   0000             COLON			.EQU	03AH			; colon
0014   0000             
0015   0000             READCOLS		.EQU	010H			; parameters used for read memory command (READCMD)
0016   0000             READLINES		.EQU	010H
0017   0000             
0018   0000             ;================================================================================================
0019   D000             			.ORG 0D000H
0020   D000             
0021   D000             MONITOR:
0022   D000 CD 33 E6    		CALL	PRINTSEQ
0023   D003 5A 38 30 20 		.TEXT	"Z80 Modular Computer Monitor V1.2 by Kaltchuk, Sep/2020"
0023   D007 4D 6F 64 75 
0023   D00B 6C 61 72 20 
0023   D00F 43 6F 6D 70 
0023   D013 75 74 65 72 
0023   D017 20 4D 6F 6E 
0023   D01B 69 74 6F 72 
0023   D01F 20 56 31 2E 
0023   D023 32 20 62 79 
0023   D027 20 4B 61 6C 
0023   D02B 74 63 68 75 
0023   D02F 6B 2C 20 53 
0023   D033 65 70 2F 32 
0023   D037 30 32 30 
0024   D03A 0D 0A 0D 0A 		.DB	CR,LF,CR,LF,0
0024   D03E 00 
0025   D03F             CMDLIST:
0026   D03F CD 33 E6    		CALL	PRINTSEQ
0027   D042 56 61 6C 69 		.TEXT	"Valid commands:"
0027   D046 64 20 63 6F 
0027   D04A 6D 6D 61 6E 
0027   D04E 64 73 3A 
0028   D051 0D 0A       		.DB	CR,LF
0029   D053 20 20 20 52 		.TEXT	"   Raaaa   read memory starting at aaaa"
0029   D057 61 61 61 61 
0029   D05B 20 20 20 72 
0029   D05F 65 61 64 20 
0029   D063 6D 65 6D 6F 
0029   D067 72 79 20 73 
0029   D06B 74 61 72 74 
0029   D06F 69 6E 67 20 
0029   D073 61 74 20 61 
0029   D077 61 61 61 
0030   D07A 0D 0A       		.DB	CR,LF
0031   D07C 20 20 20 57 		.TEXT	"   Waaaa   write to memory starting at aaaa"
0031   D080 61 61 61 61 
0031   D084 20 20 20 77 
0031   D088 72 69 74 65 
0031   D08C 20 74 6F 20 
0031   D090 6D 65 6D 6F 
0031   D094 72 79 20 73 
0031   D098 74 61 72 74 
0031   D09C 69 6E 67 20 
0031   D0A0 61 74 20 61 
0031   D0A4 61 61 61 
0032   D0A7 0D 0A       		.DB	CR,LF
0033   D0A9 20 20 20 48 		.TEXT	"   H       write intel hex format to memory"
0033   D0AD 20 20 20 20 
0033   D0B1 20 20 20 77 
0033   D0B5 72 69 74 65 
0033   D0B9 20 69 6E 74 
0033   D0BD 65 6C 20 68 
0033   D0C1 65 78 20 66 
0033   D0C5 6F 72 6D 61 
0033   D0C9 74 20 74 6F 
0033   D0CD 20 6D 65 6D 
0033   D0D1 6F 72 79 
0034   D0D4 0D 0A       		.DB	CR,LF
0035   D0D6 20 20 20 4A 		.TEXT	"   Jaaaa   jump to address aaaa"
0035   D0DA 61 61 61 61 
0035   D0DE 20 20 20 6A 
0035   D0E2 75 6D 70 20 
0035   D0E6 74 6F 20 61 
0035   D0EA 64 64 72 65 
0035   D0EE 73 73 20 61 
0035   D0F2 61 61 61 
0036   D0F5 0D 0A 0D 0A 		.DB	CR,LF,CR,LF
0037   D0F9 20 20 20 2A 		.TEXT	"   * Where aaaa is always a 4-character hex value."
0037   D0FD 20 57 68 65 
0037   D101 72 65 20 61 
0037   D105 61 61 61 20 
0037   D109 69 73 20 61 
0037   D10D 6C 77 61 79 
0037   D111 73 20 61 20 
0037   D115 34 2D 63 68 
0037   D119 61 72 61 63 
0037   D11D 74 65 72 20 
0037   D121 68 65 78 20 
0037   D125 76 61 6C 75 
0037   D129 65 2E 
0038   D12B 0D 0A 00    		.DB	CR,LF,0
0039   D12E             
0040   D12E ED 56       		IM	1
0041   D130 FB          		EI
0042   D131             
0043   D131             ;================================================================================================
0044   D131             ; Wait for command
0045   D131             ;================================================================================================
0046   D131 CD 33 E6    WAITCMD:	CALL	PRINTSEQ
0047   D134 0D 0A 3E 00 		.DB	CR,LF,03EH,0
0048   D138             
0049   D138 CD 09 E6    		CALL CONIN
0050   D13B             
0051   D13B FE 52       		CP	'R'
0052   D13D CA 8B D1    		JP	Z,READCMD
0053   D140 FE 72       		CP	'r'
0054   D142 CA 8B D1    		JP	Z,READCMD
0055   D145             
0056   D145 FE 57       		CP	'W'
0057   D147 CA F1 D2    		JP	Z,WRITECMD
0058   D14A FE 77       		CP	'w'
0059   D14C CA F1 D2    		JP	Z,WRITECMD
0060   D14F             
0061   D14F FE 48       		CP	'H'
0062   D151 CA 87 D3    		JP	Z,HEXCMD
0063   D154 FE 68       		CP	'h'
0064   D156 CA 87 D3    		JP	Z,HEXCMD
0065   D159             
0066   D159 FE 4A       		CP	'J'
0067   D15B CA 5F D4    		JP	Z,JUMPCMD
0068   D15E FE 6A       		CP	'j'
0069   D160 CA 5F D4    		JP	Z,JUMPCMD
0070   D163             
0071   D163 FE 54       		CP	'T'
0072   D165 CA 6A D4    		JP	Z,TESTCMD
0073   D168 FE 74       		CP	't'
0074   D16A CA 6A D4    		JP	Z,TESTCMD
0075   D16D             
0076   D16D             UNKNOWNCMD:
0077   D16D CD 1B D5    		CALL FLUSHBUF
0078   D170 CD 33 E6    		CALL	PRINTSEQ
0079   D173 0D 0A       		.DB CR,LF
0080   D175 55 6E 6B 6E 		.TEXT "Unknown command."
0080   D179 6F 77 6E 20 
0080   D17D 63 6F 6D 6D 
0080   D181 61 6E 64 2E 
0081   D185 0D 0A 00    		.DB CR,LF,0
0082   D188 C3 3F D0    		JP	CMDLIST
0083   D18B             
0084   D18B             ;================================================================================================
0085   D18B             ; Read memory, starting at address aaaa
0086   D18B             ;================================================================================================
0087   D18B             READCMD:
0088   D18B CD A9 D4    		CALL	GETADDR		; DE holds the address to start reading
0089   D18E FE 00       		CP	0
0090   D190 CA 3F D0    		JP	Z,CMDLIST
0091   D193 3E F0       PGDN:		LD	A,0F0H
0092   D195 A3          		AND	E
0093   D196 5F          		LD	E,A			; DE converted from AAAA to AAA0
0094   D197 D5          		PUSH	DE
0095   D198 DD E1       		POP	IX			; from now on, IX will hold the address
0096   D19A CD 33 E6    		CALL	PRINTSEQ		; print header
0097   D19D 0D 0A       		.DB CR,LF
0098   D19F 41 44 44 52 		.TEXT "ADDR: 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  0123456789ABCDEF"
0098   D1A3 3A 20 30 30 
0098   D1A7 20 30 31 20 
0098   D1AB 30 32 20 30 
0098   D1AF 33 20 30 34 
0098   D1B3 20 30 35 20 
0098   D1B7 30 36 20 30 
0098   D1BB 37 20 30 38 
0098   D1BF 20 30 39 20 
0098   D1C3 30 41 20 30 
0098   D1C7 42 20 30 43 
0098   D1CB 20 30 44 20 
0098   D1CF 30 45 20 30 
0098   D1D3 46 20 20 30 
0098   D1D7 31 32 33 34 
0098   D1DB 35 36 37 38 
0098   D1DF 39 41 42 43 
0098   D1E3 44 45 46 
0099   D1E6 0D 0A       		.DB CR,LF
0100   D1E8 2D 2D 2D 2D 		.TEXT "----- -----------------------------------------------  ----------------"
0100   D1EC 2D 20 2D 2D 
0100   D1F0 2D 2D 2D 2D 
0100   D1F4 2D 2D 2D 2D 
0100   D1F8 2D 2D 2D 2D 
0100   D1FC 2D 2D 2D 2D 
0100   D200 2D 2D 2D 2D 
0100   D204 2D 2D 2D 2D 
0100   D208 2D 2D 2D 2D 
0100   D20C 2D 2D 2D 2D 
0100   D210 2D 2D 2D 2D 
0100   D214 2D 2D 2D 2D 
0100   D218 2D 2D 2D 2D 
0100   D21C 2D 20 20 2D 
0100   D220 2D 2D 2D 2D 
0100   D224 2D 2D 2D 2D 
0100   D228 2D 2D 2D 2D 
0100   D22C 2D 2D 2D 
0101   D22F 0D 0A 00    		.DB CR,LF,0
0102   D232 16 10       		LD	D,READLINES	; lines
0103   D234 1E 10       NEWL:		LD	E,READCOLS		; columns
0104   D236 DD E5       		PUSH	IX			; prepare to print address
0105   D238 E1          		POP	HL
0106   D239 44          		LD	B,H
0107   D23A CD 5C D5    		CALL	HEX2ASCII
0108   D23D 4C          		LD	C,H
0109   D23E CD 0C E6    		CALL	CONOUT
0110   D241 4D          		LD	C,L
0111   D242 CD 0C E6    		CALL	CONOUT
0112   D245 DD E5       		PUSH	IX
0113   D247 E1          		POP	HL
0114   D248 45          		LD	B,L
0115   D249 CD 5C D5    		CALL	HEX2ASCII
0116   D24C 4C          		LD	C,H
0117   D24D CD 0C E6    		CALL	CONOUT
0118   D250 4D          		LD	C,L
0119   D251 CD 0C E6    		CALL	CONOUT
0120   D254 0E 3A       		LD	C,COLON
0121   D256 CD 0C E6    		CALL	CONOUT
0122   D259 0E 20       		LD	C,SPACE
0123   D25B CD 0C E6    		CALL	CONOUT
0124   D25E DD E5       		PUSH	IX
0125   D260 FD E1       		POP	IY			; IY holds a copy of the 1st memory address from current line
0126   D262 DD 7E 00    NEWC:		LD	A,(IX)		; prepare to print memory contents
0127   D265 47          		LD	B,A
0128   D266 CD 5C D5    		CALL	HEX2ASCII		; now HL contains the ASCII exivalent of memory content
0129   D269 4C          		LD	C,H
0130   D26A CD 0C E6    		CALL	CONOUT
0131   D26D 4D          		LD	C,L
0132   D26E CD 0C E6    		CALL	CONOUT
0133   D271 0E 20       		LD	C,SPACE
0134   D273 CD 0C E6    		CALL	CONOUT
0135   D276 DD 23       		INC	IX
0136   D278 1D          		DEC	E
0137   D279 20 E7       		JR	NZ,NEWC
0138   D27B 0E 20       		LD	C,SPACE
0139   D27D CD 0C E6    		CALL CONOUT
0140   D280 1E 10       		LD	E,READCOLS		; now start doing the printables' area
0141   D282 FD 7E 00    NEWCP:	LD	A,(IY)
0142   D285 FE 20       		CP	020H
0143   D287 FA 8E D2    		JP	M,NOTPTBL
0144   D28A 4F          		LD	C,A
0145   D28B C3 90 D2    		JP 	CONTCP
0146   D28E 0E 2E       NOTPTBL:	LD	C,'.'
0147   D290 CD 0C E6    CONTCP:	CALL	CONOUT
0148   D293 FD 23       		INC	IY
0149   D295 1D          		DEC	E
0150   D296 20 EA       		JR	NZ,NEWCP
0151   D298 0E 0D       		LD	C,CR
0152   D29A CD 0C E6    		CALL	CONOUT
0153   D29D 0E 0A       		LD	C,LF
0154   D29F CD 0C E6    		CALL	CONOUT
0155   D2A2 15          		DEC	D
0156   D2A3 20 8F       		JR	NZ,NEWL
0157   D2A5 0E 0D       		LD	C,CR
0158   D2A7 CD 0C E6    		CALL	CONOUT
0159   D2AA 0E 0A       		LD	C,LF
0160   D2AC CD 0C E6    		CALL	CONOUT
0161   D2AF CD 33 E6    		CALL	PRINTSEQ		; print question
0162   D2B2 3E 20 5B 53 		.TEXT "> [SPACE]+[ENTER] = Read next page."
0162   D2B6 50 41 43 45 
0162   D2BA 5D 2B 5B 45 
0162   D2BE 4E 54 45 52 
0162   D2C2 5D 20 3D 20 
0162   D2C6 52 65 61 64 
0162   D2CA 20 6E 65 78 
0162   D2CE 74 20 70 61 
0162   D2D2 67 65 2E 
0163   D2D5 0D 0A 3E 00 		.DB CR,LF,'>',0
0164   D2D9 CD 09 E6    		CALL CONIN			; What's your answer?
0165   D2DC FE 20       		CP	' '
0166   D2DE CA E7 D2    		JP	Z,SCROLL
0167   D2E1 CD 9A D4    		CALL	GETCRLF
0168   D2E4 C3 31 D1    		JP	WAITCMD
0169   D2E7 FD E5       SCROLL:	PUSH	IY
0170   D2E9 D1          		POP	DE
0171   D2EA 13          		INC	DE
0172   D2EB CD 9A D4    		CALL	GETCRLF
0173   D2EE C3 93 D1    		JP	PGDN
0174   D2F1             
0175   D2F1             ;================================================================================================
0176   D2F1             ; Write to memory, starting at address aaaa
0177   D2F1             ;================================================================================================
0178   D2F1             WRITECMD:
0179   D2F1 CD A9 D4    		CALL	GETADDR		; DE holds the address to start writing
0180   D2F4 FE 00       		CP	0
0181   D2F6 CA 3F D0    		JP	Z,CMDLIST
0182   D2F9 CD 33 E6    		CALL	PRINTSEQ
0183   D2FC 53 65 6E 64 		.TEXT "Send data to be written."
0183   D300 20 64 61 74 
0183   D304 61 20 74 6F 
0183   D308 20 62 65 20 
0183   D30C 77 72 69 74 
0183   D310 74 65 6E 2E 
0184   D314 0D 0A 00    		.DB CR,LF,0
0185   D317 CD 09 E6    NEXTWR:	CALL	CONIN
0186   D31A 67          		LD	H,A
0187   D31B FE 0D       		CP	CR
0188   D31D 28 10       		JR	Z,EOW
0189   D31F CD 09 E6    		CALL	CONIN
0190   D322 6F          		LD	L,A			; at this point HL holds the value to be written (ASCII)
0191   D323 FE 0D       		CP	CR
0192   D325 28 08       		JR	Z,EOW
0193   D327 CD 26 D5    		CALL	ASCII2HEX		; B holds the hex value
0194   D32A 78          		LD	A,B
0195   D32B 12          		LD	(DE),A
0196   D32C 13          		INC	DE
0197   D32D 18 E8       		JR	NEXTWR
0198   D32F CD 09 E6    EOW:		CALL	CONIN
0199   D332 FE 0A       		CP	LF
0200   D334 CA 68 D3    		JP	Z,TRUEEOW
0201   D337 CD 33 E6    		CALL	PRINTSEQ
0202   D33A 0D 0A       		.DB CR,LF
0203   D33C 53 79 6E 74 		.TEXT "Syntax error. Incomplete ASCII pair."
0203   D340 61 78 20 65 
0203   D344 72 72 6F 72 
0203   D348 2E 20 49 6E 
0203   D34C 63 6F 6D 70 
0203   D350 6C 65 74 65 
0203   D354 20 41 53 43 
0203   D358 49 49 20 70 
0203   D35C 61 69 72 2E 
0204   D360 0D 0A 0D 0A 		.DB CR,LF,CR,LF,0
0204   D364 00 
0205   D365 C3 31 D1    		JP	WAITCMD
0206   D368             TRUEEOW:
0207   D368 CD 33 E6    		CALL	PRINTSEQ
0208   D36B 4D 65 6D 6F 		.TEXT "Memory write complete."
0208   D36F 72 79 20 77 
0208   D373 72 69 74 65 
0208   D377 20 63 6F 6D 
0208   D37B 70 6C 65 74 
0208   D37F 65 2E 
0209   D381 0D 0A 00    		.DB CR,LF,0
0210   D384 C3 31 D1    		JP	WAITCMD
0211   D387             
0212   D387             ;================================================================================================
0213   D387             ; Write to memory using Intel hex file format input
0214   D387             ;================================================================================================
0215   D387             HEXCMD:
0216   D387 CD 33 E6    		CALL	PRINTSEQ
0217   D38A 53 65 6E 64 		.TEXT "Send HEX-format data to be written."
0217   D38E 20 48 45 58 
0217   D392 2D 66 6F 72 
0217   D396 6D 61 74 20 
0217   D39A 64 61 74 61 
0217   D39E 20 74 6F 20 
0217   D3A2 62 65 20 77 
0217   D3A6 72 69 74 74 
0217   D3AA 65 6E 2E 
0218   D3AD 0D 0A 00    		.DB CR,LF,0
0219   D3B0             NEWHLINE:
0220   D3B0 DD 21 00 00 		LD	IX,0				; IX will be the accumulator for checksum
0221   D3B4 CD 09 E6    		CALL	CONIN				; get the start code ':'
0222   D3B7 FE 3A       		CP	':'
0223   D3B9 20 F5       		JR	NZ,NEWHLINE
0224   D3BB CD 09 E6    		CALL	CONIN				; get byte count
0225   D3BE 67          		LD	H,A
0226   D3BF CD 09 E6    		CALL	CONIN
0227   D3C2 6F          		LD	L,A
0228   D3C3 CD 26 D5    		CALL	ASCII2HEX
0229   D3C6 48          		LD	C,B				; C = byte count
0230   D3C7 3E 00       		LD	A,0
0231   D3C9 B9          		CP	C
0232   D3CA CA 3D D4    		JP	Z,EOHF			; if byte count = 0, we reached the end of write operation
0233   D3CD 06 00       		LD	B,0
0234   D3CF DD 09       		ADD	IX,BC				; update checksum with byte count
0235   D3D1 C5          		PUSH	BC				; save byte counter on the stack
0236   D3D2 CD 09 E6    		CALL	CONIN				; get address
0237   D3D5 67          		LD	H,A
0238   D3D6 CD 09 E6    		CALL	CONIN
0239   D3D9 6F          		LD	L,A
0240   D3DA CD 26 D5    		CALL	ASCII2HEX
0241   D3DD 50          		LD	D,B				
0242   D3DE CD 09 E6    		CALL	CONIN	
0243   D3E1 67          		LD	H,A
0244   D3E2 CD 09 E6    		CALL	CONIN
0245   D3E5 6F          		LD	L,A
0246   D3E6 CD 26 D5    		CALL	ASCII2HEX
0247   D3E9 58          		LD	E,B				; DE = start addr 
0248   D3EA 06 00       		LD	B,0
0249   D3EC 4A          		LD	C,D
0250   D3ED DD 09       		ADD	IX,BC				; update checksum with addr HI
0251   D3EF 4B          		LD	C,E
0252   D3F0 DD 09       		ADD	IX,BC				; update checksum with addr LO
0253   D3F2 CD 09 E6    		CALL	CONIN				; get record type
0254   D3F5 67          		LD	H,A
0255   D3F6 CD 09 E6    		CALL	CONIN
0256   D3F9 6F          		LD	L,A
0257   D3FA CD 26 D5    		CALL	ASCII2HEX
0258   D3FD 48          		LD	C,B
0259   D3FE 06 00       		LD	B,0
0260   D400 DD 09       		ADD	IX,BC				; update checksum with record type
0261   D402 CD 09 E6    NEXTD:	CALL	CONIN				; start reading data
0262   D405 67          		LD	H,A
0263   D406 CD 09 E6    		CALL	CONIN
0264   D409 6F          		LD	L,A
0265   D40A CD 26 D5    		CALL	ASCII2HEX
0266   D40D 48          		LD	C,B
0267   D40E 06 00       		LD	B,0
0268   D410 DD 09       		ADD	IX,BC				; update checksum data byte
0269   D412 79          		LD	A,C
0270   D413 12          		LD	(DE),A			; write data to memory
0271   D414 13          		INC	DE				; increment memory addr for next write
0272   D415 C1          		POP	BC				; pop byte count from stack
0273   D416 0D          		DEC	C				; decrement byte counter
0274   D417 C5          		PUSH	BC				; save byte counter on the stack
0275   D418 C2 02 D4    		JP	NZ,NEXTD
0276   D41B CD 09 E6    		CALL	CONIN				; get checksum
0277   D41E 67          		LD	H,A
0278   D41F CD 09 E6    		CALL	CONIN
0279   D422 6F          		LD	L,A
0280   D423 CD 26 D5    		CALL	ASCII2HEX			; B = checksum
0281   D426 DD E5       		PUSH	IX
0282   D428 D1          		POP	DE
0283   D429 7B          		LD	A,E
0284   D42A ED 44       		NEG
0285   D42C B8          		CP	B
0286   D42D CA B0 D3    		JP	Z,NEWHLINE
0287   D430 CD 33 E6    		CALL	PRINTSEQ
0288   D433 20 45 52 52 		.TEXT	" ERR"
0289   D437 0D 0A 00    		.DB CR,LF,0
0290   D43A C3 B0 D3    		JP	NEWHLINE
0291   D43D             
0292   D43D CD 1B D5    EOHF:		CALL	FLUSHBUF
0293   D440 CD 33 E6    		CALL	PRINTSEQ
0294   D443 4D 65 6D 6F 		.TEXT "Memory write complete."
0294   D447 72 79 20 77 
0294   D44B 72 69 74 65 
0294   D44F 20 63 6F 6D 
0294   D453 70 6C 65 74 
0294   D457 65 2E 
0295   D459 0D 0A 00    		.DB CR,LF,0
0296   D45C C3 31 D1    		JP	WAITCMD
0297   D45F             
0298   D45F             ;================================================================================================
0299   D45F             ; Jump to address aaaa
0300   D45F             ;================================================================================================
0301   D45F             JUMPCMD:
0302   D45F CD A9 D4    		CALL	GETADDR
0303   D462 FE 00       		CP	0
0304   D464 CA 3F D0    		JP	Z,CMDLIST
0305   D467 D5          		PUSH	DE
0306   D468 E1          		POP	HL
0307   D469 E9          		JP	(HL)
0308   D46A             
0309   D46A             ;================================================================================================
0310   D46A             ; Test quality of RX. Count how many bytes are not equal to CHAR in the page starting at ATARGET
0311   D46A             ;================================================================================================
0312   D46A             COUNTER	.EQU	05000H
0313   D46A             CHAR		.EQU	05001H
0314   D46A             ATARGET	.EQU	04000H
0315   D46A             
0316   D46A CD 09 E6    TESTCMD:	CALL	CONIN				; get CR + LF
0317   D46D CD 09 E6    		CALL	CONIN
0318   D470             
0319   D470             
0320   D470 3E 00       		LD	A,0
0321   D472 47          		LD	B,A
0322   D473 32 00 50    		LD	(COUNTER),A
0323   D476 3A 01 50    		LD	A,(CHAR)
0324   D479 4F          		LD	C,A
0325   D47A 11 00 40    		LD	DE,ATARGET
0326   D47D 21 00 50    		LD	HL,COUNTER
0327   D480             
0328   D480 1A          REPT:		LD	A,(DE)
0329   D481 B9          		CP	C
0330   D482 28 01       		JR	Z,EQUAL
0331   D484 34          		INC	(HL)
0332   D485 13          EQUAL:	INC	DE
0333   D486 10 F8       		DJNZ	REPT
0334   D488 3A 00 50    		LD	A,(COUNTER)
0335   D48B 47          		LD	B,A
0336   D48C CD 5C D5    		CALL	HEX2ASCII
0337   D48F 4C          		LD	C,H
0338   D490 CD 0C E6    		CALL	CONOUT
0339   D493 4D          		LD	C,L
0340   D494 CD 0C E6    		CALL	CONOUT
0341   D497 C3 31 D1    		JP	WAITCMD
0342   D49A             
0343   D49A             ;================================================================================================
0344   D49A             ; Get CR + LF.
0345   D49A             ;================================================================================================
0346   D49A             GETCRLF:
0347   D49A CD 09 E6    ISITCR:	CALL	CONIN			; ok, so now we expect to find <CR><LF> in the buffer
0348   D49D FE 0D       		CP	CR
0349   D49F 20 F9       		JR	NZ,ISITCR
0350   D4A1 CD 09 E6    ISITLF:	CALL	CONIN
0351   D4A4 FE 0A       		CP	LF
0352   D4A6 20 F9       		JR	NZ,ISITLF
0353   D4A8 C9          		RET
0354   D4A9             
0355   D4A9             ;================================================================================================
0356   D4A9             ; Get address parameter from command line and return it in DE. If error, A=0.
0357   D4A9             ;================================================================================================
0358   D4A9 C5          GETADDR:	PUSH	BC
0359   D4AA E5          		PUSH	HL
0360   D4AB CD 09 E6    		CALL	CONIN
0361   D4AE 67          		LD	H,A
0362   D4AF CD 09 E6    		CALL	CONIN
0363   D4B2 6F          		LD	L,A
0364   D4B3 CD 26 D5    		CALL	ASCII2HEX
0365   D4B6 50          		LD	D,B
0366   D4B7 CD 09 E6    		CALL	CONIN
0367   D4BA 67          		LD	H,A
0368   D4BB CD 09 E6    		CALL	CONIN
0369   D4BE 6F          		LD	L,A
0370   D4BF CD 26 D5    		CALL	ASCII2HEX
0371   D4C2 58          		LD	E,B				; now DE contains the address
0372   D4C3 CD 09 E6    		CALL	CONIN				; ok, so now we expect to find <CR><LF> in the buffer
0373   D4C6 FE 0D       		CP	CR
0374   D4C8 20 0C       		JR	NZ,SYNERR
0375   D4CA CD 09 E6    		CALL	CONIN
0376   D4CD FE 0A       		CP	LF
0377   D4CF 20 05       		JR	NZ,SYNERR
0378   D4D1 3E FF       		LD	A,0FFH
0379   D4D3 E1          		POP	HL
0380   D4D4 C1          		POP	BC
0381   D4D5 C9          		RET
0382   D4D6 CD 1B D5    SYNERR:	CALL	FLUSHBUF
0383   D4D9 CD 33 E6    		CALL	PRINTSEQ
0384   D4DC 0D 0A       		.DB CR,LF
0385   D4DE 53 79 6E 74 		.TEXT "Syntax error. aaaa must be a 4-character hex number."
0385   D4E2 61 78 20 65 
0385   D4E6 72 72 6F 72 
0385   D4EA 2E 20 61 61 
0385   D4EE 61 61 20 6D 
0385   D4F2 75 73 74 20 
0385   D4F6 62 65 20 61 
0385   D4FA 20 34 2D 63 
0385   D4FE 68 61 72 61 
0385   D502 63 74 65 72 
0385   D506 20 68 65 78 
0385   D50A 20 6E 75 6D 
0385   D50E 62 65 72 2E 
0386   D512 0D 0A       		.DB CR,LF
0387   D514 0D 0A 00    		.DB CR,LF,0
0388   D517 AF          		XOR	A
0389   D518 E1          		POP	HL
0390   D519 C1          		POP	BC
0391   D51A C9          		RET
0392   D51B             
0393   D51B             ;================================================================================================
0394   D51B             ; Flush serial input buffer
0395   D51B             ;================================================================================================
0396   D51B             FLUSHBUF:
0397   D51B CD 06 E6    		CALL	CONST
0398   D51E FE 00       		CP	0
0399   D520 C8          		RET	Z
0400   D521 CD 09 E6    		CALL	CONIN
0401   D524 18 F5       		JR	FLUSHBUF
0402   D526             
0403   D526             ;================================================================================================
0404   D526             ; Convert ASCII to HEX (HL --> B)
0405   D526             ;================================================================================================
0406   D526 C5          ASCII2HEX:	PUSH	BC
0407   D527 3E 60       		LD	A,060H
0408   D529 94          		SUB	H
0409   D52A 0E 57       		LD	C,057H
0410   D52C DA 39 D5    		JP	C,DISCOUNT
0411   D52F 3E 40       		LD	A,040H
0412   D531 94          		SUB	H
0413   D532 0E 37       		LD	C,037H
0414   D534 DA 39 D5    		JP	C,DISCOUNT
0415   D537 0E 30       		LD	C,030H
0416   D539             DISCOUNT:
0417   D539 7C          		LD	A,H
0418   D53A 91          		SUB	C
0419   D53B             CONVL:
0420   D53B 47          		LD	B,A
0421   D53C CB 20       		SLA	B
0422   D53E CB 20       		SLA	B
0423   D540 CB 20       		SLA	B
0424   D542 CB 20       		SLA	B
0425   D544             
0426   D544 3E 60       		LD	A,060H
0427   D546 95          		SUB	L
0428   D547 0E 57       		LD	C,057H
0429   D549 DA 56 D5    		JP	C,DISCOUNT2
0430   D54C 3E 40       		LD	A,040H
0431   D54E 95          		SUB	L
0432   D54F 0E 37       		LD	C,037H
0433   D551 DA 56 D5    		JP	C,DISCOUNT2
0434   D554 0E 30       		LD	C,030H
0435   D556             DISCOUNT2:
0436   D556 7D          		LD	A,L
0437   D557 91          		SUB	C
0438   D558 B0          		OR	B
0439   D559 C1          		POP	BC
0440   D55A 47          		LD	B,A
0441   D55B C9          		RET
0442   D55C             
0443   D55C             ;================================================================================================
0444   D55C             ; Convert HEX to ASCII (B --> HL)
0445   D55C             ;================================================================================================
0446   D55C C5          HEX2ASCII:	PUSH	BC
0447   D55D 78          		LD	A,B
0448   D55E E6 0F       		AND	0FH
0449   D560 6F          		LD	L,A
0450   D561 D6 0A       		SUB	0AH
0451   D563 0E 30       		LD	C,030H
0452   D565 DA 6A D5    		JP	C,COMPENSATE
0453   D568 0E 37       		LD	C,037H
0454   D56A             COMPENSATE:
0455   D56A 7D          		LD	A,L
0456   D56B 81          		ADD	A,C
0457   D56C 6F          		LD	L,A
0458   D56D 78          		LD	A,B
0459   D56E E6 F0       		AND	0F0H
0460   D570 CB 3F       		SRL	A
0461   D572 CB 3F       		SRL	A
0462   D574 CB 3F       		SRL	A
0463   D576 CB 3F       		SRL	A
0464   D578 67          		LD	H,A
0465   D579 D6 0A       		SUB	0AH
0466   D57B 0E 30       		LD	C,030H
0467   D57D DA 82 D5    		JP	C,COMPENSATE2
0468   D580 0E 37       		LD	C,037H
0469   D582             COMPENSATE2:
0470   D582 7C          		LD	A,H
0471   D583 81          		ADD	A,C
0472   D584 67          		LD	H,A
0473   D585 C1          		POP	BC
0474   D586 C9          		RET
0475   D587             
0476   D587             ;================================================================================================
0477   D587             ; Delay X seconds, with X passed on reg B
0478   D587             ;================================================================================================
0479   D587             DELAYS:
0480   D587 C5          		PUSH	BC
0481   D588 E5          		PUSH	HL
0482   D589 21 8F 02    LOOP0:	LD	HL,655
0483   D58C 0E FF       LOOP1:	LD	C,255		;1.75					\
0484   D58E 0D          LOOP2:	DEC	C		;1		\			|
0485   D58F 00          		NOP			;1		| t=6(X-1)+1.75	| (7.75+t)(y-1)
0486   D590 79          		LD	A,C		;1		|			|
0487   D591 20 FB       		JR	NZ,LOOP2	;3/1.75	/			|
0488   D593 2B          		DEC	HL		;1					|
0489   D594 7C          		LD	A,H		;1					|
0490   D595 B5          		OR	L		;1					|
0491   D596 20 F4       		JR	NZ,LOOP1	;3/1.75				/
0492   D598 10 EF       		DJNZ	LOOP0
0493   D59A E1          		POP	HL
0494   D59B C1          		POP	BC
0495   D59C C9          		RET
0496   D59D             
0497   E600             		.ORG	BIOS
0498   E600             ;================================================================================================
0499   E600             ; BIOS jump table.
0500   E600             ;================================================================================================
0501   E600 C3 00 00    BOOT:		JP	0			;  0 Initialize.
0502   E603 C3 00 00    WBOOT:	JP	0			;  1 Warm boot.
0503   E606 C3 00 00    CONST:	JP	0			;  2 Console status.
0504   E609 C3 00 00    CONIN:	JP	0			;  3 Console input.
0505   E60C C3 00 00    CONOUT:	JP	0			;  4 Console OUTput.
0506   E60F C3 00 00    LIST:		JP	0			;  5 List OUTput.
0507   E612 C3 00 00    PUNCH:	JP	0			;  6 Punch OUTput.
0508   E615 C3 00 00    READER:	JP	0			;  7 Reader input.
0509   E618 C3 00 00    HOME:		JP	0			;  8 Home disk.
0510   E61B C3 00 00    SELDSK:	JP	0			;  9 Select disk.
0511   E61E C3 00 00    SETTRK:	JP	0			; 10 Select track.
0512   E621 C3 00 00    SETSEC:	JP	0			; 11 Select sector.
0513   E624 C3 00 00    SETDMA:	JP	0			; 12 Set DMA ADDress.
0514   E627 C3 00 00    READ:		JP	0			; 13 Read 128 bytes.
0515   E62A C3 00 00    WRITE:	JP	0			; 14 Write 128 bytes.
0516   E62D C3 00 00    LISTST:	JP	0			; 15 List status.
0517   E630 C3 00 00    SECTRAN:	JP	0			; 16 Sector translate.
0518   E633 C3 00 00    PRINTSEQ:	JP	0			; not a BIOS function
0519   E636             
0520   E636             ;================================================================================================
0521   E636             
0522   E636             		.END
tasm: Number of errors = 0
