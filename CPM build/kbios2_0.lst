0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ; Blocking/unblocking routines are the published version by Digital Research
0004   0000             ; (bugfixed, as found on the web)
0005   0000             ;
0006   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0007   0000             ;
0008   0000             ; Customized by Kaltchuk for use with Z80 Modular Computer, december/2020.
0009   0000             ; CP/M is booted from ROM.
0010   0000             ;
0011   0000             ; 04/02/21 - version B corrects a bug in wboot.
0012   0000             ; 09/06/21 - version C sets serial comm to 38.4kbps and
0013   0000             ;            puts "IOBYTE set" in the cold boot.
0014   0000             ; 12/06/21 - version D fixes a bug with CONIN.
0015   0000             ; 16/06/21 - version 2.0 is mainly about the new serial communication card,
0016   0000             ;            which doesn't use interrupt signal because all the buffering is
0017   0000             ;            done by the card instead of the CPU. IOBYTE is also fully
0018   0000             ;            implemented.
0019   0000             ;==================================================================================
0020   0000             #INCLUDE	"equates.h"
0001+  0000             
0002+  0000             CCP				.EQU	0D000h			; Base of CCP (or Monitor).
0003+  0000             BIOS			.EQU	0E620h			; Base of BIOS.
0004+  0000             ROM_CCP			.EQU	CCP-0C000h		; Base of CCP in ROM
0005+  0000             ROM_BIOS		.EQU	BIOS-0C000h		; Base of BIOS in ROM
0006+  0000             
0007+  0000             ccp				.EQU	CCP
0008+  0000             bios			.EQU	BIOS
0021   0000             
0022   0000             ; Set CP/M low memory data, vector and buffer addresses.
0023   0000             
0024   0000             iobyte			.EQU	03h				; Intel standard I/O definition byte.
0025   0000             userdrv			.EQU	04h				; Current user number and drive.
0026   0000             tpabuf			.EQU	80h				; Default I/O buffer and command line storage.
0027   0000             
0028   0000             blksiz			.equ	4096			;CP/M allocation size
0029   0000             hstsiz			.equ	512				;host disk sector size
0030   0000             hstspt			.equ	32				;host disk sectors/trk
0031   0000             hstblk			.equ	hstsiz/128		;CP/M sects/host buff
0032   0000             cpmspt			.equ	hstblk * hstspt	;CP/M sectors/track
0033   0000             secmsk			.equ	hstblk-1		;sector mask
0034   0000             										;compute sector mask
0035   0000             ;secshf			.equ	2				;log2(hstblk)
0036   0000             	
0037   0000             wrall			.equ	0				;write to allocated
0038   0000             wrdir			.equ	1				;write to directory
0039   0000             wrual			.equ	2				;write to unallocated
0040   0000             
0041   0000             ; MEM card stuff
0042   0000             MEM_ADDR		.EQU	0F0H			; MEM card address
0043   0000             ROM_RAM0		.EQU	MEM_ADDR		; ROM + RAM bank 0
0044   0000             NOROM_RAM0		.EQU	MEM_ADDR+1		; no ROM + RAM bank 0 (full RAM)
0045   0000             ROM_RAM1		.EQU	MEM_ADDR+2		; ROM + RAM bank 1
0046   0000             NOROM_RAM1		.EQU	MEM_ADDR+3		; no ROM + RAM bank 1 (full RAM)
0047   0000             
0048   0000             ; TTY card stuff
0049   0000             PORT0			.EQU	0C0H		; PORT 0 address		(physical device TTY for CP/M)
0050   0000             PORT0_DAT		.EQU	PORT0		; PORT 0 data addr
0051   0000             PORT0_STA		.EQU	PORT0+2		; PORT 0 status addr
0052   0000             
0053   0000             PORT1			.EQU	PORT0+1		; PORT 1 address		(physical device CRT for CP/M)
0054   0000             PORT1_DAT		.EQU	PORT1		; PORT 1 data addr
0055   0000             PORT1_STA		.EQU	PORT1+2		; PORT 1 status addr
0056   0000             
0057   0000             ; FLASH card stuff
0058   0000             FLASH_ADDR		.EQU	0B0H			; FLASH card address
0059   0000             CF_DATA			.EQU	(FLASH_ADDR+0)	; R/W
0060   0000             CF_FEATURES		.EQU	(FLASH_ADDR+1)	; W
0061   0000             CF_ERROR		.EQU	(FLASH_ADDR+1)	; R
0062   0000             CF_SECCOUNT		.EQU	(FLASH_ADDR+2)	; W
0063   0000             
0064   0000             CF_SECTOR		.EQU	(FLASH_ADDR+3)	; W
0065   0000             CF_CYL_LOW		.EQU	(FLASH_ADDR+4)	; W
0066   0000             CF_CYL_HI		.EQU	(FLASH_ADDR+5)	; W
0067   0000             CF_HEAD			.EQU	(FLASH_ADDR+6)	; W
0068   0000             
0069   0000             CF_LBA0			.EQU	(FLASH_ADDR+3)	; W
0070   0000             CF_LBA1			.EQU	(FLASH_ADDR+4)	; W
0071   0000             CF_LBA2			.EQU	(FLASH_ADDR+5)	; W
0072   0000             CF_LBA3			.EQU	(FLASH_ADDR+6)	; W
0073   0000             
0074   0000             CF_STATUS		.EQU	(FLASH_ADDR+7)	; R
0075   0000             CF_COMMAND		.EQU	(FLASH_ADDR+7)	; W
0076   0000             
0077   0000             ;CF Features
0078   0000             CF_8BIT			.EQU	1
0079   0000             CF_NOCACHE		.EQU	082H
0080   0000             
0081   0000             ;CF Commands
0082   0000             CF_READ_SEC		.EQU	020H
0083   0000             CF_WRITE_SEC	.EQU	030H
0084   0000             CF_SET_FEAT		.EQU 	0EFH
0085   0000             
0086   0000             ;================================================================================================
0087   0000             ; ASCII characters.
0088   0000             ;================================================================================================
0089   0000             NUL			.EQU	00H
0090   0000             LF			.EQU	0AH
0091   0000             FF			.EQU	0CH
0092   0000             CR			.EQU	0DH
0093   0000             DC1			.EQU	11H
0094   0000             DC2			.EQU	12H
0095   0000             DC3			.EQU	13H
0096   0000             DC4			.EQU	14H
0097   0000             ;================================================================================================
0098   0000             
0099   E620             		.ORG	bios					; BIOS origin.
0100   E620             
0101   E620             ;================================================================================================
0102   E620             ; BIOS jump table.
0103   E620             ;================================================================================================
0104   E620 C3 83 E7    		JP	boot						;  0 Initialize.
0105   E623 C3 2B E8    wboote:	JP	wboot						;  1 Warm boot.
0106   E626 C3 AB E8    		JP	CONST						;  2 Console status.
0107   E629 C3 C2 E8    		JP	CONIN						;  3 Console input.
0108   E62C C3 D9 E8    		JP	CONOUT						;  4 Console OUTput.
0109   E62F C3 07 E9    		JP	LIST						;  5 List OUTput.
0110   E632 C3 1E E9    		JP	PUNCH						;  6 punch OUTput.
0111   E635 C3 F0 E8    		JP	READER						;  7 Reader input.
0112   E638 C3 94 E9    		JP	home						;  8 Home disk.
0113   E63B C3 6C E9    		JP	seldsk						;  9 Select disk.
0114   E63E C3 A0 E9    		JP	settrk						; 10 Select track.
0115   E641 C3 A5 E9    		JP	setsec						; 11 Select sector.
0116   E644 C3 AA E9    		JP	setdma						; 12 Set DMA ADDress.
0117   E647 C3 B2 E9    		JP	read						; 13 Read 128 bytes.
0118   E64A C3 C6 E9    		JP	write						; 14 Write 128 bytes.
0119   E64D C3 35 E9    		JP	LISTST						; 15 List status.
0120   E650 C3 AF E9    		JP	sectran						; 16 Sector translate.
0121   E653 C3 A0 EB    		JP	PRINTSEQ					; not a BIOS function
0122   E656             
0123   E656             ;================================================================================================
0124   E656             ; Disk parameter headers for disk 0 to 15
0125   E656             ;================================================================================================
0126   E656             dpbase:
0127   E656 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb0,0000h,alv00
0127   E65A 00 00 00 00 
0127   E65E B4 EB 56 E7 
0127   E662 00 00 34 EC 
0128   E666 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv01
0128   E66A 00 00 00 00 
0128   E66E B4 EB 65 E7 
0128   E672 00 00 35 ED 
0129   E676 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv02
0129   E67A 00 00 00 00 
0129   E67E B4 EB 65 E7 
0129   E682 00 00 36 EE 
0130   E686 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv03
0130   E68A 00 00 00 00 
0130   E68E B4 EB 65 E7 
0130   E692 00 00 37 EF 
0131   E696 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv04
0131   E69A 00 00 00 00 
0131   E69E B4 EB 65 E7 
0131   E6A2 00 00 38 F0 
0132   E6A6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv05
0132   E6AA 00 00 00 00 
0132   E6AE B4 EB 65 E7 
0132   E6B2 00 00 39 F1 
0133   E6B6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv06
0133   E6BA 00 00 00 00 
0133   E6BE B4 EB 65 E7 
0133   E6C2 00 00 3A F2 
0134   E6C6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv07
0134   E6CA 00 00 00 00 
0134   E6CE B4 EB 65 E7 
0134   E6D2 00 00 3B F3 
0135   E6D6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv08
0135   E6DA 00 00 00 00 
0135   E6DE B4 EB 65 E7 
0135   E6E2 00 00 3C F4 
0136   E6E6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv09
0136   E6EA 00 00 00 00 
0136   E6EE B4 EB 65 E7 
0136   E6F2 00 00 3D F5 
0137   E6F6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv10
0137   E6FA 00 00 00 00 
0137   E6FE B4 EB 65 E7 
0137   E702 00 00 3E F6 
0138   E706 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv11
0138   E70A 00 00 00 00 
0138   E70E B4 EB 65 E7 
0138   E712 00 00 3F F7 
0139   E716 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv12
0139   E71A 00 00 00 00 
0139   E71E B4 EB 65 E7 
0139   E722 00 00 40 F8 
0140   E726 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv13
0140   E72A 00 00 00 00 
0140   E72E B4 EB 65 E7 
0140   E732 00 00 41 F9 
0141   E736 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv14
0141   E73A 00 00 00 00 
0141   E73E B4 EB 65 E7 
0141   E742 00 00 42 FA 
0142   E746 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpbLast,0000h,alv15
0142   E74A 00 00 00 00 
0142   E74E B4 EB 74 E7 
0142   E752 00 00 43 FB 
0143   E756             
0144   E756             ; First drive has a reserved track for CP/M
0145   E756             dpb0:
0146   E756 80 00       		.DW 128 ;SPT - sectors per track
0147   E758 05          		.DB 5   ;BSH - block shift factor
0148   E759 1F          		.DB 31  ;BLM - block mask
0149   E75A 01          		.DB 1   ;EXM - Extent mask
0150   E75B FB 07       		.DW 2043 ; (2047-4) DSM - Storage size (blocks - 1)
0151   E75D FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0152   E75F F0          		.DB 240 ;AL0 - 1 bit set per directory block
0153   E760 00          		.DB 0   ;AL1 -            "
0154   E761 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0155   E763 01 00       		.DW 1   ;ON  - Reserved tracks
0156   E765             
0157   E765             dpb:
0158   E765 80 00       		.DW 128 ;SPT - sectors per track
0159   E767 05          		.DB 5   ;BSH - block shift factor
0160   E768 1F          		.DB 31  ;BLM - block mask
0161   E769 01          		.DB 1   ;EXM - Extent mask
0162   E76A FF 07       		.DW 2047 ;DSM - Storage size (blocks - 1)
0163   E76C FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0164   E76E F0          		.DB 240 ;AL0 - 1 bit set per directory block
0165   E76F 00          		.DB 0   ;AL1 -            "
0166   E770 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0167   E772 00 00       		.DW 0   ;OFF - Reserved tracks
0168   E774             
0169   E774             ; Last drive is smaller because CF is never full 64MB or 128MB
0170   E774             dpbLast:
0171   E774 80 00       		.DW 128 ;SPT - sectors per track
0172   E776 05          		.DB 5   ;BSH - block shift factor
0173   E777 1F          		.DB 31  ;BLM - block mask
0174   E778 01          		.DB 1   ;EXM - Extent mask
0175   E779 FF 01       		.DW 511 ;DSM - Storage size (blocks - 1)  ; 511 = 2MB (for 128MB card), 1279 = 5MB (for 64MB card)
0176   E77B FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0177   E77D F0          		.DB 240 ;AL0 - 1 bit set per directory block
0178   E77E 00          		.DB 0   ;AL1 -            "
0179   E77F 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0180   E781 00 00       		.DW 0   ;OFF - Reserved tracks
0181   E783             
0182   E783             ;================================================================================================
0183   E783             ; Cold boot
0184   E783             ;================================================================================================
0185   E783             
0186   E783 F3          boot:	DI						; Disable interrupts.
0187   E784 31 7F FE    		LD	SP,BIOSSTACK		; Set default stack.
0188   E787             
0189   E787 D3 F1       		OUT (NOROM_RAM0),A		; Turn off ROM. Doesn't matter what we output
0190   E789             
0191   E789 CD 95 EB    		CALL	cfWait			; Initialize FLASH
0192   E78C 3E 01       		LD 	A,CF_8BIT			; Set IDE to be 8bit
0193   E78E D3 B1       		OUT	(CF_FEATURES),A
0194   E790 3E EF       		LD	A,CF_SET_FEAT
0195   E792 D3 B7       		OUT	(CF_COMMAND),A
0196   E794             
0197   E794 CD 95 EB    		CALL	cfWait
0198   E797 3E 82       		LD 	A,CF_NOCACHE		; No write cache
0199   E799 D3 B1       		OUT	(CF_FEATURES),A
0200   E79B 3E EF       		LD	A,CF_SET_FEAT
0201   E79D D3 B7       		OUT	(CF_COMMAND),A
0202   E79F             
0203   E79F AF          		XOR	A
0204   E7A0 32 04 00    		LD	(userdrv),A			; set drive byte to A:
0205   E7A3 32 03 00    		LD	(iobyte),A			; Set IOBYTE to 00
0206   E7A6             
0207   E7A6 CD A0 EB    		CALL	PRINTSEQ
0208   E7A9 0D 0A       		.DB CR,LF
0209   E7AB 5A 38 30 20 		.DB "Z80 Modular Computer by Kaltchuk 2020.",CR,LF
0209   E7AF 4D 6F 64 75 
0209   E7B3 6C 61 72 20 
0209   E7B7 43 6F 6D 70 
0209   E7BB 75 74 65 72 
0209   E7BF 20 62 79 20 
0209   E7C3 4B 61 6C 74 
0209   E7C7 63 68 75 6B 
0209   E7CB 20 32 30 32 
0209   E7CF 30 2E 0D 0A 
0210   E7D3 42 49 4F 53 		.DB "BIOS 2.0 - 128MB Compact Flash.",CR,LF
0210   E7D7 20 32 2E 30 
0210   E7DB 20 2D 20 31 
0210   E7DF 32 38 4D 42 
0210   E7E3 20 43 6F 6D 
0210   E7E7 70 61 63 74 
0210   E7EB 20 46 6C 61 
0210   E7EF 73 68 2E 0D 
0210   E7F3 0A 
0211   E7F4 43 50 2F 4D 		.DB "CP/M 2.2 Copyright 1979 (c) by Digital Research",CR,LF,CR,LF,0
0211   E7F8 20 32 2E 32 
0211   E7FC 20 43 6F 70 
0211   E800 79 72 69 67 
0211   E804 68 74 20 31 
0211   E808 39 37 39 20 
0211   E80C 28 63 29 20 
0211   E810 62 79 20 44 
0211   E814 69 67 69 74 
0211   E818 61 6C 20 52 
0211   E81C 65 73 65 61 
0211   E820 72 63 68 0D 
0211   E824 0A 0D 0A 00 
0212   E828             
0213   E828 C3 3E E8    		JP	gocpm
0214   E82B             
0215   E82B             ;================================================================================================
0216   E82B             ; Warm boot
0217   E82B             ;================================================================================================
0218   E82B             
0219   E82B F3          wboot:	DI						; Disable interrupts.
0220   E82C 31 7F FE    		LD	SP,BIOSSTACK		; Set default stack.
0221   E82F             
0222   E82F D3 F0       		OUT (ROM_RAM0),A		; Turn on ROM. Doesn't matter what we output
0223   E831             
0224   E831 01 20 16    		LD	BC,BIOS-CCP			; Copy CP/M ROM (01000h) to RAM (0D000h)
0225   E834 11 00 D0    		LD	DE,CCP				; Don't copy the BIOS!!!
0226   E837 21 00 10    		LD	HL,ROM_CCP
0227   E83A ED B0       		LDIR
0228   E83C             
0229   E83C D3 F1       		OUT (NOROM_RAM0),A		; Turn off ROM. Doesn't matter what we output
0230   E83E             
0231   E83E             
0232   E83E             ;================================================================================================
0233   E83E             ; Common code for cold and warm boot
0234   E83E             ;================================================================================================
0235   E83E             
0236   E83E AF          gocpm:	XOR	A					; 0 to accumulator
0237   E83F 32 52 FC    		LD	(hstact),A			; host buffer inactive
0238   E842 32 54 FC    		LD	(unacnt),A			; clear unalloc count
0239   E845             
0240   E845 21 80 00    		LD	HL,tpabuf			; ADDress of BIOS DMA buffer.
0241   E848 22 5D FC    		LD	(dmaAddr),HL
0242   E84B             		
0243   E84B 3E C3       		LD	A,0C3h				; Opcode for 'JP'.
0244   E84D 32 00 00    		LD	(00h),A				; Load at start of RAM.
0245   E850 21 23 E6    		LD	HL,wboote			; ADDress of jump for a warm boot.
0246   E853 22 01 00    		LD	(01h),HL
0247   E856 32 05 00    		LD	(05h),A				; Opcode for 'JP'.
0248   E859 2A 1E E6    		LD	HL,(BIOS-2)			; ADDress of jump for the BDOS.
0249   E85C 22 06 00    		LD	(06h),HL
0250   E85F 3A 04 00    		LD	A,(userdrv)			; Save new drive number (0).
0251   E862 4F          		LD	C,A					; Pass drive number in C.
0252   E863             
0253   E863 ED 46       		IM	0
0254   E865 FB          		EI
0255   E866             	
0256   E866 C3 00 D0    		JP	ccp					; Start CP/M by jumping to the CCP.
0257   E869             
0258   E869             ;================================================================================================
0259   E869             ; PHYSICAL DEVICE JUMP TABLE.
0260   E869             ; Used by CONST, CONIN, CONOUT, LIST, PUNCH, READER and LISTST according to IOBYTE setting.
0261   E869             ; All physical devices that aren't present will be forwarded to TTY.
0262   E869             ;================================================================================================
0263   E869 C3 59 E9    TTYST:	JP	PORT0ST
0264   E86C C3 69 E9    CRTST:	JP	PORT1ST
0265   E86F C3 35 E9    BATST:	JP	LISTST
0266   E872 C3 69 E8    UC1ST:	JP	TTYST		; No physical device present
0267   E875 C3 69 E8    LPTST:	JP	TTYST		; No physical device present
0268   E878 C3 69 E8    UL1ST:	JP	TTYST		; No physical device present
0269   E87B             
0270   E87B C3 4C E9    TTYIN:	JP	PORT0IN
0271   E87E C3 5C E9    CRTIN:	JP	PORT1IN
0272   E881 C3 F0 E8    BATIN:	JP	READER
0273   E884 C3 7B E8    UC1IN:	JP	TTYIN		; No physical device present
0274   E887 C3 7B E8    PTRIN:	JP	TTYIN		; No physical device present
0275   E88A C3 7B E8    UR1IN:	JP	TTYIN		; No physical device present
0276   E88D C3 7B E8    UR2IN:	JP	TTYIN		; No physical device present
0277   E890             
0278   E890 C3 55 E9    TTYOUT:	JP	PORT0OUT
0279   E893 C3 65 E9    CRTOUT:	JP	PORT1OUT
0280   E896 C3 07 E9    BATOUT:	JP	LIST
0281   E899 C3 90 E8    UC1OUT:	JP	TTYOUT		; No physical device present
0282   E89C C3 90 E8    LPTOUT:	JP	TTYOUT		; No physical device present
0283   E89F C3 90 E8    UL1OUT:	JP	TTYOUT		; No physical device present
0284   E8A2 C3 90 E8    PTPOUT:	JP	TTYOUT		; No physical device present
0285   E8A5 C3 90 E8    UP1OUT:	JP	TTYOUT		; No physical device present
0286   E8A8 C3 90 E8    UP2OUT:	JP	TTYOUT		; No physical device present
0287   E8AB             
0288   E8AB             ;================================================================================================
0289   E8AB             ; Console I/O routines
0290   E8AB             ;================================================================================================
0291   E8AB             ;================================================================================================
0292   E8AB             ; Console Status (Return A=0FFh if character waiting. Otherwise, A=0)
0293   E8AB             ;================================================================================================
0294   E8AB 3A 03 00    CONST:	LD	A,(iobyte)
0295   E8AE E6 03       		AND	3
0296   E8B0 FE 00       		CP	0
0297   E8B2 CA 69 E8    		JP	Z,TTYST
0298   E8B5 FE 01       		CP	1
0299   E8B7 CA 6C E8    		JP	Z,CRTST
0300   E8BA FE 02       		CP	2
0301   E8BC CA 6F E8    		JP	Z,BATST
0302   E8BF C3 72 E8    		JP	UC1ST
0303   E8C2             
0304   E8C2             ;================================================================================================
0305   E8C2             ; Console Input (Wait for input and return character in A)
0306   E8C2             ;================================================================================================
0307   E8C2 3A 03 00    CONIN:	LD	A,(iobyte)
0308   E8C5 E6 03       		AND	3
0309   E8C7 FE 00       		CP	0
0310   E8C9 CA 7B E8    		JP	Z,TTYIN
0311   E8CC FE 01       		CP	1
0312   E8CE CA 7E E8    		JP	Z,CRTIN
0313   E8D1 FE 02       		CP	2
0314   E8D3 CA 81 E8    		JP	Z,BATIN
0315   E8D6 C3 84 E8    		JP	UC1IN
0316   E8D9             
0317   E8D9             ;================================================================================================
0318   E8D9             ; Console Output (Send character in reg C)
0319   E8D9             ;================================================================================================
0320   E8D9 3A 03 00    CONOUT:	LD	A,(iobyte)
0321   E8DC E6 03       		AND	3
0322   E8DE FE 00       		CP	0
0323   E8E0 CA 90 E8    		JP	Z,TTYOUT
0324   E8E3 FE 01       		CP	1
0325   E8E5 CA 93 E8    		JP	Z,CRTOUT
0326   E8E8 FE 02       		CP	2
0327   E8EA CA 96 E8    		JP	Z,BATOUT
0328   E8ED C3 99 E8    		JP	UC1OUT
0329   E8F0             
0330   E8F0             ;================================================================================================
0331   E8F0             ; Reader Input
0332   E8F0             ;================================================================================================
0333   E8F0 3A 03 00    READER:	LD	A,(iobyte)
0334   E8F3 E6 0C       		AND	0CH
0335   E8F5 FE 00       		CP	0
0336   E8F7 CA 7B E8    		JP	Z,TTYIN
0337   E8FA FE 04       		CP	4
0338   E8FC CA 87 E8    		JP	Z,PTRIN
0339   E8FF FE 08       		CP	8
0340   E901 CA 8A E8    		JP	Z,UR1IN
0341   E904 C3 8D E8    		JP	UR2IN
0342   E907             
0343   E907             ;================================================================================================
0344   E907             ; List Output
0345   E907             ;================================================================================================
0346   E907 3A 03 00    LIST:	LD	A,(iobyte)
0347   E90A E6 C0       		AND	0C0H
0348   E90C FE 00       		CP	0
0349   E90E CA 90 E8    		JP	Z,TTYOUT
0350   E911 FE 40       		CP	40H
0351   E913 CA 93 E8    		JP	Z,CRTOUT
0352   E916 FE 80       		CP	80H
0353   E918 CA 9C E8    		JP	Z,LPTOUT
0354   E91B C3 9F E8    		JP	UL1OUT
0355   E91E             
0356   E91E             ;================================================================================================
0357   E91E             ; Punch Output
0358   E91E             ;================================================================================================
0359   E91E 3A 03 00    PUNCH:	LD	A,(iobyte)
0360   E921 E6 30       		AND	030H
0361   E923 FE 00       		CP	0
0362   E925 CA 90 E8    		JP	Z,TTYOUT
0363   E928 FE 40       		CP	40H
0364   E92A CA A2 E8    		JP	Z,PTPOUT
0365   E92D FE 80       		CP	80H
0366   E92F CA A5 E8    		JP	Z,UP1OUT
0367   E932 C3 A8 E8    		JP	UP2OUT
0368   E935             
0369   E935             ;================================================================================================
0370   E935             ; List Status
0371   E935             ;================================================================================================
0372   E935 3A 03 00    LISTST:	LD	A,(iobyte)
0373   E938 E6 C0       		AND	0C0H
0374   E93A FE 00       		CP	0
0375   E93C CA 69 E8    		JP	Z,TTYST
0376   E93F FE 40       		CP	40H
0377   E941 CA 6C E8    		JP	Z,CRTST
0378   E944 FE 80       		CP	80H
0379   E946 CA 75 E8    		JP	Z,LPTST
0380   E949 C3 78 E8    		JP	UL1ST
0381   E94C             
0382   E94C             ;================================================================================================
0383   E94C             ; PORT 0 (on TTY card) input.
0384   E94C             ;================================================================================================
0385   E94C             PORT0IN:
0386   E94C DB C2       		IN	A,(PORT0_STA)
0387   E94E FE 00       		CP	0
0388   E950 28 FA       		JR	Z,PORT0IN
0389   E952 DB C0       		IN	A,(PORT0_DAT)
0390   E954 C9          		RET
0391   E955             		
0392   E955             ;================================================================================================
0393   E955             ; PORT 0 (on USART v2) output.
0394   E955             ;================================================================================================
0395   E955             PORT0OUT:
0396   E955 79          		LD	A,C
0397   E956 D3 C0       		OUT	(PORT0_DAT),A
0398   E958 C9          		RET
0399   E959             		
0400   E959             ;================================================================================================
0401   E959             ; PORT 0 (on TTY card) status.
0402   E959             ;================================================================================================
0403   E959             PORT0ST:
0404   E959 DB C2       		IN	A,(PORT0_STA)
0405   E95B C9          		RET
0406   E95C             		
0407   E95C             ;================================================================================================
0408   E95C             ; PORT 1 (on USART v2) input.
0409   E95C             ;================================================================================================
0410   E95C             PORT1IN:
0411   E95C DB C3       		IN	A,(PORT1_STA)
0412   E95E FE 00       		CP	0
0413   E960 28 FA       		JR	Z,PORT1IN
0414   E962 DB C1       		IN	A,(PORT1_DAT)
0415   E964 C9          		RET
0416   E965             		
0417   E965             ;================================================================================================
0418   E965             ; PORT 1 (on USART v2) output.
0419   E965             ;================================================================================================
0420   E965             PORT1OUT:
0421   E965 79          		LD	A,C
0422   E966 D3 C1       		OUT	(PORT1_DAT),A
0423   E968 C9          		RET
0424   E969             		
0425   E969             ;================================================================================================
0426   E969             ; PORT 1 (on USART v2) status.
0427   E969             ;================================================================================================
0428   E969             PORT1ST:
0429   E969 DB C3       		IN	A,(PORT1_STA)
0430   E96B C9          		RET
0431   E96C             		
0432   E96C             ;================================================================================================
0433   E96C             ; Disk processing entry points
0434   E96C             ;================================================================================================
0435   E96C             seldsk:
0436   E96C 21 00 00    		LD	HL,$0000
0437   E96F 79          		LD	A,C
0438   E970 FE 10       		CP	16		; 16 for 128MB disk, 8 for 64MB disk
0439   E972 38 0D       		jr	C,chgdsk	; if invalid drive will give BDOS error
0440   E974 3A 04 00    		LD	A,(userdrv)	; so set the drive back to a:
0441   E977 B9          		CP	C		; If the default disk is not the same as the
0442   E978 C0          		RET	NZ		; selected drive then return, 
0443   E979 AF          		XOR	A		; else reset default back to a:
0444   E97A 32 04 00    		LD	(userdrv),A	; otherwise will be stuck in a loop
0445   E97D 32 48 FC    		LD	(sekdsk),A
0446   E980 C9          		ret
0447   E981             
0448   E981 32 48 FC    chgdsk:		LD 	(sekdsk),A
0449   E984 CB 07       		RLC	a		;*2
0450   E986 CB 07       		RLC	a		;*4
0451   E988 CB 07       		RLC	a		;*8
0452   E98A CB 07       		RLC	a		;*16
0453   E98C 21 56 E6    		LD 	HL,dpbase
0454   E98F 06 00       		LD	b,0
0455   E991 4F          		LD	c,A	
0456   E992 09          		ADD	HL,BC
0457   E993             
0458   E993 C9          		RET
0459   E994             
0460   E994             ;------------------------------------------------------------------------------------------------
0461   E994             home:
0462   E994 3A 53 FC    		ld	a,(hstwrt)	;check for pending write
0463   E997 B7          		or	a
0464   E998 20 03       		jr	nz,homed
0465   E99A 32 52 FC    		ld	(hstact),a	;clear host active flag
0466   E99D             homed:
0467   E99D 01 00 00    		LD 	BC,0000h
0468   E9A0             
0469   E9A0             ;------------------------------------------------------------------------------------------------
0470   E9A0 ED 43 49 FC settrk:		LD 	(sektrk),BC	; Set track passed from BDOS in register BC.
0471   E9A4 C9          		RET
0472   E9A5             
0473   E9A5             ;------------------------------------------------------------------------------------------------
0474   E9A5 ED 43 4B FC setsec:		LD 	(seksec),BC	; Set sector passed from BDOS in register BC.
0475   E9A9 C9          		RET
0476   E9AA             
0477   E9AA             ;------------------------------------------------------------------------------------------------
0478   E9AA ED 43 5D FC setdma:		LD 	(dmaAddr),BC	; Set DMA ADDress given by registers BC.
0479   E9AE C9          		RET
0480   E9AF             
0481   E9AF             ;------------------------------------------------------------------------------------------------
0482   E9AF C5          sectran:	PUSH 	BC
0483   E9B0 E1          		POP 	HL
0484   E9B1 C9          		RET
0485   E9B2             
0486   E9B2             ;------------------------------------------------------------------------------------------------
0487   E9B2             read:
0488   E9B2             		;read the selected CP/M sector
0489   E9B2 AF          		xor	a
0490   E9B3 32 54 FC    		ld	(unacnt),a
0491   E9B6 3E 01       		ld	a,1
0492   E9B8 32 5B FC    		ld	(readop),a		;read operation
0493   E9BB 32 5A FC    		ld	(rsflag),a		;must read data
0494   E9BE 3E 02       		ld	a,wrual
0495   E9C0 32 5C FC    		ld	(wrtype),a		;treat as unalloc
0496   E9C3 C3 2D EA    		jp	rwoper			;to perform the read
0497   E9C6             
0498   E9C6             
0499   E9C6             ;------------------------------------------------------------------------------------------------
0500   E9C6             write:
0501   E9C6             		;write the selected CP/M sector
0502   E9C6 AF          		xor	a		;0 to accumulator
0503   E9C7 32 5B FC    		ld	(readop),a	;not a read operation
0504   E9CA 79          		ld	a,c		;write type in c
0505   E9CB 32 5C FC    		ld	(wrtype),a
0506   E9CE FE 02       		cp	wrual		;write unallocated?
0507   E9D0 20 17       		jr	nz,chkuna	;check for unalloc
0508   E9D2             ;
0509   E9D2             ;		write to unallocated, set parameters
0510   E9D2 3E 20       		ld	a,blksiz/128	;next unalloc recs
0511   E9D4 32 54 FC    		ld	(unacnt),a
0512   E9D7 3A 48 FC    		ld	a,(sekdsk)		;disk to seek
0513   E9DA 32 55 FC    		ld	(unadsk),a		;unadsk = sekdsk
0514   E9DD 2A 49 FC    		ld	hl,(sektrk)
0515   E9E0 22 56 FC    		ld	(unatrk),hl		;unatrk = sectrk
0516   E9E3 3A 4B FC    		ld	a,(seksec)
0517   E9E6 32 58 FC    		ld	(unasec),a		;unasec = seksec
0518   E9E9             ;
0519   E9E9             chkuna:
0520   E9E9             ;		check for write to unallocated sector
0521   E9E9 3A 54 FC    		ld	a,(unacnt)		;any unalloc remain?
0522   E9EC B7          		or	a	
0523   E9ED 28 36       		jr	z,alloc		;skip if not
0524   E9EF             ;
0525   E9EF             ;		more unallocated records remain
0526   E9EF 3D          		dec	a		;unacnt = unacnt-1
0527   E9F0 32 54 FC    		ld	(unacnt),a
0528   E9F3 3A 48 FC    		ld	a,(sekdsk)		;same disk?
0529   E9F6 21 55 FC    		ld	hl,unadsk
0530   E9F9 BE          		cp	(hl)		;sekdsk = unadsk?
0531   E9FA C2 25 EA    		jp	nz,alloc		;skip if not
0532   E9FD             ;
0533   E9FD             ;		disks are the same
0534   E9FD 21 56 FC    		ld	hl,unatrk
0535   EA00 CD C4 EA    		call	sektrkcmp	;sektrk = unatrk?
0536   EA03 C2 25 EA    		jp	nz,alloc		;skip if not
0537   EA06             ;
0538   EA06             ;		tracks are the same
0539   EA06 3A 4B FC    		ld	a,(seksec)		;same sector?
0540   EA09 21 58 FC    		ld	hl,unasec
0541   EA0C BE          		cp	(hl)		;seksec = unasec?
0542   EA0D C2 25 EA    		jp	nz,alloc		;skip if not
0543   EA10             ;
0544   EA10             ;		match, move to next sector for future ref
0545   EA10 34          		inc	(hl)		;unasec = unasec+1
0546   EA11 7E          		ld	a,(hl)		;end of track?
0547   EA12 FE 80       		cp	cpmspt		;count CP/M sectors
0548   EA14 38 09       		jr	c,noovf		;skip if no overflow
0549   EA16             ;
0550   EA16             ;		overflow to next track
0551   EA16 36 00       		ld	(hl),0		;unasec = 0
0552   EA18 2A 56 FC    		ld	hl,(unatrk)
0553   EA1B 23          		inc	hl
0554   EA1C 22 56 FC    		ld	(unatrk),hl		;unatrk = unatrk+1
0555   EA1F             ;
0556   EA1F             noovf:
0557   EA1F             		;match found, mark as unnecessary read
0558   EA1F AF          		xor	a		;0 to accumulator
0559   EA20 32 5A FC    		ld	(rsflag),a		;rsflag = 0
0560   EA23 18 08       		jr	rwoper		;to perform the write
0561   EA25             ;
0562   EA25             alloc:
0563   EA25             		;not an unallocated record, requires pre-read
0564   EA25 AF          		xor	a		;0 to accum
0565   EA26 32 54 FC    		ld	(unacnt),a		;unacnt = 0
0566   EA29 3C          		inc	a		;1 to accum
0567   EA2A 32 5A FC    		ld	(rsflag),a		;rsflag = 1
0568   EA2D             
0569   EA2D             ;------------------------------------------------------------------------------------------------
0570   EA2D             rwoper:
0571   EA2D             		;enter here to perform the read/write
0572   EA2D AF          		xor	a		;zero to accum
0573   EA2E 32 59 FC    		ld	(erflag),a		;no errors (yet)
0574   EA31 3A 4B FC    		ld	a,(seksec)		;compute host sector
0575   EA34 B7          		or	a		;carry = 0
0576   EA35 1F          		rra			;shift right
0577   EA36 B7          		or	a		;carry = 0
0578   EA37 1F          		rra			;shift right
0579   EA38 32 51 FC    		ld	(sekhst),a		;host sector to seek
0580   EA3B             ;
0581   EA3B             ;		active host sector?
0582   EA3B 21 52 FC    		ld	hl,hstact	;host active flag
0583   EA3E 7E          		ld	a,(hl)
0584   EA3F 36 01       		ld	(hl),1		;always becomes 1
0585   EA41 B7          		or	a		;was it already?
0586   EA42 28 21       		jr	z,filhst		;fill host if not
0587   EA44             ;
0588   EA44             ;		host buffer active, same as seek buffer?
0589   EA44 3A 48 FC    		ld	a,(sekdsk)
0590   EA47 21 4D FC    		ld	hl,hstdsk	;same disk?
0591   EA4A BE          		cp	(hl)		;sekdsk = hstdsk?
0592   EA4B 20 11       		jr	nz,nomatch
0593   EA4D             ;
0594   EA4D             ;		same disk, same track?
0595   EA4D 21 4E FC    		ld	hl,hsttrk
0596   EA50 CD C4 EA    		call	sektrkcmp	;sektrk = hsttrk?
0597   EA53 20 09       		jr	nz,nomatch
0598   EA55             ;
0599   EA55             ;		same disk, same track, same buffer?
0600   EA55 3A 51 FC    		ld	a,(sekhst)
0601   EA58 21 50 FC    		ld	hl,hstsec	;sekhst = hstsec?
0602   EA5B BE          		cp	(hl)
0603   EA5C 28 24       		jr	z,match		;skip if match
0604   EA5E             ;
0605   EA5E             nomatch:
0606   EA5E             		;proper disk, but not correct sector
0607   EA5E 3A 53 FC    		ld	a,(hstwrt)		;host written?
0608   EA61 B7          		or	a
0609   EA62 C4 6C EB    		call	nz,writehst	;clear host buff
0610   EA65             ;
0611   EA65             filhst:
0612   EA65             		;may have to fill the host buffer
0613   EA65 3A 48 FC    		ld	a,(sekdsk)
0614   EA68 32 4D FC    		ld	(hstdsk),a
0615   EA6B 2A 49 FC    		ld	hl,(sektrk)
0616   EA6E 22 4E FC    		ld	(hsttrk),hl
0617   EA71 3A 51 FC    		ld	a,(sekhst)
0618   EA74 32 50 FC    		ld	(hstsec),a
0619   EA77 3A 5A FC    		ld	a,(rsflag)		;need to read?
0620   EA7A B7          		or	a
0621   EA7B C4 43 EB    		call	nz,readhst		;yes, if 1
0622   EA7E AF          		xor	a		;0 to accum
0623   EA7F 32 53 FC    		ld	(hstwrt),a		;no pending write
0624   EA82             ;
0625   EA82             match:
0626   EA82             		;copy data to or from buffer
0627   EA82 3A 4B FC    		ld	a,(seksec)		;mask buffer number
0628   EA85 E6 03       		and	secmsk		;least signif bits
0629   EA87 6F          		ld	l,a		;ready to shift
0630   EA88 26 00       		ld	h,0		;double count
0631   EA8A 29          		add	hl,hl
0632   EA8B 29          		add	hl,hl
0633   EA8C 29          		add	hl,hl
0634   EA8D 29          		add	hl,hl
0635   EA8E 29          		add	hl,hl
0636   EA8F 29          		add	hl,hl
0637   EA90 29          		add	hl,hl
0638   EA91             ;		hl has relative host buffer address
0639   EA91 11 5F FC    		ld	de,hstbuf
0640   EA94 19          		add	hl,de		;hl = host address
0641   EA95 EB          		ex	de,hl			;now in DE
0642   EA96 2A 5D FC    		ld	hl,(dmaAddr)		;get/put CP/M data
0643   EA99 0E 80       		ld	c,128		;length of move
0644   EA9B 3A 5B FC    		ld	a,(readop)		;which way?
0645   EA9E B7          		or	a
0646   EA9F 20 06       		jr	nz,rwmove		;skip if read
0647   EAA1             ;
0648   EAA1             ;	write operation, mark and switch direction
0649   EAA1 3E 01       		ld	a,1
0650   EAA3 32 53 FC    		ld	(hstwrt),a		;hstwrt = 1
0651   EAA6 EB          		ex	de,hl			;source/dest swap
0652   EAA7             ;
0653   EAA7             rwmove:
0654   EAA7             		;C initially 128, DE is source, HL is dest
0655   EAA7 1A          		ld	a,(de)		;source character
0656   EAA8 13          		inc	de
0657   EAA9 77          		ld	(hl),a		;to dest
0658   EAAA 23          		inc	hl
0659   EAAB 0D          		dec	c		;loop 128 times
0660   EAAC 20 F9       		jr	nz,rwmove
0661   EAAE             ;
0662   EAAE             ;		data has been moved to/from host buffer
0663   EAAE 3A 5C FC    		ld	a,(wrtype)		;write type
0664   EAB1 FE 01       		cp	wrdir		;to directory?
0665   EAB3 3A 59 FC    		ld	a,(erflag)		;in case of errors
0666   EAB6 C0          		ret	nz			;no further processing
0667   EAB7             ;
0668   EAB7             ;		clear host buffer for directory write
0669   EAB7 B7          		or	a		;errors?
0670   EAB8 C0          		ret	nz			;skip if so
0671   EAB9 AF          		xor	a		;0 to accum
0672   EABA 32 53 FC    		ld	(hstwrt),a		;buffer written
0673   EABD CD 6C EB    		call	writehst
0674   EAC0 3A 59 FC    		ld	a,(erflag)
0675   EAC3 C9          		ret
0676   EAC4             
0677   EAC4             ;------------------------------------------------------------------------------------------------
0678   EAC4             ;Utility subroutine for 16-bit compare
0679   EAC4             sektrkcmp:
0680   EAC4             		;HL = .unatrk or .hsttrk, compare with sektrk
0681   EAC4 EB          		ex	de,hl
0682   EAC5 21 49 FC    		ld	hl,sektrk
0683   EAC8 1A          		ld	a,(de)		;low byte compare
0684   EAC9 BE          		cp	(HL)		;same?
0685   EACA C0          		ret	nz			;return if not
0686   EACB             ;		low bytes equal, test high 1s
0687   EACB 13          		inc	de
0688   EACC 23          		inc	hl
0689   EACD 1A          		ld	a,(de)
0690   EACE BE          		cp	(hl)	;sets flags
0691   EACF C9          		ret
0692   EAD0             
0693   EAD0             ;================================================================================================
0694   EAD0             ; Convert track/head/sector into LBA for physical access to the disk
0695   EAD0             ;================================================================================================
0696   EAD0             setLBAaddr:	
0697   EAD0 2A 4E FC    		LD	HL,(hsttrk)
0698   EAD3 CB 05       		RLC	L
0699   EAD5 CB 05       		RLC	L
0700   EAD7 CB 05       		RLC	L
0701   EAD9 CB 05       		RLC	L
0702   EADB CB 05       		RLC	L
0703   EADD 7D          		LD	A,L
0704   EADE E6 E0       		AND	0E0H
0705   EAE0 6F          		LD	L,A
0706   EAE1 3A 50 FC    		LD	A,(hstsec)
0707   EAE4 85          		ADD	A,L
0708   EAE5 32 44 FC    		LD	(lba0),A
0709   EAE8             
0710   EAE8 2A 4E FC    		LD	HL,(hsttrk)
0711   EAEB CB 0D       		RRC	L
0712   EAED CB 0D       		RRC	L
0713   EAEF CB 0D       		RRC	L
0714   EAF1 7D          		LD	A,L
0715   EAF2 E6 1F       		AND	01FH
0716   EAF4 6F          		LD	L,A
0717   EAF5 CB 04       		RLC	H
0718   EAF7 CB 04       		RLC	H
0719   EAF9 CB 04       		RLC	H
0720   EAFB CB 04       		RLC	H
0721   EAFD CB 04       		RLC	H
0722   EAFF 7C          		LD	A,H
0723   EB00 E6 20       		AND	020H
0724   EB02 67          		LD	H,A
0725   EB03 3A 4D FC    		LD	A,(hstdsk)
0726   EB06 CB 07       		RLC	a
0727   EB08 CB 07       		RLC	a
0728   EB0A CB 07       		RLC	a
0729   EB0C CB 07       		RLC	a
0730   EB0E CB 07       		RLC	a
0731   EB10 CB 07       		RLC	a
0732   EB12 E6 C0       		AND	0C0H
0733   EB14 84          		ADD	A,H
0734   EB15 85          		ADD	A,L
0735   EB16 32 45 FC    		LD	(lba1),A
0736   EB19             		
0737   EB19             
0738   EB19 3A 4D FC    		LD	A,(hstdsk)
0739   EB1C CB 0F       		RRC	A
0740   EB1E CB 0F       		RRC	A
0741   EB20 E6 03       		AND	03H
0742   EB22 32 46 FC    		LD	(lba2),A
0743   EB25             
0744   EB25             ; LBA Mode using drive 0 = E0
0745   EB25 3E E0       		LD	a,0E0H
0746   EB27 32 47 FC    		LD	(lba3),A
0747   EB2A             
0748   EB2A             
0749   EB2A 3A 44 FC    		LD	A,(lba0)
0750   EB2D D3 B3       		OUT 	(CF_LBA0),A
0751   EB2F             
0752   EB2F 3A 45 FC    		LD	A,(lba1)
0753   EB32 D3 B4       		OUT 	(CF_LBA1),A
0754   EB34             
0755   EB34 3A 46 FC    		LD	A,(lba2)
0756   EB37 D3 B5       		OUT 	(CF_LBA2),A
0757   EB39             
0758   EB39 3A 47 FC    		LD	A,(lba3)
0759   EB3C D3 B6       		OUT 	(CF_LBA3),A
0760   EB3E             
0761   EB3E 3E 01       		LD 	A,1
0762   EB40 D3 B2       		OUT 	(CF_SECCOUNT),A
0763   EB42             
0764   EB42 C9          		RET				
0765   EB43             
0766   EB43             ;================================================================================================
0767   EB43             ; Read physical sector from host
0768   EB43             ;================================================================================================
0769   EB43             readhst:
0770   EB43 F5          		PUSH 	AF
0771   EB44 C5          		PUSH 	BC
0772   EB45 E5          		PUSH 	HL
0773   EB46             
0774   EB46 CD 95 EB    		CALL 	cfWait
0775   EB49             
0776   EB49 CD D0 EA    		CALL 	setLBAaddr
0777   EB4C             
0778   EB4C 3E 20       		LD 	A,CF_READ_SEC
0779   EB4E D3 B7       		OUT 	(CF_COMMAND),A
0780   EB50             
0781   EB50 CD 95 EB    		CALL 	cfWait
0782   EB53             
0783   EB53 0E 04       		LD 	c,4
0784   EB55 21 5F FC    		LD 	HL,hstbuf
0785   EB58             rd4secs:
0786   EB58 06 80       		LD 	b,128
0787   EB5A             rdByte:
0788   EB5A DB B0       		in 	A,(CF_DATA)
0789   EB5C 77          		LD 	(HL),A
0790   EB5D 23          		iNC 	HL
0791   EB5E 05          		dec 	b
0792   EB5F 20 F9       		JR 	NZ, rdByte
0793   EB61 0D          		dec 	c
0794   EB62 20 F4       		JR 	NZ,rd4secs
0795   EB64             
0796   EB64 E1          		POP 	HL
0797   EB65 C1          		POP 	BC
0798   EB66 F1          		POP 	AF
0799   EB67             
0800   EB67 AF          		XOR 	a
0801   EB68 32 59 FC    		ld	(erflag),a
0802   EB6B C9          		RET
0803   EB6C             
0804   EB6C             ;================================================================================================
0805   EB6C             ; Write physical sector to host
0806   EB6C             ;================================================================================================
0807   EB6C             writehst:
0808   EB6C F5          		PUSH 	AF
0809   EB6D C5          		PUSH 	BC
0810   EB6E E5          		PUSH 	HL
0811   EB6F             
0812   EB6F CD 95 EB    		CALL 	cfWait
0813   EB72             
0814   EB72 CD D0 EA    		CALL 	setLBAaddr
0815   EB75             
0816   EB75 3E 30       		LD 	A,CF_WRITE_SEC
0817   EB77 D3 B7       		OUT 	(CF_COMMAND),A
0818   EB79             
0819   EB79 CD 95 EB    		CALL 	cfWait
0820   EB7C             
0821   EB7C 0E 04       		LD 	c,4
0822   EB7E 21 5F FC    		LD 	HL,hstbuf
0823   EB81             wr4secs:
0824   EB81 06 80       		LD 	b,128
0825   EB83 7E          wrByte:		LD 	A,(HL)
0826   EB84 D3 B0       		OUT 	(CF_DATA),A
0827   EB86 23          		iNC 	HL
0828   EB87 05          		dec 	b
0829   EB88 20 F9       		JR 	NZ, wrByte
0830   EB8A             
0831   EB8A 0D          		dec 	c
0832   EB8B 20 F4       		JR 	NZ,wr4secs
0833   EB8D             
0834   EB8D E1          		POP 	HL
0835   EB8E C1          		POP 	BC
0836   EB8F F1          		POP 	AF
0837   EB90             
0838   EB90 AF          		XOR 	a
0839   EB91 32 59 FC    		ld	(erflag),a
0840   EB94 C9          		RET
0841   EB95             
0842   EB95             ;================================================================================================
0843   EB95             ; Wait for disk to be ready (busy=0,ready=1)
0844   EB95             ;================================================================================================
0845   EB95             cfWait:
0846   EB95 F5          		PUSH 	AF
0847   EB96             cfWait1:
0848   EB96 DB B7       		in 	A,(CF_STATUS)
0849   EB98 E6 80       		AND 	080H
0850   EB9A FE 80       		cp 	080H
0851   EB9C 28 F8       		JR	Z,cfWait1
0852   EB9E F1          		POP 	AF
0853   EB9F C9          		RET
0854   EBA0             
0855   EBA0             ;================================================================================================
0856   EBA0             ; Print (on console) a sequence of characters ending with zero
0857   EBA0             ;================================================================================================
0858   EBA0             PRINTSEQ:
0859   EBA0 E3          		EX 	(SP),HL 		; Push HL and put RET address into HL
0860   EBA1 F5          		PUSH 	AF
0861   EBA2 C5          		PUSH 	BC
0862   EBA3             NEXTCHAR:
0863   EBA3 7E          		LD 	A,(HL)
0864   EBA4 FE 00       		CP	0
0865   EBA6 28 07       		JR	Z,ENDOFPRINT
0866   EBA8 4F          		LD  	C,A
0867   EBA9 CD D9 E8    		CALL 	CONOUT		; Print to console
0868   EBAC 23          		INC 	HL
0869   EBAD 18 F4       		JR	NEXTCHAR
0870   EBAF             ENDOFPRINT:
0871   EBAF 23          		INC 	HL 			; Get past "null" terminator
0872   EBB0 C1          		POP 	BC
0873   EBB1 F1          		POP 	AF
0874   EBB2 E3          		EX 	(SP),HL 		; Push new RET address on stack and restore HL
0875   EBB3 C9          		RET
0876   EBB4             
0877   EBB4             ;================================================================================================
0878   EBB4             ; Data storage
0879   EBB4             ;================================================================================================
0880   EBB4             dirbuf: 	.ds 128 		;scratch directory area
0881   EC34             alv00: 		.ds 257			;allocation vector 0
0882   ED35             alv01: 		.ds 257			;allocation vector 1
0883   EE36             alv02: 		.ds 257			;allocation vector 2
0884   EF37             alv03: 		.ds 257			;allocation vector 3
0885   F038             alv04: 		.ds 257			;allocation vector 4
0886   F139             alv05: 		.ds 257			;allocation vector 5
0887   F23A             alv06: 		.ds 257			;allocation vector 6
0888   F33B             alv07: 		.ds 257			;allocation vector 7
0889   F43C             alv08: 		.ds 257			;allocation vector 8
0890   F53D             alv09: 		.ds 257			;allocation vector 9
0891   F63E             alv10: 		.ds 257			;allocation vector 10
0892   F73F             alv11: 		.ds 257			;allocation vector 11
0893   F840             alv12: 		.ds 257			;allocation vector 12
0894   F941             alv13: 		.ds 257			;allocation vector 13
0895   FA42             alv14: 		.ds 257			;allocation vector 14
0896   FB43             alv15: 		.ds 257			;allocation vector 15
0897   FC44             
0898   FC44 00          lba0		.DB	00h
0899   FC45 00          lba1		.DB	00h
0900   FC46 00          lba2		.DB	00h
0901   FC47 00          lba3		.DB	00h
0902   FC48             
0903   FC48             sekdsk:		.ds	1		;seek disk number
0904   FC49             sektrk:		.ds	2		;seek track number
0905   FC4B             seksec:		.ds	2		;seek sector number
0906   FC4D             ;
0907   FC4D             hstdsk:		.ds	1		;host disk number
0908   FC4E             hsttrk:		.ds	2		;host track number
0909   FC50             hstsec:		.ds	1		;host sector number
0910   FC51             ;
0911   FC51             sekhst:		.ds	1		;seek shr secshf
0912   FC52             hstact:		.ds	1		;host active flag
0913   FC53             hstwrt:		.ds	1		;host written flag
0914   FC54             ;
0915   FC54             unacnt:		.ds	1		;unalloc rec cnt
0916   FC55             unadsk:		.ds	1		;last unalloc disk
0917   FC56             unatrk:		.ds	2		;last unalloc track
0918   FC58             unasec:		.ds	1		;last unalloc sector
0919   FC59             ;
0920   FC59             erflag:		.ds	1		;error reporting
0921   FC5A             rsflag:		.ds	1		;read sector flag
0922   FC5B             readop:		.ds	1		;1 if read operation
0923   FC5C             wrtype:		.ds	1		;write operation type
0924   FC5D             dmaAddr:	.ds	2		;last dma address
0925   FC5F             hstbuf:		.ds	512		;host buffer
0926   FE5F             hstBufEnd:	.EQU	$
0927   FE5F             
0928   FE5F             			.DS	020h			; Start of BIOS stack area.
0929   FE7F             BIOSSTACK:	.EQU	$
0930   FE7F             
0931   FE7F             biosEnd:	.EQU	$
0932   FE7F             
0933   FE7F             		.END
tasm: Number of errors = 0
