0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ; Blocking/unblocking routines are the published version by Digital Research
0004   0000             ; (bugfixed, as found on the web)
0005   0000             ;
0006   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0007   0000             ;
0008   0000             ; Customized by Kaltchuk for use with Z80 Modular Computer, december/2020.
0009   0000             ; CP/M is booted from ROM.
0010   0000             ;
0011   0000             ; 04/02/21 - version B corrects a bug in wboot.
0012   0000             ; 09/06/21 - version C sets serial comm to 38.4kbps and
0013   0000             ;            puts "IOBYTE set" in the cold boot.
0014   0000             ; 12/06/21 - version D fixes a bug with CONIN.
0015   0000             ; 16/06/21 - version 2.0 is mainly about the new serial communication card,
0016   0000             ;            which doesn't use interrupt signal because all the buffering is
0017   0000             ;            done by the card instead of the CPU. IOBYTE is also fully
0018   0000             ;            implemented.
0019   0000             ;==================================================================================
0020   0000             #INCLUDE	"equates.h"
0001+  0000             
0002+  0000             CCP				.EQU	0D000h			; Base of CCP (or Monitor).
0003+  0000             BIOS			.EQU	0E620h			; Base of BIOS.
0004+  0000             ROM_CCP			.EQU	CCP-0C000h		; Base of CCP in ROM
0005+  0000             ROM_BIOS		.EQU	BIOS-0C000h		; Base of BIOS in ROM
0006+  0000             
0007+  0000             ccp				.EQU	CCP
0008+  0000             bios			.EQU	BIOS
0021   0000             
0022   0000             ; Set CP/M low memory data, vector and buffer addresses.
0023   0000             
0024   0000             iobyte			.EQU	03h				; Intel standard I/O definition byte.
0025   0000             userdrv			.EQU	04h				; Current user number and drive.
0026   0000             tpabuf			.EQU	80h				; Default I/O buffer and command line storage.
0027   0000             
0028   0000             blksiz			.equ	4096			;CP/M allocation size
0029   0000             hstsiz			.equ	512				;host disk sector size
0030   0000             hstspt			.equ	32				;host disk sectors/trk
0031   0000             hstblk			.equ	hstsiz/128		;CP/M sects/host buff
0032   0000             cpmspt			.equ	hstblk * hstspt	;CP/M sectors/track
0033   0000             secmsk			.equ	hstblk-1		;sector mask
0034   0000             										;compute sector mask
0035   0000             ;secshf			.equ	2				;log2(hstblk)
0036   0000             	
0037   0000             wrall			.equ	0				;write to allocated
0038   0000             wrdir			.equ	1				;write to directory
0039   0000             wrual			.equ	2				;write to unallocated
0040   0000             
0041   0000             ; MEM card stuff
0042   0000             MEM_ADDR		.EQU	0F0H			; MEM card address
0043   0000             ROM_RAM0		.EQU	MEM_ADDR		; ROM + RAM bank 0
0044   0000             NOROM_RAM0		.EQU	MEM_ADDR+1		; no ROM + RAM bank 0 (full RAM)
0045   0000             ROM_RAM1		.EQU	MEM_ADDR+2		; ROM + RAM bank 1
0046   0000             NOROM_RAM1		.EQU	MEM_ADDR+3		; no ROM + RAM bank 1 (full RAM)
0047   0000             
0048   0000             ; TTY card stuff
0049   0000             PORT0			.EQU	0C0H		; PORT 0 address		(physical device TTY for CP/M)
0050   0000             PORT0_DAT		.EQU	PORT0		; PORT 0 data addr
0051   0000             PORT0_STA		.EQU	PORT0+2		; PORT 0 status addr
0052   0000             
0053   0000             PORT1			.EQU	PORT0+1		; PORT 1 address		(physical device CRT for CP/M)
0054   0000             PORT1_DAT		.EQU	PORT1		; PORT 1 data addr
0055   0000             PORT1_STA		.EQU	PORT1+2		; PORT 1 status addr
0056   0000             
0057   0000             ; FLASH card stuff
0058   0000             FLASH_ADDR		.EQU	0B0H			; FLASH card address
0059   0000             CF_DATA			.EQU	(FLASH_ADDR+0)	; R/W
0060   0000             CF_FEATURES		.EQU	(FLASH_ADDR+1)	; W
0061   0000             CF_ERROR		.EQU	(FLASH_ADDR+1)	; R
0062   0000             CF_SECCOUNT		.EQU	(FLASH_ADDR+2)	; W
0063   0000             
0064   0000             CF_SECTOR		.EQU	(FLASH_ADDR+3)	; W
0065   0000             CF_CYL_LOW		.EQU	(FLASH_ADDR+4)	; W
0066   0000             CF_CYL_HI		.EQU	(FLASH_ADDR+5)	; W
0067   0000             CF_HEAD			.EQU	(FLASH_ADDR+6)	; W
0068   0000             
0069   0000             CF_LBA0			.EQU	(FLASH_ADDR+3)	; W
0070   0000             CF_LBA1			.EQU	(FLASH_ADDR+4)	; W
0071   0000             CF_LBA2			.EQU	(FLASH_ADDR+5)	; W
0072   0000             CF_LBA3			.EQU	(FLASH_ADDR+6)	; W
0073   0000             
0074   0000             CF_STATUS		.EQU	(FLASH_ADDR+7)	; R
0075   0000             CF_COMMAND		.EQU	(FLASH_ADDR+7)	; W
0076   0000             
0077   0000             ;CF Features
0078   0000             CF_8BIT			.EQU	1
0079   0000             CF_NOCACHE		.EQU	082H
0080   0000             
0081   0000             ;CF Commands
0082   0000             CF_READ_SEC		.EQU	020H
0083   0000             CF_WRITE_SEC	.EQU	030H
0084   0000             CF_SET_FEAT		.EQU 	0EFH
0085   0000             
0086   0000             ;================================================================================================
0087   0000             ; ASCII characters.
0088   0000             ;================================================================================================
0089   0000             NUL			.EQU	00H
0090   0000             LF			.EQU	0AH
0091   0000             FF			.EQU	0CH
0092   0000             CR			.EQU	0DH
0093   0000             DC1			.EQU	11H
0094   0000             DC2			.EQU	12H
0095   0000             DC3			.EQU	13H
0096   0000             DC4			.EQU	14H
0097   0000             ;================================================================================================
0098   0000             
0099   E620             		.ORG	bios					; BIOS origin.
0100   E620             
0101   E620             ;================================================================================================
0102   E620             ; BIOS jump table.
0103   E620             ;================================================================================================
0104   E620 C3 83 E7    		JP	boot						;  0 Initialize.
0105   E623 C3 2C E8    wboote:	JP	wboot						;  1 Warm boot.
0106   E626 C3 E0 E8    		JP	CONST						;  2 Console status.
0107   E629 C3 F7 E8    		JP	CONIN						;  3 Console input.
0108   E62C C3 0E E9    		JP	CONOUT						;  4 Console OUTput.
0109   E62F C3 3C E9    		JP	LIST						;  5 List OUTput.
0110   E632 C3 53 E9    		JP	PUNCH						;  6 punch OUTput.
0111   E635 C3 25 E9    		JP	READER						;  7 Reader input.
0112   E638 C3 C9 E9    		JP	home						;  8 Home disk.
0113   E63B C3 A1 E9    		JP	seldsk						;  9 Select disk.
0114   E63E C3 D5 E9    		JP	settrk						; 10 Select track.
0115   E641 C3 DA E9    		JP	setsec						; 11 Select sector.
0116   E644 C3 DF E9    		JP	setdma						; 12 Set DMA ADDress.
0117   E647 C3 E7 E9    		JP	read						; 13 Read 128 bytes.
0118   E64A C3 FB E9    		JP	write						; 14 Write 128 bytes.
0119   E64D C3 6A E9    		JP	LISTST						; 15 List status.
0120   E650 C3 E4 E9    		JP	sectran						; 16 Sector translate.
0121   E653 C3 D5 EB    		JP	PRINTSEQ					; not a BIOS function
0122   E656             
0123   E656             ;================================================================================================
0124   E656             ; Disk parameter headers for disk 0 to 15
0125   E656             ;================================================================================================
0126   E656             dpbase:
0127   E656 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb0,0000h,alv00
0127   E65A 00 00 00 00 
0127   E65E E9 EB 56 E7 
0127   E662 00 00 69 EC 
0128   E666 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv01
0128   E66A 00 00 00 00 
0128   E66E E9 EB 65 E7 
0128   E672 00 00 6A ED 
0129   E676 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv02
0129   E67A 00 00 00 00 
0129   E67E E9 EB 65 E7 
0129   E682 00 00 6B EE 
0130   E686 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv03
0130   E68A 00 00 00 00 
0130   E68E E9 EB 65 E7 
0130   E692 00 00 6C EF 
0131   E696 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv04
0131   E69A 00 00 00 00 
0131   E69E E9 EB 65 E7 
0131   E6A2 00 00 6D F0 
0132   E6A6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv05
0132   E6AA 00 00 00 00 
0132   E6AE E9 EB 65 E7 
0132   E6B2 00 00 6E F1 
0133   E6B6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv06
0133   E6BA 00 00 00 00 
0133   E6BE E9 EB 65 E7 
0133   E6C2 00 00 6F F2 
0134   E6C6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv07
0134   E6CA 00 00 00 00 
0134   E6CE E9 EB 65 E7 
0134   E6D2 00 00 70 F3 
0135   E6D6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv08
0135   E6DA 00 00 00 00 
0135   E6DE E9 EB 65 E7 
0135   E6E2 00 00 71 F4 
0136   E6E6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv09
0136   E6EA 00 00 00 00 
0136   E6EE E9 EB 65 E7 
0136   E6F2 00 00 72 F5 
0137   E6F6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv10
0137   E6FA 00 00 00 00 
0137   E6FE E9 EB 65 E7 
0137   E702 00 00 73 F6 
0138   E706 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv11
0138   E70A 00 00 00 00 
0138   E70E E9 EB 65 E7 
0138   E712 00 00 74 F7 
0139   E716 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv12
0139   E71A 00 00 00 00 
0139   E71E E9 EB 65 E7 
0139   E722 00 00 75 F8 
0140   E726 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv13
0140   E72A 00 00 00 00 
0140   E72E E9 EB 65 E7 
0140   E732 00 00 76 F9 
0141   E736 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv14
0141   E73A 00 00 00 00 
0141   E73E E9 EB 65 E7 
0141   E742 00 00 77 FA 
0142   E746 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpbLast,0000h,alv15
0142   E74A 00 00 00 00 
0142   E74E E9 EB 74 E7 
0142   E752 00 00 78 FB 
0143   E756             
0144   E756             ; First drive has a reserved track for CP/M
0145   E756             dpb0:
0146   E756 80 00       		.DW 128 ;SPT - sectors per track
0147   E758 05          		.DB 5   ;BSH - block shift factor
0148   E759 1F          		.DB 31  ;BLM - block mask
0149   E75A 01          		.DB 1   ;EXM - Extent mask
0150   E75B FB 07       		.DW 2043 ; (2047-4) DSM - Storage size (blocks - 1)
0151   E75D FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0152   E75F F0          		.DB 240 ;AL0 - 1 bit set per directory block
0153   E760 00          		.DB 0   ;AL1 -            "
0154   E761 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0155   E763 01 00       		.DW 1   ;ON  - Reserved tracks
0156   E765             
0157   E765             dpb:
0158   E765 80 00       		.DW 128 ;SPT - sectors per track
0159   E767 05          		.DB 5   ;BSH - block shift factor
0160   E768 1F          		.DB 31  ;BLM - block mask
0161   E769 01          		.DB 1   ;EXM - Extent mask
0162   E76A FF 07       		.DW 2047 ;DSM - Storage size (blocks - 1)
0163   E76C FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0164   E76E F0          		.DB 240 ;AL0 - 1 bit set per directory block
0165   E76F 00          		.DB 0   ;AL1 -            "
0166   E770 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0167   E772 00 00       		.DW 0   ;OFF - Reserved tracks
0168   E774             
0169   E774             ; Last drive is smaller because CF is never full 64MB or 128MB
0170   E774             dpbLast:
0171   E774 80 00       		.DW 128 ;SPT - sectors per track
0172   E776 05          		.DB 5   ;BSH - block shift factor
0173   E777 1F          		.DB 31  ;BLM - block mask
0174   E778 01          		.DB 1   ;EXM - Extent mask
0175   E779 FF 01       		.DW 511 ;DSM - Storage size (blocks - 1)  ; 511 = 2MB (for 128MB card), 1279 = 5MB (for 64MB card)
0176   E77B FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0177   E77D F0          		.DB 240 ;AL0 - 1 bit set per directory block
0178   E77E 00          		.DB 0   ;AL1 -            "
0179   E77F 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0180   E781 00 00       		.DW 0   ;OFF - Reserved tracks
0181   E783             
0182   E783             ;================================================================================================
0183   E783             ; Cold boot
0184   E783             ;================================================================================================
0185   E783             
0186   E783 F3          boot:	DI						; Disable interrupts.
0187   E784 31 B4 FE    		LD	SP,BIOSSTACK		; Set default stack.
0188   E787             
0189   E787 D3 F1       		OUT (NOROM_RAM0),A		; Turn off ROM. Doesn't matter what we output
0190   E789             
0191   E789 CD CA EB    		CALL	cfWait			; Initialize FLASH
0192   E78C 3E 01       		LD 	A,CF_8BIT			; Set IDE to be 8bit
0193   E78E D3 B1       		OUT	(CF_FEATURES),A
0194   E790 3E EF       		LD	A,CF_SET_FEAT
0195   E792 D3 B7       		OUT	(CF_COMMAND),A
0196   E794             
0197   E794 CD CA EB    		CALL	cfWait
0198   E797 3E 82       		LD 	A,CF_NOCACHE		; No write cache
0199   E799 D3 B1       		OUT	(CF_FEATURES),A
0200   E79B 3E EF       		LD	A,CF_SET_FEAT
0201   E79D D3 B7       		OUT	(CF_COMMAND),A
0202   E79F             
0203   E79F AF          		XOR	A
0204   E7A0 32 04 00    		LD	(userdrv),A			; set drive byte to A:
0205   E7A3 32 03 00    		LD	(iobyte),A			; Set IOBYTE to 00
0206   E7A6             
0207   E7A6 CD D5 EB    		CALL	PRINTSEQ
0208   E7A9 0D 0A       		.DB CR,LF
0209   E7AB 5A 38 30 20 		.DB "Z80 Modular Computer by Kaltchuk 2020.",CR,LF
0209   E7AF 4D 6F 64 75 
0209   E7B3 6C 61 72 20 
0209   E7B7 43 6F 6D 70 
0209   E7BB 75 74 65 72 
0209   E7BF 20 62 79 20 
0209   E7C3 4B 61 6C 74 
0209   E7C7 63 68 75 6B 
0209   E7CB 20 32 30 32 
0209   E7CF 30 2E 0D 0A 
0210   E7D3 4B 42 49 4F 		.DB "KBIOS 2.0 - 128MB Compact Flash.",CR,LF
0210   E7D7 53 20 32 2E 
0210   E7DB 30 20 2D 20 
0210   E7DF 31 32 38 4D 
0210   E7E3 42 20 43 6F 
0210   E7E7 6D 70 61 63 
0210   E7EB 74 20 46 6C 
0210   E7EF 61 73 68 2E 
0210   E7F3 0D 0A 
0211   E7F5 43 50 2F 4D 		.DB "CP/M 2.2 Copyright 1979 (c) by Digital Research",CR,LF,CR,LF,0
0211   E7F9 20 32 2E 32 
0211   E7FD 20 43 6F 70 
0211   E801 79 72 69 67 
0211   E805 68 74 20 31 
0211   E809 39 37 39 20 
0211   E80D 28 63 29 20 
0211   E811 62 79 20 44 
0211   E815 69 67 69 74 
0211   E819 61 6C 20 52 
0211   E81D 65 73 65 61 
0211   E821 72 63 68 0D 
0211   E825 0A 0D 0A 00 
0212   E829             
0213   E829 C3 73 E8    		JP	gocpm
0214   E82C             
0215   E82C             ;================================================================================================
0216   E82C             ; Warm boot
0217   E82C             ;================================================================================================
0218   E82C             
0219   E82C F3          wboot:	DI						; Disable interrupts.
0220   E82D 31 B4 FE    		LD	SP,BIOSSTACK		; Set default stack.
0221   E830             
0222   E830 06 0B       		LD	B,11 ; Number of sectors to reload
0223   E832             
0224   E832 3E 00       		LD	A,0
0225   E834 32 85 FC    		LD	(hstsec),A
0226   E837 21 00 D0    		LD	HL,ccp
0227   E83A             rdSectors:
0228   E83A             
0229   E83A CD CA EB    		CALL	cfWait
0230   E83D             
0231   E83D 3A 85 FC    		LD	A,(hstsec)
0232   E840 D3 B3       		OUT 	(CF_LBA0),A
0233   E842 3E 00       		LD	A,0
0234   E844 D3 B4       		OUT 	(CF_LBA1),A
0235   E846 D3 B5       		OUT 	(CF_LBA2),A
0236   E848 3E E0       		LD	a,0E0H
0237   E84A D3 B6       		OUT 	(CF_LBA3),A
0238   E84C 3E 01       		LD 	A,1
0239   E84E D3 B2       		OUT 	(CF_SECCOUNT),A
0240   E850             
0241   E850 C5          		PUSH 	BC
0242   E851             
0243   E851 CD CA EB    		CALL 	cfWait
0244   E854             
0245   E854 3E 20       		LD 	A,CF_READ_SEC
0246   E856 D3 B7       		OUT 	(CF_COMMAND),A
0247   E858             
0248   E858 CD CA EB    		CALL 	cfWait
0249   E85B             
0250   E85B 0E 04       		LD 	c,4
0251   E85D             rd4secs512:
0252   E85D 06 80       		LD 	b,128
0253   E85F             rdByte512:
0254   E85F DB B0       		in 	A,(CF_DATA)
0255   E861 77          		LD 	(HL),A
0256   E862 23          		iNC 	HL
0257   E863 05          		dec 	b
0258   E864 20 F9       		JR 	NZ, rdByte512
0259   E866 0D          		dec 	c
0260   E867 20 F4       		JR 	NZ,rd4secs512
0261   E869             
0262   E869 C1          		POP 	BC
0263   E86A             
0264   E86A 3A 85 FC    		LD	A,(hstsec)
0265   E86D 3C          		INC	A
0266   E86E 32 85 FC    		LD	(hstsec),A
0267   E871             
0268   E871 10 C7       		djnz	rdSectors
0269   E873             
0270   E873             ;================================================================================================
0271   E873             ; Common code for cold and warm boot
0272   E873             ;================================================================================================
0273   E873             
0274   E873 AF          gocpm:	XOR	A					; 0 to accumulator
0275   E874 32 87 FC    		LD	(hstact),A			; host buffer inactive
0276   E877 32 89 FC    		LD	(unacnt),A			; clear unalloc count
0277   E87A             
0278   E87A 21 80 00    		LD	HL,tpabuf			; ADDress of BIOS DMA buffer.
0279   E87D 22 92 FC    		LD	(dmaAddr),HL
0280   E880             		
0281   E880 3E C3       		LD	A,0C3h				; Opcode for 'JP'.
0282   E882 32 00 00    		LD	(00h),A				; Load at start of RAM.
0283   E885 21 23 E6    		LD	HL,wboote			; ADDress of jump for a warm boot.
0284   E888 22 01 00    		LD	(01h),HL
0285   E88B 32 05 00    		LD	(05h),A				; Opcode for 'JP'.
0286   E88E 2A 1E E6    		LD	HL,(BIOS-2)			; ADDress of jump for the BDOS.
0287   E891 22 06 00    		LD	(06h),HL
0288   E894 3A 04 00    		LD	A,(userdrv)			; Save new drive number (0).
0289   E897 4F          		LD	C,A					; Pass drive number in C.
0290   E898             
0291   E898 ED 46       		IM	0
0292   E89A FB          		EI
0293   E89B             	
0294   E89B C3 00 D0    		JP	ccp					; Start CP/M by jumping to the CCP.
0295   E89E             
0296   E89E             ;================================================================================================
0297   E89E             ; PHYSICAL DEVICE JUMP TABLE.
0298   E89E             ; Used by CONST, CONIN, CONOUT, LIST, PUNCH, READER and LISTST according to IOBYTE setting.
0299   E89E             ; All physical devices that aren't present will be forwarded to TTY.
0300   E89E             ;================================================================================================
0301   E89E C3 8E E9    TTYST:	JP	PORT0ST
0302   E8A1 C3 9E E9    CRTST:	JP	PORT1ST
0303   E8A4 C3 6A E9    BATST:	JP	LISTST
0304   E8A7 C3 9E E8    UC1ST:	JP	TTYST		; No physical device present
0305   E8AA C3 9E E8    LPTST:	JP	TTYST		; No physical device present
0306   E8AD C3 9E E8    UL1ST:	JP	TTYST		; No physical device present
0307   E8B0             
0308   E8B0 C3 81 E9    TTYIN:	JP	PORT0IN
0309   E8B3 C3 91 E9    CRTIN:	JP	PORT1IN
0310   E8B6 C3 25 E9    BATIN:	JP	READER
0311   E8B9 C3 B0 E8    UC1IN:	JP	TTYIN		; No physical device present
0312   E8BC C3 B0 E8    PTRIN:	JP	TTYIN		; No physical device present
0313   E8BF C3 B0 E8    UR1IN:	JP	TTYIN		; No physical device present
0314   E8C2 C3 B0 E8    UR2IN:	JP	TTYIN		; No physical device present
0315   E8C5             
0316   E8C5 C3 8A E9    TTYOUT:	JP	PORT0OUT
0317   E8C8 C3 9A E9    CRTOUT:	JP	PORT1OUT
0318   E8CB C3 3C E9    BATOUT:	JP	LIST
0319   E8CE C3 C5 E8    UC1OUT:	JP	TTYOUT		; No physical device present
0320   E8D1 C3 C5 E8    LPTOUT:	JP	TTYOUT		; No physical device present
0321   E8D4 C3 C5 E8    UL1OUT:	JP	TTYOUT		; No physical device present
0322   E8D7 C3 C5 E8    PTPOUT:	JP	TTYOUT		; No physical device present
0323   E8DA C3 C5 E8    UP1OUT:	JP	TTYOUT		; No physical device present
0324   E8DD C3 C5 E8    UP2OUT:	JP	TTYOUT		; No physical device present
0325   E8E0             
0326   E8E0             ;================================================================================================
0327   E8E0             ; Console I/O routines
0328   E8E0             ;================================================================================================
0329   E8E0             ;================================================================================================
0330   E8E0             ; Console Status (Return A=0FFh if character waiting. Otherwise, A=0)
0331   E8E0             ;================================================================================================
0332   E8E0 3A 03 00    CONST:	LD	A,(iobyte)
0333   E8E3 E6 03       		AND	3
0334   E8E5 FE 00       		CP	0
0335   E8E7 CA 9E E8    		JP	Z,TTYST
0336   E8EA FE 01       		CP	1
0337   E8EC CA A1 E8    		JP	Z,CRTST
0338   E8EF FE 02       		CP	2
0339   E8F1 CA A4 E8    		JP	Z,BATST
0340   E8F4 C3 A7 E8    		JP	UC1ST
0341   E8F7             
0342   E8F7             ;================================================================================================
0343   E8F7             ; Console Input (Wait for input and return character in A)
0344   E8F7             ;================================================================================================
0345   E8F7 3A 03 00    CONIN:	LD	A,(iobyte)
0346   E8FA E6 03       		AND	3
0347   E8FC FE 00       		CP	0
0348   E8FE CA B0 E8    		JP	Z,TTYIN
0349   E901 FE 01       		CP	1
0350   E903 CA B3 E8    		JP	Z,CRTIN
0351   E906 FE 02       		CP	2
0352   E908 CA B6 E8    		JP	Z,BATIN
0353   E90B C3 B9 E8    		JP	UC1IN
0354   E90E             
0355   E90E             ;================================================================================================
0356   E90E             ; Console Output (Send character in reg C)
0357   E90E             ;================================================================================================
0358   E90E 3A 03 00    CONOUT:	LD	A,(iobyte)
0359   E911 E6 03       		AND	3
0360   E913 FE 00       		CP	0
0361   E915 CA C5 E8    		JP	Z,TTYOUT
0362   E918 FE 01       		CP	1
0363   E91A CA C8 E8    		JP	Z,CRTOUT
0364   E91D FE 02       		CP	2
0365   E91F CA CB E8    		JP	Z,BATOUT
0366   E922 C3 CE E8    		JP	UC1OUT
0367   E925             
0368   E925             ;================================================================================================
0369   E925             ; Reader Input
0370   E925             ;================================================================================================
0371   E925 3A 03 00    READER:	LD	A,(iobyte)
0372   E928 E6 0C       		AND	0CH
0373   E92A FE 00       		CP	0
0374   E92C CA B0 E8    		JP	Z,TTYIN
0375   E92F FE 04       		CP	4
0376   E931 CA BC E8    		JP	Z,PTRIN
0377   E934 FE 08       		CP	8
0378   E936 CA BF E8    		JP	Z,UR1IN
0379   E939 C3 C2 E8    		JP	UR2IN
0380   E93C             
0381   E93C             ;================================================================================================
0382   E93C             ; List Output
0383   E93C             ;================================================================================================
0384   E93C 3A 03 00    LIST:	LD	A,(iobyte)
0385   E93F E6 C0       		AND	0C0H
0386   E941 FE 00       		CP	0
0387   E943 CA C5 E8    		JP	Z,TTYOUT
0388   E946 FE 40       		CP	40H
0389   E948 CA C8 E8    		JP	Z,CRTOUT
0390   E94B FE 80       		CP	80H
0391   E94D CA D1 E8    		JP	Z,LPTOUT
0392   E950 C3 D4 E8    		JP	UL1OUT
0393   E953             
0394   E953             ;================================================================================================
0395   E953             ; Punch Output
0396   E953             ;================================================================================================
0397   E953 3A 03 00    PUNCH:	LD	A,(iobyte)
0398   E956 E6 30       		AND	030H
0399   E958 FE 00       		CP	0
0400   E95A CA C5 E8    		JP	Z,TTYOUT
0401   E95D FE 40       		CP	40H
0402   E95F CA D7 E8    		JP	Z,PTPOUT
0403   E962 FE 80       		CP	80H
0404   E964 CA DA E8    		JP	Z,UP1OUT
0405   E967 C3 DD E8    		JP	UP2OUT
0406   E96A             
0407   E96A             ;================================================================================================
0408   E96A             ; List Status
0409   E96A             ;================================================================================================
0410   E96A 3A 03 00    LISTST:	LD	A,(iobyte)
0411   E96D E6 C0       		AND	0C0H
0412   E96F FE 00       		CP	0
0413   E971 CA 9E E8    		JP	Z,TTYST
0414   E974 FE 40       		CP	40H
0415   E976 CA A1 E8    		JP	Z,CRTST
0416   E979 FE 80       		CP	80H
0417   E97B CA AA E8    		JP	Z,LPTST
0418   E97E C3 AD E8    		JP	UL1ST
0419   E981             
0420   E981             ;================================================================================================
0421   E981             ; PORT 0 (on TTY card) input.
0422   E981             ;================================================================================================
0423   E981             PORT0IN:
0424   E981 DB C2       		IN	A,(PORT0_STA)
0425   E983 FE 00       		CP	0
0426   E985 28 FA       		JR	Z,PORT0IN
0427   E987 DB C0       		IN	A,(PORT0_DAT)
0428   E989 C9          		RET
0429   E98A             		
0430   E98A             ;================================================================================================
0431   E98A             ; PORT 0 (on USART v2) output.
0432   E98A             ;================================================================================================
0433   E98A             PORT0OUT:
0434   E98A 79          		LD	A,C
0435   E98B D3 C0       		OUT	(PORT0_DAT),A
0436   E98D C9          		RET
0437   E98E             		
0438   E98E             ;================================================================================================
0439   E98E             ; PORT 0 (on TTY card) status.
0440   E98E             ;================================================================================================
0441   E98E             PORT0ST:
0442   E98E DB C2       		IN	A,(PORT0_STA)
0443   E990 C9          		RET
0444   E991             		
0445   E991             ;================================================================================================
0446   E991             ; PORT 1 (on USART v2) input.
0447   E991             ;================================================================================================
0448   E991             PORT1IN:
0449   E991 DB C3       		IN	A,(PORT1_STA)
0450   E993 FE 00       		CP	0
0451   E995 28 FA       		JR	Z,PORT1IN
0452   E997 DB C1       		IN	A,(PORT1_DAT)
0453   E999 C9          		RET
0454   E99A             		
0455   E99A             ;================================================================================================
0456   E99A             ; PORT 1 (on USART v2) output.
0457   E99A             ;================================================================================================
0458   E99A             PORT1OUT:
0459   E99A 79          		LD	A,C
0460   E99B D3 C1       		OUT	(PORT1_DAT),A
0461   E99D C9          		RET
0462   E99E             		
0463   E99E             ;================================================================================================
0464   E99E             ; PORT 1 (on USART v2) status.
0465   E99E             ;================================================================================================
0466   E99E             PORT1ST:
0467   E99E DB C3       		IN	A,(PORT1_STA)
0468   E9A0 C9          		RET
0469   E9A1             		
0470   E9A1             ;================================================================================================
0471   E9A1             ; Disk processing entry points
0472   E9A1             ;================================================================================================
0473   E9A1             seldsk:
0474   E9A1 21 00 00    		LD	HL,$0000
0475   E9A4 79          		LD	A,C
0476   E9A5 FE 10       		CP	16		; 16 for 128MB disk, 8 for 64MB disk
0477   E9A7 38 0D       		jr	C,chgdsk	; if invalid drive will give BDOS error
0478   E9A9 3A 04 00    		LD	A,(userdrv)	; so set the drive back to a:
0479   E9AC B9          		CP	C		; If the default disk is not the same as the
0480   E9AD C0          		RET	NZ		; selected drive then return, 
0481   E9AE AF          		XOR	A		; else reset default back to a:
0482   E9AF 32 04 00    		LD	(userdrv),A	; otherwise will be stuck in a loop
0483   E9B2 32 7D FC    		LD	(sekdsk),A
0484   E9B5 C9          		ret
0485   E9B6             
0486   E9B6 32 7D FC    chgdsk:		LD 	(sekdsk),A
0487   E9B9 CB 07       		RLC	a		;*2
0488   E9BB CB 07       		RLC	a		;*4
0489   E9BD CB 07       		RLC	a		;*8
0490   E9BF CB 07       		RLC	a		;*16
0491   E9C1 21 56 E6    		LD 	HL,dpbase
0492   E9C4 06 00       		LD	b,0
0493   E9C6 4F          		LD	c,A	
0494   E9C7 09          		ADD	HL,BC
0495   E9C8             
0496   E9C8 C9          		RET
0497   E9C9             
0498   E9C9             ;------------------------------------------------------------------------------------------------
0499   E9C9             home:
0500   E9C9 3A 88 FC    		ld	a,(hstwrt)	;check for pending write
0501   E9CC B7          		or	a
0502   E9CD 20 03       		jr	nz,homed
0503   E9CF 32 87 FC    		ld	(hstact),a	;clear host active flag
0504   E9D2             homed:
0505   E9D2 01 00 00    		LD 	BC,0000h
0506   E9D5             
0507   E9D5             ;------------------------------------------------------------------------------------------------
0508   E9D5 ED 43 7E FC settrk:		LD 	(sektrk),BC	; Set track passed from BDOS in register BC.
0509   E9D9 C9          		RET
0510   E9DA             
0511   E9DA             ;------------------------------------------------------------------------------------------------
0512   E9DA ED 43 80 FC setsec:		LD 	(seksec),BC	; Set sector passed from BDOS in register BC.
0513   E9DE C9          		RET
0514   E9DF             
0515   E9DF             ;------------------------------------------------------------------------------------------------
0516   E9DF ED 43 92 FC setdma:		LD 	(dmaAddr),BC	; Set DMA ADDress given by registers BC.
0517   E9E3 C9          		RET
0518   E9E4             
0519   E9E4             ;------------------------------------------------------------------------------------------------
0520   E9E4 C5          sectran:	PUSH 	BC
0521   E9E5 E1          		POP 	HL
0522   E9E6 C9          		RET
0523   E9E7             
0524   E9E7             ;------------------------------------------------------------------------------------------------
0525   E9E7             read:
0526   E9E7             		;read the selected CP/M sector
0527   E9E7 AF          		xor	a
0528   E9E8 32 89 FC    		ld	(unacnt),a
0529   E9EB 3E 01       		ld	a,1
0530   E9ED 32 90 FC    		ld	(readop),a		;read operation
0531   E9F0 32 8F FC    		ld	(rsflag),a		;must read data
0532   E9F3 3E 02       		ld	a,wrual
0533   E9F5 32 91 FC    		ld	(wrtype),a		;treat as unalloc
0534   E9F8 C3 62 EA    		jp	rwoper			;to perform the read
0535   E9FB             
0536   E9FB             
0537   E9FB             ;------------------------------------------------------------------------------------------------
0538   E9FB             write:
0539   E9FB             		;write the selected CP/M sector
0540   E9FB AF          		xor	a		;0 to accumulator
0541   E9FC 32 90 FC    		ld	(readop),a	;not a read operation
0542   E9FF 79          		ld	a,c		;write type in c
0543   EA00 32 91 FC    		ld	(wrtype),a
0544   EA03 FE 02       		cp	wrual		;write unallocated?
0545   EA05 20 17       		jr	nz,chkuna	;check for unalloc
0546   EA07             ;
0547   EA07             ;		write to unallocated, set parameters
0548   EA07 3E 20       		ld	a,blksiz/128	;next unalloc recs
0549   EA09 32 89 FC    		ld	(unacnt),a
0550   EA0C 3A 7D FC    		ld	a,(sekdsk)		;disk to seek
0551   EA0F 32 8A FC    		ld	(unadsk),a		;unadsk = sekdsk
0552   EA12 2A 7E FC    		ld	hl,(sektrk)
0553   EA15 22 8B FC    		ld	(unatrk),hl		;unatrk = sectrk
0554   EA18 3A 80 FC    		ld	a,(seksec)
0555   EA1B 32 8D FC    		ld	(unasec),a		;unasec = seksec
0556   EA1E             ;
0557   EA1E             chkuna:
0558   EA1E             ;		check for write to unallocated sector
0559   EA1E 3A 89 FC    		ld	a,(unacnt)		;any unalloc remain?
0560   EA21 B7          		or	a	
0561   EA22 28 36       		jr	z,alloc		;skip if not
0562   EA24             ;
0563   EA24             ;		more unallocated records remain
0564   EA24 3D          		dec	a		;unacnt = unacnt-1
0565   EA25 32 89 FC    		ld	(unacnt),a
0566   EA28 3A 7D FC    		ld	a,(sekdsk)		;same disk?
0567   EA2B 21 8A FC    		ld	hl,unadsk
0568   EA2E BE          		cp	(hl)		;sekdsk = unadsk?
0569   EA2F C2 5A EA    		jp	nz,alloc		;skip if not
0570   EA32             ;
0571   EA32             ;		disks are the same
0572   EA32 21 8B FC    		ld	hl,unatrk
0573   EA35 CD F9 EA    		call	sektrkcmp	;sektrk = unatrk?
0574   EA38 C2 5A EA    		jp	nz,alloc		;skip if not
0575   EA3B             ;
0576   EA3B             ;		tracks are the same
0577   EA3B 3A 80 FC    		ld	a,(seksec)		;same sector?
0578   EA3E 21 8D FC    		ld	hl,unasec
0579   EA41 BE          		cp	(hl)		;seksec = unasec?
0580   EA42 C2 5A EA    		jp	nz,alloc		;skip if not
0581   EA45             ;
0582   EA45             ;		match, move to next sector for future ref
0583   EA45 34          		inc	(hl)		;unasec = unasec+1
0584   EA46 7E          		ld	a,(hl)		;end of track?
0585   EA47 FE 80       		cp	cpmspt		;count CP/M sectors
0586   EA49 38 09       		jr	c,noovf		;skip if no overflow
0587   EA4B             ;
0588   EA4B             ;		overflow to next track
0589   EA4B 36 00       		ld	(hl),0		;unasec = 0
0590   EA4D 2A 8B FC    		ld	hl,(unatrk)
0591   EA50 23          		inc	hl
0592   EA51 22 8B FC    		ld	(unatrk),hl		;unatrk = unatrk+1
0593   EA54             ;
0594   EA54             noovf:
0595   EA54             		;match found, mark as unnecessary read
0596   EA54 AF          		xor	a		;0 to accumulator
0597   EA55 32 8F FC    		ld	(rsflag),a		;rsflag = 0
0598   EA58 18 08       		jr	rwoper		;to perform the write
0599   EA5A             ;
0600   EA5A             alloc:
0601   EA5A             		;not an unallocated record, requires pre-read
0602   EA5A AF          		xor	a		;0 to accum
0603   EA5B 32 89 FC    		ld	(unacnt),a		;unacnt = 0
0604   EA5E 3C          		inc	a		;1 to accum
0605   EA5F 32 8F FC    		ld	(rsflag),a		;rsflag = 1
0606   EA62             
0607   EA62             ;------------------------------------------------------------------------------------------------
0608   EA62             rwoper:
0609   EA62             		;enter here to perform the read/write
0610   EA62 AF          		xor	a		;zero to accum
0611   EA63 32 8E FC    		ld	(erflag),a		;no errors (yet)
0612   EA66 3A 80 FC    		ld	a,(seksec)		;compute host sector
0613   EA69 B7          		or	a		;carry = 0
0614   EA6A 1F          		rra			;shift right
0615   EA6B B7          		or	a		;carry = 0
0616   EA6C 1F          		rra			;shift right
0617   EA6D 32 86 FC    		ld	(sekhst),a		;host sector to seek
0618   EA70             ;
0619   EA70             ;		active host sector?
0620   EA70 21 87 FC    		ld	hl,hstact	;host active flag
0621   EA73 7E          		ld	a,(hl)
0622   EA74 36 01       		ld	(hl),1		;always becomes 1
0623   EA76 B7          		or	a		;was it already?
0624   EA77 28 21       		jr	z,filhst		;fill host if not
0625   EA79             ;
0626   EA79             ;		host buffer active, same as seek buffer?
0627   EA79 3A 7D FC    		ld	a,(sekdsk)
0628   EA7C 21 82 FC    		ld	hl,hstdsk	;same disk?
0629   EA7F BE          		cp	(hl)		;sekdsk = hstdsk?
0630   EA80 20 11       		jr	nz,nomatch
0631   EA82             ;
0632   EA82             ;		same disk, same track?
0633   EA82 21 83 FC    		ld	hl,hsttrk
0634   EA85 CD F9 EA    		call	sektrkcmp	;sektrk = hsttrk?
0635   EA88 20 09       		jr	nz,nomatch
0636   EA8A             ;
0637   EA8A             ;		same disk, same track, same buffer?
0638   EA8A 3A 86 FC    		ld	a,(sekhst)
0639   EA8D 21 85 FC    		ld	hl,hstsec	;sekhst = hstsec?
0640   EA90 BE          		cp	(hl)
0641   EA91 28 24       		jr	z,match		;skip if match
0642   EA93             ;
0643   EA93             nomatch:
0644   EA93             		;proper disk, but not correct sector
0645   EA93 3A 88 FC    		ld	a,(hstwrt)		;host written?
0646   EA96 B7          		or	a
0647   EA97 C4 A1 EB    		call	nz,writehst	;clear host buff
0648   EA9A             ;
0649   EA9A             filhst:
0650   EA9A             		;may have to fill the host buffer
0651   EA9A 3A 7D FC    		ld	a,(sekdsk)
0652   EA9D 32 82 FC    		ld	(hstdsk),a
0653   EAA0 2A 7E FC    		ld	hl,(sektrk)
0654   EAA3 22 83 FC    		ld	(hsttrk),hl
0655   EAA6 3A 86 FC    		ld	a,(sekhst)
0656   EAA9 32 85 FC    		ld	(hstsec),a
0657   EAAC 3A 8F FC    		ld	a,(rsflag)		;need to read?
0658   EAAF B7          		or	a
0659   EAB0 C4 78 EB    		call	nz,readhst		;yes, if 1
0660   EAB3 AF          		xor	a		;0 to accum
0661   EAB4 32 88 FC    		ld	(hstwrt),a		;no pending write
0662   EAB7             ;
0663   EAB7             match:
0664   EAB7             		;copy data to or from buffer
0665   EAB7 3A 80 FC    		ld	a,(seksec)		;mask buffer number
0666   EABA E6 03       		and	secmsk		;least signif bits
0667   EABC 6F          		ld	l,a		;ready to shift
0668   EABD 26 00       		ld	h,0		;double count
0669   EABF 29          		add	hl,hl
0670   EAC0 29          		add	hl,hl
0671   EAC1 29          		add	hl,hl
0672   EAC2 29          		add	hl,hl
0673   EAC3 29          		add	hl,hl
0674   EAC4 29          		add	hl,hl
0675   EAC5 29          		add	hl,hl
0676   EAC6             ;		hl has relative host buffer address
0677   EAC6 11 94 FC    		ld	de,hstbuf
0678   EAC9 19          		add	hl,de		;hl = host address
0679   EACA EB          		ex	de,hl			;now in DE
0680   EACB 2A 92 FC    		ld	hl,(dmaAddr)		;get/put CP/M data
0681   EACE 0E 80       		ld	c,128		;length of move
0682   EAD0 3A 90 FC    		ld	a,(readop)		;which way?
0683   EAD3 B7          		or	a
0684   EAD4 20 06       		jr	nz,rwmove		;skip if read
0685   EAD6             ;
0686   EAD6             ;	write operation, mark and switch direction
0687   EAD6 3E 01       		ld	a,1
0688   EAD8 32 88 FC    		ld	(hstwrt),a		;hstwrt = 1
0689   EADB EB          		ex	de,hl			;source/dest swap
0690   EADC             ;
0691   EADC             rwmove:
0692   EADC             		;C initially 128, DE is source, HL is dest
0693   EADC 1A          		ld	a,(de)		;source character
0694   EADD 13          		inc	de
0695   EADE 77          		ld	(hl),a		;to dest
0696   EADF 23          		inc	hl
0697   EAE0 0D          		dec	c		;loop 128 times
0698   EAE1 20 F9       		jr	nz,rwmove
0699   EAE3             ;
0700   EAE3             ;		data has been moved to/from host buffer
0701   EAE3 3A 91 FC    		ld	a,(wrtype)		;write type
0702   EAE6 FE 01       		cp	wrdir		;to directory?
0703   EAE8 3A 8E FC    		ld	a,(erflag)		;in case of errors
0704   EAEB C0          		ret	nz			;no further processing
0705   EAEC             ;
0706   EAEC             ;		clear host buffer for directory write
0707   EAEC B7          		or	a		;errors?
0708   EAED C0          		ret	nz			;skip if so
0709   EAEE AF          		xor	a		;0 to accum
0710   EAEF 32 88 FC    		ld	(hstwrt),a		;buffer written
0711   EAF2 CD A1 EB    		call	writehst
0712   EAF5 3A 8E FC    		ld	a,(erflag)
0713   EAF8 C9          		ret
0714   EAF9             
0715   EAF9             ;------------------------------------------------------------------------------------------------
0716   EAF9             ;Utility subroutine for 16-bit compare
0717   EAF9             sektrkcmp:
0718   EAF9             		;HL = .unatrk or .hsttrk, compare with sektrk
0719   EAF9 EB          		ex	de,hl
0720   EAFA 21 7E FC    		ld	hl,sektrk
0721   EAFD 1A          		ld	a,(de)		;low byte compare
0722   EAFE BE          		cp	(HL)		;same?
0723   EAFF C0          		ret	nz			;return if not
0724   EB00             ;		low bytes equal, test high 1s
0725   EB00 13          		inc	de
0726   EB01 23          		inc	hl
0727   EB02 1A          		ld	a,(de)
0728   EB03 BE          		cp	(hl)	;sets flags
0729   EB04 C9          		ret
0730   EB05             
0731   EB05             ;================================================================================================
0732   EB05             ; Convert track/head/sector into LBA for physical access to the disk
0733   EB05             ;================================================================================================
0734   EB05             setLBAaddr:	
0735   EB05 2A 83 FC    		LD	HL,(hsttrk)
0736   EB08 CB 05       		RLC	L
0737   EB0A CB 05       		RLC	L
0738   EB0C CB 05       		RLC	L
0739   EB0E CB 05       		RLC	L
0740   EB10 CB 05       		RLC	L
0741   EB12 7D          		LD	A,L
0742   EB13 E6 E0       		AND	0E0H
0743   EB15 6F          		LD	L,A
0744   EB16 3A 85 FC    		LD	A,(hstsec)
0745   EB19 85          		ADD	A,L
0746   EB1A 32 79 FC    		LD	(lba0),A
0747   EB1D             
0748   EB1D 2A 83 FC    		LD	HL,(hsttrk)
0749   EB20 CB 0D       		RRC	L
0750   EB22 CB 0D       		RRC	L
0751   EB24 CB 0D       		RRC	L
0752   EB26 7D          		LD	A,L
0753   EB27 E6 1F       		AND	01FH
0754   EB29 6F          		LD	L,A
0755   EB2A CB 04       		RLC	H
0756   EB2C CB 04       		RLC	H
0757   EB2E CB 04       		RLC	H
0758   EB30 CB 04       		RLC	H
0759   EB32 CB 04       		RLC	H
0760   EB34 7C          		LD	A,H
0761   EB35 E6 20       		AND	020H
0762   EB37 67          		LD	H,A
0763   EB38 3A 82 FC    		LD	A,(hstdsk)
0764   EB3B CB 07       		RLC	a
0765   EB3D CB 07       		RLC	a
0766   EB3F CB 07       		RLC	a
0767   EB41 CB 07       		RLC	a
0768   EB43 CB 07       		RLC	a
0769   EB45 CB 07       		RLC	a
0770   EB47 E6 C0       		AND	0C0H
0771   EB49 84          		ADD	A,H
0772   EB4A 85          		ADD	A,L
0773   EB4B 32 7A FC    		LD	(lba1),A
0774   EB4E             		
0775   EB4E             
0776   EB4E 3A 82 FC    		LD	A,(hstdsk)
0777   EB51 CB 0F       		RRC	A
0778   EB53 CB 0F       		RRC	A
0779   EB55 E6 03       		AND	03H
0780   EB57 32 7B FC    		LD	(lba2),A
0781   EB5A             
0782   EB5A             ; LBA Mode using drive 0 = E0
0783   EB5A 3E E0       		LD	a,0E0H
0784   EB5C 32 7C FC    		LD	(lba3),A
0785   EB5F             
0786   EB5F             
0787   EB5F 3A 79 FC    		LD	A,(lba0)
0788   EB62 D3 B3       		OUT 	(CF_LBA0),A
0789   EB64             
0790   EB64 3A 7A FC    		LD	A,(lba1)
0791   EB67 D3 B4       		OUT 	(CF_LBA1),A
0792   EB69             
0793   EB69 3A 7B FC    		LD	A,(lba2)
0794   EB6C D3 B5       		OUT 	(CF_LBA2),A
0795   EB6E             
0796   EB6E 3A 7C FC    		LD	A,(lba3)
0797   EB71 D3 B6       		OUT 	(CF_LBA3),A
0798   EB73             
0799   EB73 3E 01       		LD 	A,1
0800   EB75 D3 B2       		OUT 	(CF_SECCOUNT),A
0801   EB77             
0802   EB77 C9          		RET				
0803   EB78             
0804   EB78             ;================================================================================================
0805   EB78             ; Read physical sector from host
0806   EB78             ;================================================================================================
0807   EB78             readhst:
0808   EB78 F5          		PUSH 	AF
0809   EB79 C5          		PUSH 	BC
0810   EB7A E5          		PUSH 	HL
0811   EB7B             
0812   EB7B CD CA EB    		CALL 	cfWait
0813   EB7E             
0814   EB7E CD 05 EB    		CALL 	setLBAaddr
0815   EB81             
0816   EB81 3E 20       		LD 	A,CF_READ_SEC
0817   EB83 D3 B7       		OUT 	(CF_COMMAND),A
0818   EB85             
0819   EB85 CD CA EB    		CALL 	cfWait
0820   EB88             
0821   EB88 0E 04       		LD 	c,4
0822   EB8A 21 94 FC    		LD 	HL,hstbuf
0823   EB8D             rd4secs:
0824   EB8D 06 80       		LD 	b,128
0825   EB8F             rdByte:
0826   EB8F DB B0       		in 	A,(CF_DATA)
0827   EB91 77          		LD 	(HL),A
0828   EB92 23          		iNC 	HL
0829   EB93 05          		dec 	b
0830   EB94 20 F9       		JR 	NZ, rdByte
0831   EB96 0D          		dec 	c
0832   EB97 20 F4       		JR 	NZ,rd4secs
0833   EB99             
0834   EB99 E1          		POP 	HL
0835   EB9A C1          		POP 	BC
0836   EB9B F1          		POP 	AF
0837   EB9C             
0838   EB9C AF          		XOR 	a
0839   EB9D 32 8E FC    		ld	(erflag),a
0840   EBA0 C9          		RET
0841   EBA1             
0842   EBA1             ;================================================================================================
0843   EBA1             ; Write physical sector to host
0844   EBA1             ;================================================================================================
0845   EBA1             writehst:
0846   EBA1 F5          		PUSH 	AF
0847   EBA2 C5          		PUSH 	BC
0848   EBA3 E5          		PUSH 	HL
0849   EBA4             
0850   EBA4 CD CA EB    		CALL 	cfWait
0851   EBA7             
0852   EBA7 CD 05 EB    		CALL 	setLBAaddr
0853   EBAA             
0854   EBAA 3E 30       		LD 	A,CF_WRITE_SEC
0855   EBAC D3 B7       		OUT 	(CF_COMMAND),A
0856   EBAE             
0857   EBAE CD CA EB    		CALL 	cfWait
0858   EBB1             
0859   EBB1 0E 04       		LD 	c,4
0860   EBB3 21 94 FC    		LD 	HL,hstbuf
0861   EBB6             wr4secs:
0862   EBB6 06 80       		LD 	b,128
0863   EBB8 7E          wrByte:		LD 	A,(HL)
0864   EBB9 D3 B0       		OUT 	(CF_DATA),A
0865   EBBB 23          		iNC 	HL
0866   EBBC 05          		dec 	b
0867   EBBD 20 F9       		JR 	NZ, wrByte
0868   EBBF             
0869   EBBF 0D          		dec 	c
0870   EBC0 20 F4       		JR 	NZ,wr4secs
0871   EBC2             
0872   EBC2 E1          		POP 	HL
0873   EBC3 C1          		POP 	BC
0874   EBC4 F1          		POP 	AF
0875   EBC5             
0876   EBC5 AF          		XOR 	a
0877   EBC6 32 8E FC    		ld	(erflag),a
0878   EBC9 C9          		RET
0879   EBCA             
0880   EBCA             ;================================================================================================
0881   EBCA             ; Wait for disk to be ready (busy=0,ready=1)
0882   EBCA             ;================================================================================================
0883   EBCA             cfWait:
0884   EBCA F5          		PUSH 	AF
0885   EBCB             cfWait1:
0886   EBCB DB B7       		in 	A,(CF_STATUS)
0887   EBCD E6 80       		AND 	080H
0888   EBCF FE 80       		cp 	080H
0889   EBD1 28 F8       		JR	Z,cfWait1
0890   EBD3 F1          		POP 	AF
0891   EBD4 C9          		RET
0892   EBD5             
0893   EBD5             ;================================================================================================
0894   EBD5             ; Print (on console) a sequence of characters ending with zero
0895   EBD5             ;================================================================================================
0896   EBD5             PRINTSEQ:
0897   EBD5 E3          		EX 	(SP),HL 		; Push HL and put RET address into HL
0898   EBD6 F5          		PUSH 	AF
0899   EBD7 C5          		PUSH 	BC
0900   EBD8             NEXTCHAR:
0901   EBD8 7E          		LD 	A,(HL)
0902   EBD9 FE 00       		CP	0
0903   EBDB 28 07       		JR	Z,ENDOFPRINT
0904   EBDD 4F          		LD  	C,A
0905   EBDE CD 0E E9    		CALL 	CONOUT		; Print to console
0906   EBE1 23          		INC 	HL
0907   EBE2 18 F4       		JR	NEXTCHAR
0908   EBE4             ENDOFPRINT:
0909   EBE4 23          		INC 	HL 			; Get past "null" terminator
0910   EBE5 C1          		POP 	BC
0911   EBE6 F1          		POP 	AF
0912   EBE7 E3          		EX 	(SP),HL 		; Push new RET address on stack and restore HL
0913   EBE8 C9          		RET
0914   EBE9             
0915   EBE9             ;================================================================================================
0916   EBE9             ; Data storage
0917   EBE9             ;================================================================================================
0918   EBE9             dirbuf: 	.ds 128 		;scratch directory area
0919   EC69             alv00: 		.ds 257			;allocation vector 0
0920   ED6A             alv01: 		.ds 257			;allocation vector 1
0921   EE6B             alv02: 		.ds 257			;allocation vector 2
0922   EF6C             alv03: 		.ds 257			;allocation vector 3
0923   F06D             alv04: 		.ds 257			;allocation vector 4
0924   F16E             alv05: 		.ds 257			;allocation vector 5
0925   F26F             alv06: 		.ds 257			;allocation vector 6
0926   F370             alv07: 		.ds 257			;allocation vector 7
0927   F471             alv08: 		.ds 257			;allocation vector 8
0928   F572             alv09: 		.ds 257			;allocation vector 9
0929   F673             alv10: 		.ds 257			;allocation vector 10
0930   F774             alv11: 		.ds 257			;allocation vector 11
0931   F875             alv12: 		.ds 257			;allocation vector 12
0932   F976             alv13: 		.ds 257			;allocation vector 13
0933   FA77             alv14: 		.ds 257			;allocation vector 14
0934   FB78             alv15: 		.ds 257			;allocation vector 15
0935   FC79             
0936   FC79 00          lba0		.DB	00h
0937   FC7A 00          lba1		.DB	00h
0938   FC7B 00          lba2		.DB	00h
0939   FC7C 00          lba3		.DB	00h
0940   FC7D             
0941   FC7D             sekdsk:		.ds	1		;seek disk number
0942   FC7E             sektrk:		.ds	2		;seek track number
0943   FC80             seksec:		.ds	2		;seek sector number
0944   FC82             ;
0945   FC82             hstdsk:		.ds	1		;host disk number
0946   FC83             hsttrk:		.ds	2		;host track number
0947   FC85             hstsec:		.ds	1		;host sector number
0948   FC86             ;
0949   FC86             sekhst:		.ds	1		;seek shr secshf
0950   FC87             hstact:		.ds	1		;host active flag
0951   FC88             hstwrt:		.ds	1		;host written flag
0952   FC89             ;
0953   FC89             unacnt:		.ds	1		;unalloc rec cnt
0954   FC8A             unadsk:		.ds	1		;last unalloc disk
0955   FC8B             unatrk:		.ds	2		;last unalloc track
0956   FC8D             unasec:		.ds	1		;last unalloc sector
0957   FC8E             ;
0958   FC8E             erflag:		.ds	1		;error reporting
0959   FC8F             rsflag:		.ds	1		;read sector flag
0960   FC90             readop:		.ds	1		;1 if read operation
0961   FC91             wrtype:		.ds	1		;write operation type
0962   FC92             dmaAddr:	.ds	2		;last dma address
0963   FC94             hstbuf:		.ds	512		;host buffer
0964   FE94             hstBufEnd:	.EQU	$
0965   FE94             
0966   FE94             			.DS	020h			; Start of BIOS stack area.
0967   FEB4             BIOSSTACK:	.EQU	$
0968   FEB4             
0969   FEB4             biosEnd:	.EQU	$
0970   FEB4             
0971   FEB4             		.END
tasm: Number of errors = 0
