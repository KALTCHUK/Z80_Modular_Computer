RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.20.17.263, COMPILATION OF MODULE DO_8      
OBJECT MODULE PLACED IN C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Rid
            -e7\DO-8\DO-8.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\kaltc\Documents\GitHub\Z8
            -0_Modular_Computer\Ride7\DO-8\DO-8.obj) PIN(C:\Users\kaltc\Document
            -s\Raisonance\Ride\Inc;C:\Users\kaltc\Documents\Raisonance\Ride\Inc\
            -51) PIN(C:\Users\kaltc\Documents\Raisonance\Ride\\inc\51) NOAM CD P
            -R(C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Ride7\DO-8\D
            -O-8.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CHAR) PR PL(60) PW(80)
            - OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) SM MOD517(NODP8,NOAU
            -) 

stmt level    source
   1          /*
   2           DO-8.c - Modbus RTU Slave controller (AT89C4051) for DO-8 Card. B
            -y Kaltchuk, Sep/2022.
   3          */
   4          
   5          #include <REG51.h>
   6          #include "Serial.h"
   7          #include "EEPROM.h"

*** WARNING C176 IN LINE 112 OF EEPROM.h : '|' : only one operand have bit type
            -
   8          #include "ModbusSlave.h"

*** WARNING C233 IN LINE 57 OF ModbusSlave.h : using absolute registers togethe
            -r with interrupts can cause register corruptions (mixup of register
            - banks)

*** WARNING C191 IN LINE 145 OF ModbusSlave.h : Inconsistent comparison with 'u
            -nsigned'
   9          
  10          void main() {
  11   1      	numCoils = 8;
  12   1      	numDiscreteInputs = 0;
  13   1      	numHoldingRegisters = 4;
  14   1      
  15   1          _DE = 0;
  16   1      
  17   1      baud = 19200;	// factory set baud rate.
  18   1      	id = 1;			// factory set modbus slave id.
  19   1      
  20   1      	if (_FS == 1) {
  21   2      		baud = EEPROMread(0);
  22   2      		id =  EEPROMread(1);
  23   2      	}
  24   1      	serialInit(baud);
  25   1      	modbusBegin(baud);
  26   1      	
  27   1      	while (1) {
  28   2              modbusPoll();
  29   2      	}
  30   1      }
  31          
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 30

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _serialInit (BEGIN)
              ; Register R6R7 is assigned to parameter baud
                                           ; SOURCE LINE # 25 
0000 438920         ORL    TMOD,#020H
                                           ; SOURCE LINE # 26 
0003 438780         ORL    PCON,#080H
                                           ; SOURCE LINE # 27 
0006 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 28 
0009 BE2507         CJNE   R6,#025H,?LAB9
000C EF             MOV    A,R7
000D 2480           ADD    A,#080H
000F 6051           JZ     ?CASE10
0011 8061           SJMP   ?NXT1
0013         ?LAB9:
0013 5021           JNC    ?LAB10
0015 EE             MOV    A,R6
0016 B40407         CJNE   A,#004H,?LAB11
0019 EF             MOV    A,R7
001A 2450           ADD    A,#050H
001C 6035           JZ     ?CASE7
001E 8054           SJMP   ?NXT1
0020         ?LAB11:
0020 EE             MOV    A,R6
0021 B40907         CJNE   A,#009H,?LAB12
0024 EF             MOV    A,R7
0025 24A0           ADD    A,#0A0H
0027 602F           JZ     ?CASE8
0029 8049           SJMP   ?NXT1
002B         ?LAB12:
002B EE             MOV    A,R6
002C B41245         CJNE   A,#012H,?NXT1
002F EF             MOV    A,R7
0030 2440           ADD    A,#040H
0032 6029           JZ     ?CASE9
0034 803E           SJMP   ?NXT1
0036         ?LAB10:
0036 EE             MOV    A,R6
0037 B44B05         CJNE   A,#04BH,?LAB13
003A EF             MOV    A,R7
003B 602A           JZ     ?CASE11
003D 8035           SJMP   ?NXT1
003F         ?LAB13:
003F EE             MOV    A,R6
0040 B47007         CJNE   A,#070H,?LAB14
0043 EF             MOV    A,R7
0044 2480           ADD    A,#080H
0046 6024           JZ     ?CASE12
0048 802A           SJMP   ?NXT1
004A         ?LAB14:
004A EE             MOV    A,R6
004B B4E126         CJNE   A,#0E1H,?NXT1
004E EF             MOV    A,R7
004F 6020           JZ     ?CASE13
0051 8021           SJMP   ?NXT1
0053         ?CASE7:
                                           ; SOURCE LINE # 30 
0053 758DD0         MOV    TH1,#0D0H
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  2

                                           ; SOURCE LINE # 31 
0056 801C           SJMP   ?NXT1
0058         ?CASE8:
                                           ; SOURCE LINE # 33 
0058 758DE8         MOV    TH1,#0E8H
                                           ; SOURCE LINE # 34 
005B 8017           SJMP   ?NXT1
005D         ?CASE9:
                                           ; SOURCE LINE # 36 
005D 758DF4         MOV    TH1,#0F4H
                                           ; SOURCE LINE # 37 
0060 8012           SJMP   ?NXT1
0062         ?CASE10:
                                           ; SOURCE LINE # 39 
0062 758DFA         MOV    TH1,#0FAH
                                           ; SOURCE LINE # 40 
0065 800D           SJMP   ?NXT1
0067         ?CASE11:
                                           ; SOURCE LINE # 42 
0067 758DFD         MOV    TH1,#0FDH
                                           ; SOURCE LINE # 43 
006A 8008           SJMP   ?NXT1
006C         ?CASE12:
                                           ; SOURCE LINE # 45 
006C 758DFE         MOV    TH1,#0FEH
                                           ; SOURCE LINE # 46 
006F 8003           SJMP   ?NXT1
0071         ?CASE13:
                                           ; SOURCE LINE # 48 
0071 758DFF         MOV    TH1,#0FFH
0074         ?NXT1:
                                           ; SOURCE LINE # 51 
0074 D28E           SETB   TR1
                                           ; SOURCE LINE # 52 
0076 22             RET    

            ; FUNCTION _serialInit (END)

            ; FUNCTION _serialTX (BEGIN)
              ; Register R7 is assigned to parameter x
                                           ; SOURCE LINE # 55 
0000 8F99           MOV    SBUF,R7
0002         ?WHILE1:
                                           ; SOURCE LINE # 56 
0002 3099FD         JNB    TI,?WHILE1
                                           ; SOURCE LINE # 57 
0005 C299           CLR    TI
                                           ; SOURCE LINE # 58 
0007 22             RET    

            ; FUNCTION _serialTX (END)

            ; FUNCTION serialRX (BEGIN)
0000         ?WHILE3:
                                           ; SOURCE LINE # 61 
0000 3098FD         JNB    RI,?WHILE3
                                           ; SOURCE LINE # 62 
0003 C298           CLR    RI
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  3

                                           ; SOURCE LINE # 63 
0005 AF99           MOV    R7,SBUF
                                           ; SOURCE LINE # 64 
0007 22             RET    

            ; FUNCTION serialRX (END)

            ; FUNCTION _I2C_delay (BEGIN)
              ; Register R6R7 is assigned to parameter d
              ; R4R5 is assigned to i
                                           ; SOURCE LINE # 51 
0000 E4             CLR    A
0001 FC             MOV    R4,A
0002 FD             MOV    R5,A
0003         ?FOR1:
0003 8EF0           MOV    B,R6
0005 B2F7           CPL    B.7
0007 EC             MOV    A,R4
0008 6480           XRL    A,#080H
000A B5F004         CJNE   A,B,?LAB24
000D ED             MOV    A,R5
000E B50700         CJNE   A,AR7,?LAB24
0011         ?LAB24:
0011 5007           JNC    ?NXT8
0013 0D             INC    R5
0014 ED             MOV    A,R5
0015 70EC           JNZ    ?FOR1
0017 0C             INC    R4
0018 80E9           SJMP   ?FOR1
001A         ?NXT8:
                                           ; SOURCE LINE # 52 
001A 22             RET    

            ; FUNCTION _I2C_delay (END)

            ; FUNCTION I2C_start (BEGIN)
                                           ; SOURCE LINE # 58 
0000 C2B2           CLR    INT0
                                           ; SOURCE LINE # 59 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 60 
0008 C2B3           CLR    INT1
                                           ; SOURCE LINE # 61 
000A 22             RET    

            ; FUNCTION I2C_start (END)

            ; FUNCTION I2C_stop (BEGIN)
0000         ?WHILE5:
                                           ; SOURCE LINE # 67 
0000 30B2FD         JNB    INT0,?WHILE5
                                           ; SOURCE LINE # 69 
0003 D2B3           SETB   INT1
                                           ; SOURCE LINE # 70 
0005 E4             CLR    A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  4

0006 FE             MOV    R6,A
0007 FF             MOV    R7,A
0008 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 71 
000B D2B2           SETB   INT0
                                           ; SOURCE LINE # 72 
000D 22             RET    

            ; FUNCTION I2C_stop (END)

            ; FUNCTION _I2C_write (BEGIN)
                                           ; SOURCE LINE # 77 
0000 8F00    R      MOV    byte,R7
                                           ; SOURCE LINE # 80 
0002 750000  R      MOV    bt,#000H
0005         ?FOR3:
                                           ; SOURCE LINE # 81 
0005 E500    R      MOV    A,byte
0007 30E704         JNB    ACC.7,?ELSE1
                                           ; SOURCE LINE # 82 
000A D2B2           SETB   INT0
000C 8002           SJMP   ?NXT17
000E         ?ELSE1:
                                           ; SOURCE LINE # 84 
000E C2B2           CLR    INT0
0010         ?NXT17:
                                           ; SOURCE LINE # 86 
0010 E4             CLR    A
0011 FE             MOV    R6,A
0012 FF             MOV    R7,A
0013 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 87 
0016 D2B3           SETB   INT1
                                           ; SOURCE LINE # 88 
0018 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 89 
001B C2B3           CLR    INT1
                                           ; SOURCE LINE # 90 
001D E500    R      MOV    A,byte
001F C3             CLR    C
0020 33             RLC    A
0021 F500    R      MOV    byte,A
                                           ; SOURCE LINE # 80 
0023 0500    R      INC    bt
0025 E500    R      MOV    A,bt
0027 B408DB         CJNE   A,#008H,?FOR3
                                           ; SOURCE LINE # 92 
002A D2B3           SETB   INT1
                                           ; SOURCE LINE # 93 
002C 120000  R      LCALL  _I2C_delay
              ; R3 is assigned to reply
                                           ; SOURCE LINE # 94 
002F 7B00           MOV    R3,#000H
0031 30B201         JNB    INT0,?LAB35
0034 0B             INC    R3
0035         ?LAB35:
                                           ; SOURCE LINE # 95 
0035 C2B3           CLR    INT1
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  5

                                           ; SOURCE LINE # 96 
0037 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 97 
003A 8B07           MOV    AR7,R3
                                           ; SOURCE LINE # 98 
003C 22             RET    

            ; FUNCTION _I2C_write (END)

            ; FUNCTION _I2C_read (BEGIN)
              ; Register R3 is assigned to parameter condition
                                           ; SOURCE LINE # 103 
0000 8F03           MOV    AR3,R7
                                           ; SOURCE LINE # 104 
0002 750000  R      MOV    byte,#000H
                                           ; SOURCE LINE # 106 
0005 750000  R      MOV    bt,#000H
0008         ?FOR5:
                                           ; SOURCE LINE # 107 
0008 D2B2           SETB   INT0
                                           ; SOURCE LINE # 108 
000A E4             CLR    A
000B FF             MOV    R7,A
000C FE             MOV    R6,A
000D 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 109 
0010 D2B3           SETB   INT1
                                           ; SOURCE LINE # 110 
0012 120000  R      LCALL  _I2C_delay
0015         ?WHILE8:
                                           ; SOURCE LINE # 111 
0015 20B302         JB     INT1,?NXT25
0018 80FB           SJMP   ?WHILE8
001A         ?NXT25:
                                           ; SOURCE LINE # 112 
001A E500    R      MOV    A,byte
001C C3             CLR    C
001D 33             RLC    A
001E FE             MOV    R6,A
001F A2B2           MOV    C,INT0
0021 E4             CLR    A
0022 33             RLC    A
0023 FA             MOV    R2,A
0024 EE             MOV    A,R6
0025 4A             ORL    A,R2
0026 F500    R      MOV    byte,A
                                           ; SOURCE LINE # 113 
0028 C2B3           CLR    INT1
                                           ; SOURCE LINE # 106 
002A 0500    R      INC    bt
002C E500    R      MOV    A,bt
002E B408D7         CJNE   A,#008H,?FOR5
                                           ; SOURCE LINE # 115 
0031 EB             MOV    A,R3
0032 B40104         CJNE   A,#001H,?ELSE3
                                           ; SOURCE LINE # 116 
0035 C2B2           CLR    INT0
0037 8002           SJMP   ?NXT26
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  6

0039         ?ELSE3:
                                           ; SOURCE LINE # 118 
0039 D2B2           SETB   INT0
003B         ?NXT26:
                                           ; SOURCE LINE # 120 
003B E4             CLR    A
003C FE             MOV    R6,A
003D FF             MOV    R7,A
003E 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 121 
0041 D2B3           SETB   INT1
                                           ; SOURCE LINE # 122 
0043 120000  R      LCALL  _I2C_delay
0046         ?WHILE9:
                                           ; SOURCE LINE # 123 
0046 30B3FD         JNB    INT1,?WHILE9
                                           ; SOURCE LINE # 124 
0049 C2B3           CLR    INT1
                                           ; SOURCE LINE # 125 
004B E4             CLR    A
004C FE             MOV    R6,A
004D FF             MOV    R7,A
004E 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 126 
0051 AF00    R      MOV    R7,byte
                                           ; SOURCE LINE # 127 
0053 22             RET    

            ; FUNCTION _I2C_read (END)

            ; FUNCTION _EEPROMread (BEGIN)
                                           ; SOURCE LINE # 132 
0000 8E00    R      MOV    address,R6
0002 8F00    R      MOV    address+01H,R7
                                           ; SOURCE LINE # 135 
0004 AA00    R      MOV    R2,address
0006 E500    R      MOV    A,address+01H
0008 C3             CLR    C
0009 33             RLC    A
000A CA             XCH    A,R2
000B 33             RLC    A
000C CA             XCH    A,R2
000D F500    R      MOV    address+01H,A
000F 8A00    R      MOV    address,R2
                                           ; SOURCE LINE # 136 
0011 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 137 
0014 7FA0           MOV    R7,#0A0H
0016 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 138 
0019 AF00    R      MOV    R7,address
001B 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 139 
001E AF00    R      MOV    R7,address+01H
0020 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 140 
0023 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 141 
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  7

0026 E4             CLR    A
0027 FE             MOV    R6,A
0028 FF             MOV    R7,A
0029 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 142 
002C 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 143 
002F 7FA1           MOV    R7,#0A1H
0031 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 144 
0034 7F01           MOV    R7,#001H
0036 120000  R      LCALL  _I2C_read
0039 EF             MOV    A,R7
003A FA             MOV    R2,A
003B E4             CLR    A
003C FB             MOV    R3,A
003D FF             MOV    R7,A
003E C002           PUSH   AR2
0040 C003           PUSH   AR3
0042 120000  R      LCALL  _I2C_read
0045 D0E0           POP    ACC
0047 4F             ORL    A,R7
0048 F500    R      MOV    word+01H,A
004A D0E0           POP    ACC
004C F500    R      MOV    word,A
                                           ; SOURCE LINE # 145 
004E 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 147 
0051 AE00    R      MOV    R6,word
0053 AF00    R      MOV    R7,word+01H
                                           ; SOURCE LINE # 148 
0055 22             RET    

            ; FUNCTION _EEPROMread (END)

            ; FUNCTION _EEPROMwrite (BEGIN)
                                           ; SOURCE LINE # 153 
0000 8E00    R      MOV    address,R6
0002 8F00    R      MOV    address+01H,R7
0004 8C00    R      MOV    word,R4
0006 8D00    R      MOV    word+01H,R5
                                           ; SOURCE LINE # 154 
0008 AA00    R      MOV    R2,address
000A E500    R      MOV    A,address+01H
000C C3             CLR    C
000D 33             RLC    A
000E CA             XCH    A,R2
000F 33             RLC    A
0010 CA             XCH    A,R2
0011 F500    R      MOV    address+01H,A
0013 8A00    R      MOV    address,R2
                                           ; SOURCE LINE # 155 
0015 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 156 
0018 7FA0           MOV    R7,#0A0H
001A 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 157 
001D AF00    R      MOV    R7,address
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  8

001F 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 158 
0022 AF00    R      MOV    R7,address+01H
0024 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 159 
0027 AF00    R      MOV    R7,word
0029 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 160 
002C AF00    R      MOV    R7,word+01H
002E 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 161 
0031 E4             CLR    A
0032 FE             MOV    R6,A
0033 FF             MOV    R7,A
0034 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 162 
0037 020000  R      LJMP   I2C_stop

            ; FUNCTION _EEPROMwrite (END)

            ; FUNCTION timer0_isr (BEGIN)
                                           ; SOURCE LINE # 51 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 53 
0004 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 54 
0007 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 56 
000A 0500    R      INC    milli+01H
000C E500    R      MOV    A,milli+01H
000E 7002           JNZ    ?NXT29
0010 0500    R      INC    milli
0012         ?NXT29:
0012 D0D0           POP    PSW
0014 D0E0           POP    ACC
                                           ; SOURCE LINE # 57 
0016 32             RETI   

            ; FUNCTION timer0_isr (END)

            ; FUNCTION milliStart (BEGIN)
                                           ; SOURCE LINE # 60 
0000 C2A9           CLR    ET0
                                           ; SOURCE LINE # 61 
0002 438901         ORL    TMOD,#001H
                                           ; SOURCE LINE # 62 
0005 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 63 
0008 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 64 
000B D28C           SETB   TR0
                                           ; SOURCE LINE # 65 
000D D2A9           SETB   ET0
                                           ; SOURCE LINE # 66 
000F D2AF           SETB   EA
                                           ; SOURCE LINE # 68 
0011 E4             CLR    A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE  9

0012 F500    R      MOV    milli,A
0014 F500    R      MOV    milli+01H,A
                                           ; SOURCE LINE # 69 
0016 22             RET    

            ; FUNCTION milliStart (END)

            ; FUNCTION _modbusBegin (BEGIN)
                                           ; SOURCE LINE # 71 
0000 8E00    R      MOV    baud,R6
0002 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 72 
0004 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 74 
0007 EE             MOV    A,R6
0008 B44B00         CJNE   A,#04BH,?LAB60
000B         ?LAB60:
000B 400D           JC     ?ELSE6
                                           ; SOURCE LINE # 75 
000D E4             CLR    A
000E F500    R      MOV    charTimeout,A
0010 750001  R      MOV    charTimeout+01H,#001H
                                           ; SOURCE LINE # 76 
0013 F500    R      MOV    frameTimeout,A
0015 750002  R      MOV    frameTimeout+01H,#002H
0018 802A           SJMP   ?DO1
001A         ?ELSE6:
                                           ; SOURCE LINE # 79 
001A 7E3A           MOV    R6,#03AH
001C 7F98           MOV    R7,#098H
001E AC00    R      MOV    R4,baud
0020 AD00    R      MOV    R5,baud+01H
0022 120000  R      LCALL  ?C_UIDIV
0025 8E00    R      MOV    charTimeout,R6
0027 8F00    R      MOV    charTimeout+01H,R7
                                           ; SOURCE LINE # 80 
0029 E4             CLR    A
002A C0E0           PUSH   ACC
002C C0E0           PUSH   ACC
002E 7488           MOV    A,#088H
0030 C0E0           PUSH   ACC
0032 74B8           MOV    A,#0B8H
0034 C0E0           PUSH   ACC
0036 E4             CLR    A
0037 FC             MOV    R4,A
0038 FD             MOV    R5,A
0039 AE00    R      MOV    R6,baud
003B AF00    R      MOV    R7,baud+01H
003D 120000  R      LCALL  ?C_SLDIV_SP
0040 8E00    R      MOV    frameTimeout,R6
0042 8F00    R      MOV    frameTimeout+01H,R7
0044         ?DO1:
                                           ; SOURCE LINE # 84 
0044 309805         JNB    RI,?TEST1
                                           ; SOURCE LINE # 85 
0047 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 86 
004A C298           CLR    RI
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 10

004C         ?TEST1:
004C E500    R      MOV    A,milli
004E B50005  R      CJNE   A,frameTimeout,?LAB62
0051 E500    R      MOV    A,milli+01H
0053 B50000  R      CJNE   A,frameTimeout+01H,?LAB62
0056         ?LAB62:
0056 40EC           JC     ?DO1
                                           ; SOURCE LINE # 89 
0058 22             RET    

            ; FUNCTION _modbusBegin (END)

            ; FUNCTION modbusPoll (BEGIN)
                                           ; SOURCE LINE # 92 
0000 750000  R      MOV    i,#000H
                                           ; SOURCE LINE # 95 
0003 209803         JB     RI,$ + 6
0006 020000  R      LJMP   ?NXT71
                                           ; SOURCE LINE # 96 
0009 759001         MOV    P1,#001H
000C         ?DO3:
                                           ; SOURCE LINE # 98 
000C 30981F         JNB    RI,?ELSE33
                                           ; SOURCE LINE # 99 
000F 759001         MOV    P1,#001H
                                           ; SOURCE LINE # 100 
0012 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 101 
0015 E500    R      MOV    A,i
0017 B41800         CJNE   A,#018H,?LAB135
001A         ?LAB135:
001A 500C           JNC    ?ELSE34
001C 120000  R      LCALL  serialRX
001F E500    R      MOV    A,i
0021 2400    R      ADD    A,#buf
0023 F8             MOV    R0,A
0024 A607           MOV    @R0,AR7
0026 8002           SJMP   ?NXT74
0028         ?ELSE34:
                                           ; SOURCE LINE # 102 
0028 C298           CLR    RI
002A         ?NXT74:
                                           ; SOURCE LINE # 103 
002A 0500    R      INC    i
002C 8003           SJMP   ?TEST3
002E         ?ELSE33:
                                           ; SOURCE LINE # 105 
002E 759000         MOV    P1,#000H
0031         ?TEST3:
0031 E500    R      MOV    A,milli
0033 B50005  R      CJNE   A,charTimeout,?LAB138
0036 E500    R      MOV    A,milli+01H
0038 B50000  R      CJNE   A,charTimeout+01H,?LAB138
003B         ?LAB138:
003B 5007           JNC    ?WHILE11
003D E500    R      MOV    A,i
003F B41800         CJNE   A,#018H,?LAB140
0042         ?LAB140:
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 11

0042 40C8           JC     ?DO3
0044         ?WHILE11:
                                           ; SOURCE LINE # 108 
0044 E500    R      MOV    A,milli
0046 B50005  R      CJNE   A,frameTimeout,?LAB142
0049 E500    R      MOV    A,milli+01H
004B B50000  R      CJNE   A,frameTimeout+01H,?LAB142
004E         ?LAB142:
004E 5007           JNC    ?NXT75
                                           ; SOURCE LINE # 109 
0050 C298           CLR    RI
                                           ; SOURCE LINE # 110 
0052 759000         MOV    P1,#000H
0055 80ED           SJMP   ?WHILE11
0057         ?NXT75:
                                           ; SOURCE LINE # 113 
0057 309803         JNB    RI,$ + 6
005A 020000  R      LJMP   ?NXT71
005D E4             CLR    A
005E B50006  R      CJNE   A,id,?LAB147
0061 E500    R      MOV    A,buf
0063 6500    R      XRL    A,id+01H
0065 600A           JZ     ?LAB145
0067         ?LAB147:
0067 E500    R      MOV    A,buf
0069 B40002         CJNE   A,#000H,$ + 5
006C 8003           SJMP   $ + 5
006E 020000  R      LJMP   ?NXT71
0071         ?LAB145:
0071 E500    R      MOV    A,i
0073 B41800         CJNE   A,#018H,?LAB148
0076         ?LAB148:
0076 4003           JC     $ + 5
0078 020000  R      LJMP   ?NXT71
                                           ; SOURCE LINE # 114 
007B E500    R      MOV    A,i
007D 2400    R      ADD    A,#buf+0FFH
007F F8             MOV    R0,A
0080 8607           MOV    AR7,@R0
0082 E500    R      MOV    A,i
0084 2400    R      ADD    A,#buf+0FEH
0086 F8             MOV    R0,A
0087 8605           MOV    AR5,@R0
0089 120000  R      LCALL  _bytesToWord
008C C006           PUSH   AR6
008E C007           PUSH   AR7
0090 E500    R      MOV    A,i
0092 24FE           ADD    A,#0FEH
0094 FF             MOV    R7,A
0095 120000  R      LCALL  _crc
0098 D005           POP    AR5
009A D0F0           POP    B
009C EE             MOV    A,R6
009D B5F004         CJNE   A,B,?LAB150
00A0 EF             MOV    A,R7
00A1 6D             XRL    A,R5
00A2 6001           JZ     ?NXT77
00A4         ?LAB150:
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 12

                                           ; SOURCE LINE # 214 
00A4 22             RET    
00A5         ?NXT77:
                                           ; SOURCE LINE # 116 
00A5 E500    R      MOV    A,buf+01H
00A7 14             DEC    A
00A8 6024           JZ     ?CASE20
00AA 24FE           ADD    A,#0FEH
00AC 7003           JNZ    $ + 5
00AE 020000  R      LJMP   ?CASE21
00B1 24FE           ADD    A,#0FEH
00B3 7003           JNZ    $ + 5
00B5 020000  R      LJMP   ?CASE22
00B8 14             DEC    A
00B9 7003           JNZ    $ + 5
00BB 020000  R      LJMP   ?CASE23
00BE 24F7           ADD    A,#0F7H
00C0 7003           JNZ    $ + 5
00C2 020000  R      LJMP   ?CASE24
00C5 14             DEC    A
00C6 7003           JNZ    $ + 5
00C8 020000  R      LJMP   ?CASE25
00CB 020000  R      LJMP   ?DEFAULT1
00CE         ?CASE20:
                                           ; SOURCE LINE # 118 
00CE AF00    R      MOV    R7,buf+02H
00D0 AD00    R      MOV    R5,buf+03H
00D2 120000  R      LCALL  _bytesToWord
00D5 8E00    R      MOV    startAddress,R6
00D7 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 119 
00D9 AF00    R      MOV    R7,buf+04H
00DB AD00    R      MOV    R5,buf+05H
00DD 120000  R      LCALL  _bytesToWord
00E0 8E00    R      MOV    quantity,R6
00E2 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 120 
00E4 E500    R      MOV    A,quantity
00E6 4500    R      ORL    A,quantity+01H
00E8 600D           JZ     ?LAB153
00EA E500    R      MOV    A,quantity
00EC B40006         CJNE   A,#000H,?LAB154
00EF E500    R      MOV    A,quantity+01H
00F1 B40801         CJNE   A,#008H,?LAB154
00F4 D3             SETB   C
00F5         ?LAB154:
00F5 400A           JC     ?ELSE37
00F7         ?LAB153:
00F7 E4             CLR    A
00F8 FE             MOV    R6,A
00F9 7F03           MOV    R7,#003H
00FB 120000  R      LCALL  _oops
00FE 020000  R      LJMP   ?NXT78
0101         ?ELSE37:
                                           ; SOURCE LINE # 121 
0101 E500    R      MOV    A,quantity+01H
0103 2500    R      ADD    A,startAddress+01H
0105 FE             MOV    R6,A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 13

0106 E500    R      MOV    A,quantity
0108 3500    R      ADDC   A,startAddress
010A B40005         CJNE   A,#000H,?LAB156
010D EE             MOV    A,R6
010E B50001  R      CJNE   A,numCoils,?LAB156
0111 D3             SETB   C
0112         ?LAB156:
0112 400A           JC     ?ELSE38
0114 E4             CLR    A
0115 FE             MOV    R6,A
0116 7F02           MOV    R7,#002H
0118 120000  R      LCALL  _oops
011B 020000  R      LJMP   ?NXT78
011E         ?ELSE38:
                                           ; SOURCE LINE # 123 
011E 750000  R      MOV    j,#000H
0121         ?FOR10:
0121 E4             CLR    A
0122 B50005  R      CJNE   A,quantity,?LAB158
0125 E500    R      MOV    A,j
0127 B50000  R      CJNE   A,quantity+01H,?LAB158
012A         ?LAB158:
012A 506C           JNC    ?NXT81
                                           ; SOURCE LINE # 124 
012C E500    R      MOV    A,startAddress+01H
012E 2500    R      ADD    A,j
0130 FF             MOV    R7,A
0131 E4             CLR    A
0132 3500    R      ADDC   A,startAddress
0134 FE             MOV    R6,A
0135 120000  R      LCALL  _boolRead
0138 750000  R      MOV    value,#000H
013B 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 125 
013D E500    R      MOV    A,value
013F B40006         CJNE   A,#000H,?LAB160
0142 E500    R      MOV    A,value+01H
0144 B40101         CJNE   A,#001H,?LAB160
0147 D3             SETB   C
0148         ?LAB160:
0148 4007           JC     ?NXT83
                                           ; SOURCE LINE # 126 
014A E4             CLR    A
014B FE             MOV    R6,A
014C 7F04           MOV    R7,#004H
014E 020000  R      LJMP   _oops
0151         ?NXT83:
                                           ; SOURCE LINE # 129 
0151 E500    R      MOV    A,value+01H
0153 6401           XRL    A,#001H
0155 4500    R      ORL    A,value
0157 701E           JNZ    ?ELSE40
0159 E500    R      MOV    A,j
015B 03             RR     A
015C 03             RR     A
015D 03             RR     A
015E 541F           ANL    A,#01FH
0160 2400    R      ADD    A,#buf+03H
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 14

0162 F8             MOV    R0,A
0163 E500    R      MOV    A,j
0165 5407           ANL    A,#007H
0167 FB             MOV    R3,A
0168 0B             INC    R3
0169 7401           MOV    A,#001H
016B 8002           SJMP   ?LAB163
016D         ?LAB164:
016D C3             CLR    C
016E 33             RLC    A
016F         ?LAB163:
016F DBFC           DJNZ   R3,?LAB164
0171 FA             MOV    R2,A
0172 E6             MOV    A,@R0
0173 4A             ORL    A,R2
0174 F6             MOV    @R0,A
0175 801D           SJMP   ?NXT82
0177         ?ELSE40:
                                           ; SOURCE LINE # 130 
0177 E500    R      MOV    A,j
0179 03             RR     A
017A 03             RR     A
017B 03             RR     A
017C 541F           ANL    A,#01FH
017E 2400    R      ADD    A,#buf+03H
0180 F8             MOV    R0,A
0181 E500    R      MOV    A,j
0183 5407           ANL    A,#007H
0185 FC             MOV    R4,A
0186 0C             INC    R4
0187 7401           MOV    A,#001H
0189 8002           SJMP   ?LAB165
018B         ?LAB166:
018B C3             CLR    C
018C 33             RLC    A
018D         ?LAB165:
018D DCFC           DJNZ   R4,?LAB166
018F F4             CPL    A
0190 FA             MOV    R2,A
0191 E6             MOV    A,@R0
0192 5A             ANL    A,R2
0193 F6             MOV    @R0,A
0194         ?NXT82:
                                           ; SOURCE LINE # 123 
0194 0500    R      INC    j
0196 8089           SJMP   ?FOR10
0198         ?NXT81:
                                           ; SOURCE LINE # 132 
0198 AE00    R      MOV    R6,quantity
019A AF00    R      MOV    R7,quantity+01H
019C 120000  R      LCALL  _div8RndUp
                                           ; SOURCE LINE # 133 
019F EF             MOV    A,R7
                                           ; SOURCE LINE # 132 
01A0 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 133 
01A2 2403           ADD    A,#003H
01A4 FF             MOV    R7,A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 15

01A5 020000  R      LJMP   _write
01A8         ?CASE21:
                                           ; SOURCE LINE # 138 
01A8 AF00    R      MOV    R7,buf+02H
01AA AD00    R      MOV    R5,buf+03H
01AC 120000  R      LCALL  _bytesToWord
01AF 8E00    R      MOV    startAddress,R6
01B1 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 139 
01B3 AF00    R      MOV    R7,buf+04H
01B5 AD00    R      MOV    R5,buf+05H
01B7 120000  R      LCALL  _bytesToWord
01BA 8E00    R      MOV    quantity,R6
01BC 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 140 
01BE E500    R      MOV    A,quantity
01C0 4500    R      ORL    A,quantity+01H
01C2 600D           JZ     ?LAB167
01C4 E500    R      MOV    A,quantity
01C6 B40006         CJNE   A,#000H,?LAB168
01C9 E500    R      MOV    A,quantity+01H
01CB B40201         CJNE   A,#002H,?LAB168
01CE D3             SETB   C
01CF         ?LAB168:
01CF 400A           JC     ?ELSE41
01D1         ?LAB167:
01D1 E4             CLR    A
01D2 FE             MOV    R6,A
01D3 7F03           MOV    R7,#003H
01D5 120000  R      LCALL  _oops
01D8 020000  R      LJMP   ?NXT78
01DB         ?ELSE41:
                                           ; SOURCE LINE # 141 
01DB E500    R      MOV    A,quantity+01H
01DD 2500    R      ADD    A,startAddress+01H
01DF FE             MOV    R6,A
01E0 E500    R      MOV    A,quantity
01E2 3500    R      ADDC   A,startAddress
01E4 B40005         CJNE   A,#000H,?LAB170
01E7 EE             MOV    A,R6
01E8 B50001  R      CJNE   A,numHoldingRegisters,?LAB170
01EB D3             SETB   C
01EC         ?LAB170:
01EC 400A           JC     ?ELSE42
01EE E4             CLR    A
01EF FE             MOV    R6,A
01F0 7F02           MOV    R7,#002H
01F2 120000  R      LCALL  _oops
01F5 020000  R      LJMP   ?NXT78
01F8         ?ELSE42:
                                           ; SOURCE LINE # 143 
01F8 750000  R      MOV    j,#000H
01FB         ?FOR11:
01FB E4             CLR    A
01FC B50005  R      CJNE   A,quantity,?LAB172
01FF E500    R      MOV    A,j
0201 B50000  R      CJNE   A,quantity+01H,?LAB172
0204         ?LAB172:
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 16

0204 502F           JNC    ?NXT87
                                           ; SOURCE LINE # 144 
0206 E500    R      MOV    A,startAddress+01H
0208 2500    R      ADD    A,j
020A FF             MOV    R7,A
020B E4             CLR    A
020C 3500    R      ADDC   A,startAddress
020E FE             MOV    R6,A
020F 120000  R      LCALL  _wordRead
0212 8E00    R      MOV    value,R6
0214 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 145 
0216 8007           SJMP   ?NXT89
                                           ; SOURCE LINE # 146 
0218 E4             CLR    A
0219 FE             MOV    R6,A
021A 7F04           MOV    R7,#004H
021C 020000  R      LJMP   _oops
021F         ?NXT89:
                                           ; SOURCE LINE # 149 
021F 75F002         MOV    B,#002H
0222 E500    R      MOV    A,j
0224 A4             MUL    AB
0225 FF             MOV    R7,A
0226 2400    R      ADD    A,#buf+03H
0228 F8             MOV    R0,A
0229 A600    R      MOV    @R0,value
                                           ; SOURCE LINE # 150 
022B EF             MOV    A,R7
022C 2400    R      ADD    A,#buf+04H
022E F8             MOV    R0,A
022F A600    R      MOV    @R0,value+01H
                                           ; SOURCE LINE # 143 
0231 0500    R      INC    j
0233 80C6           SJMP   ?FOR11
0235         ?NXT87:
                                           ; SOURCE LINE # 152 
0235 E500    R      MOV    A,quantity+01H
0237 C3             CLR    C
0238 33             RLC    A
0239 F500    R      MOV    buf+02H,A
                                           ; SOURCE LINE # 153 
023B 2403           ADD    A,#003H
023D FF             MOV    R7,A
023E 020000  R      LJMP   _write
0241         ?CASE22:
                                           ; SOURCE LINE # 158 
0241 AF00    R      MOV    R7,buf+02H
0243 AD00    R      MOV    R5,buf+03H
0245 120000  R      LCALL  _bytesToWord
0248 8E00    R      MOV    startAddress,R6
024A 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 159 
024C AF00    R      MOV    R7,buf+04H
024E AD00    R      MOV    R5,buf+05H
0250 120000  R      LCALL  _bytesToWord
0253 8E00    R      MOV    value,R6
0255 8F00    R      MOV    value+01H,R7
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 17

                                           ; SOURCE LINE # 160 
0257 E500    R      MOV    A,value
0259 4500    R      ORL    A,value+01H
025B 6013           JZ     ?ELSE44
025D E500    R      MOV    A,value
025F B4FF04         CJNE   A,#0FFH,?LAB175
0262 E500    R      MOV    A,value+01H
0264 600A           JZ     ?ELSE44
0266         ?LAB175:
0266 E4             CLR    A
0267 FE             MOV    R6,A
0268 7F03           MOV    R7,#003H
026A 120000  R      LCALL  _oops
026D 020000  R      LJMP   ?NXT78
0270         ?ELSE44:
                                           ; SOURCE LINE # 161 
0270 E500    R      MOV    A,startAddress
0272 B40005         CJNE   A,#000H,?LAB177
0275 E500    R      MOV    A,startAddress+01H
0277 B50000  R      CJNE   A,numCoils,?LAB177
027A         ?LAB177:
027A 400A           JC     ?ELSE45
027C E4             CLR    A
027D FE             MOV    R6,A
027E 7F02           MOV    R7,#002H
0280 120000  R      LCALL  _oops
0283 020000  R      LJMP   ?NXT78
0286         ?ELSE45:
                                           ; SOURCE LINE # 162 
0286 AE00    R      MOV    R6,startAddress
0288 AF00    R      MOV    R7,startAddress+01H
028A AC00    R      MOV    R4,value
028C AD00    R      MOV    R5,value+01H
028E 120000  R      LCALL  _coilWrite
0291 400A           JC     ?ELSE46
0293 E4             CLR    A
0294 FE             MOV    R6,A
0295 7F04           MOV    R7,#004H
0297 120000  R      LCALL  _oops
029A 020000  R      LJMP   ?NXT78
029D         ?ELSE46:
                                           ; SOURCE LINE # 163 
029D 7F06           MOV    R7,#006H
029F 020000  R      LJMP   _write
02A2         ?CASE23:
                                           ; SOURCE LINE # 167 
02A2 AF00    R      MOV    R7,buf+02H
02A4 AD00    R      MOV    R5,buf+03H
02A6 120000  R      LCALL  _bytesToWord
02A9 8E00    R      MOV    startAddress,R6
02AB 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 168 
02AD AF00    R      MOV    R7,buf+04H
02AF AD00    R      MOV    R5,buf+05H
02B1 120000  R      LCALL  _bytesToWord
02B4 8E00    R      MOV    value,R6
02B6 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 169 
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 18

02B8 E500    R      MOV    A,startAddress
02BA B40005         CJNE   A,#000H,?LAB179
02BD E500    R      MOV    A,startAddress+01H
02BF B50000  R      CJNE   A,numHoldingRegisters,?LAB179
02C2         ?LAB179:
02C2 400A           JC     ?ELSE47
02C4 E4             CLR    A
02C5 FE             MOV    R6,A
02C6 7F02           MOV    R7,#002H
02C8 120000  R      LCALL  _oops
02CB 020000  R      LJMP   ?NXT78
02CE         ?ELSE47:
                                           ; SOURCE LINE # 170 
02CE AE00    R      MOV    R6,startAddress
02D0 AF00    R      MOV    R7,startAddress+01H
02D2 AC00    R      MOV    R4,value
02D4 AD00    R      MOV    R5,value+01H
02D6 120000  R      LCALL  _holdingRegisterWrite
02D9 400A           JC     ?ELSE48
02DB E4             CLR    A
02DC FE             MOV    R6,A
02DD 7F04           MOV    R7,#004H
02DF 120000  R      LCALL  _oops
02E2 020000  R      LJMP   ?NXT78
02E5         ?ELSE48:
                                           ; SOURCE LINE # 171 
02E5 7F06           MOV    R7,#006H
02E7 020000  R      LJMP   _write
02EA         ?CASE24:
                                           ; SOURCE LINE # 175 
02EA AF00    R      MOV    R7,buf+02H
02EC AD00    R      MOV    R5,buf+03H
02EE 120000  R      LCALL  _bytesToWord
02F1 8E00    R      MOV    startAddress,R6
02F3 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 176 
02F5 AF00    R      MOV    R7,buf+04H
02F7 AD00    R      MOV    R5,buf+05H
02F9 120000  R      LCALL  _bytesToWord
02FC 8E00    R      MOV    quantity,R6
02FE 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 177 
0300 E500    R      MOV    A,quantity
0302 4500    R      ORL    A,quantity+01H
0304 601D           JZ     ?LAB181
0306 E500    R      MOV    A,quantity
0308 B40006         CJNE   A,#000H,?LAB183
030B E500    R      MOV    A,quantity+01H
030D B47001         CJNE   A,#070H,?LAB183
0310 D3             SETB   C
0311         ?LAB183:
0311 5010           JNC    ?LAB181
0313 AE00    R      MOV    R6,quantity
0315 AF00    R      MOV    R7,quantity+01H
0317 120000  R      LCALL  _div8RndUp
031A E4             CLR    A
031B B50605         CJNE   A,AR6,?LAB181
031E E500    R      MOV    A,buf+06H
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 19

0320 6F             XRL    A,R7
0321 600A           JZ     ?ELSE49
0323         ?LAB181:
0323 E4             CLR    A
0324 FE             MOV    R6,A
0325 7F03           MOV    R7,#003H
0327 120000  R      LCALL  _oops
032A 020000  R      LJMP   ?NXT78
032D         ?ELSE49:
                                           ; SOURCE LINE # 178 
032D E500    R      MOV    A,quantity+01H
032F 2500    R      ADD    A,startAddress+01H
0331 FE             MOV    R6,A
0332 E500    R      MOV    A,quantity
0334 3500    R      ADDC   A,startAddress
0336 B40005         CJNE   A,#000H,?LAB186
0339 EE             MOV    A,R6
033A B50001  R      CJNE   A,numCoils,?LAB186
033D D3             SETB   C
033E         ?LAB186:
033E 400A           JC     ?ELSE50
0340 E4             CLR    A
0341 FE             MOV    R6,A
0342 7F02           MOV    R7,#002H
0344 120000  R      LCALL  _oops
0347 020000  R      LJMP   ?NXT78
034A         ?ELSE50:
                                           ; SOURCE LINE # 180 
034A 750000  R      MOV    j,#000H
034D         ?FOR12:
034D E4             CLR    A
034E B50005  R      CJNE   A,quantity,?LAB188
0351 E500    R      MOV    A,j
0353 B50000  R      CJNE   A,quantity+01H,?LAB188
0356         ?LAB188:
0356 5051           JNC    ?NXT97
                                           ; SOURCE LINE # 181 
0358 E500    R      MOV    A,j
035A 5407           ANL    A,#007H
035C 7A00           MOV    R2,#000H
035E F8             MOV    R0,A
035F 08             INC    R0
0360 7401           MOV    A,#001H
0362 8005           SJMP   ?LAB190
0364         ?LAB191:
0364 C3             CLR    C
0365 33             RLC    A
0366 CA             XCH    A,R2
0367 33             RLC    A
0368 CA             XCH    A,R2
0369         ?LAB190:
0369 D8F9           DJNZ   R0,?LAB191
036B FE             MOV    R6,A
036C E500    R      MOV    A,j
036E 03             RR     A
036F 03             RR     A
0370 03             RR     A
0371 541F           ANL    A,#01FH
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 20

0373 2400    R      ADD    A,#buf+07H
0375 F9             MOV    R1,A
0376 E7             MOV    A,@R1
0377 FF             MOV    R7,A
0378 EE             MOV    A,R6
0379 5207           ANL    AR7,A
037B 750000  R      MOV    value,#000H
037E 8F00    R      MOV    value+01H,R7
                                           ; SOURCE LINE # 182 
0380 E500    R      MOV    A,value
0382 4500    R      ORL    A,value+01H
0384 6006           JZ     ?NXT99
0386 7500FF  R      MOV    value,#0FFH
0389 E4             CLR    A
038A F500    R      MOV    value+01H,A
038C         ?NXT99:
                                           ; SOURCE LINE # 183 
038C E500    R      MOV    A,startAddress+01H
038E 2500    R      ADD    A,j
0390 FF             MOV    R7,A
0391 E4             CLR    A
0392 3500    R      ADDC   A,startAddress
0394 FE             MOV    R6,A
0395 AC00    R      MOV    R4,value
0397 AD00    R      MOV    R5,value+01H
0399 120000  R      LCALL  _coilWrite
039C 4007           JC     ?NXT98
                                           ; SOURCE LINE # 184 
039E E4             CLR    A
039F FE             MOV    R6,A
03A0 7F04           MOV    R7,#004H
03A2 020000  R      LJMP   _oops
03A5         ?NXT98:
                                           ; SOURCE LINE # 180 
03A5 0500    R      INC    j
03A7 80A4           SJMP   ?FOR12
03A9         ?NXT97:
                                           ; SOURCE LINE # 188 
03A9 7F06           MOV    R7,#006H
03AB 020000  R      LJMP   _write
03AE         ?CASE25:
                                           ; SOURCE LINE # 193 
03AE AF00    R      MOV    R7,buf+02H
03B0 AD00    R      MOV    R5,buf+03H
03B2 120000  R      LCALL  _bytesToWord
03B5 8E00    R      MOV    startAddress,R6
03B7 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 194 
03B9 AF00    R      MOV    R7,buf+04H
03BB AD00    R      MOV    R5,buf+05H
03BD 120000  R      LCALL  _bytesToWord
03C0 8E00    R      MOV    quantity,R6
03C2 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 195 
03C4 E500    R      MOV    A,quantity
03C6 4500    R      ORL    A,quantity+01H
03C8 6020           JZ     ?LAB193
03CA E500    R      MOV    A,quantity
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 21

03CC B40006         CJNE   A,#000H,?LAB195
03CF E500    R      MOV    A,quantity+01H
03D1 B40701         CJNE   A,#007H,?LAB195
03D4 D3             SETB   C
03D5         ?LAB195:
03D5 5013           JNC    ?LAB193
03D7 AA00    R      MOV    R2,quantity
03D9 E500    R      MOV    A,quantity+01H
03DB C3             CLR    C
03DC 33             RLC    A
03DD CA             XCH    A,R2
03DE 33             RLC    A
03DF CA             XCH    A,R2
03E0 FB             MOV    R3,A
03E1 E4             CLR    A
03E2 B50205         CJNE   A,AR2,?LAB193
03E5 E500    R      MOV    A,buf+06H
03E7 6B             XRL    A,R3
03E8 6009           JZ     ?ELSE53
03EA         ?LAB193:
03EA E4             CLR    A
03EB FE             MOV    R6,A
03EC 7F03           MOV    R7,#003H
03EE 120000  R      LCALL  _oops
03F1 8070           SJMP   ?NXT78
03F3         ?ELSE53:
                                           ; SOURCE LINE # 196 
03F3 E500    R      MOV    A,quantity+01H
03F5 2500    R      ADD    A,startAddress+01H
03F7 FE             MOV    R6,A
03F8 E500    R      MOV    A,quantity
03FA 3500    R      ADDC   A,startAddress
03FC B40005         CJNE   A,#000H,?LAB199
03FF EE             MOV    A,R6
0400 B50001  R      CJNE   A,numHoldingRegisters,?LAB199
0403 D3             SETB   C
0404         ?LAB199:
0404 4009           JC     ?ELSE54
0406 E4             CLR    A
0407 FE             MOV    R6,A
0408 7F02           MOV    R7,#002H
040A 120000  R      LCALL  _oops
040D 8054           SJMP   ?NXT78
040F         ?ELSE54:
                                           ; SOURCE LINE # 198 
040F 750000  R      MOV    j,#000H
0412         ?FOR13:
0412 E4             CLR    A
0413 B50005  R      CJNE   A,quantity,?LAB201
0416 E500    R      MOV    A,j
0418 B50000  R      CJNE   A,quantity+01H,?LAB201
041B         ?LAB201:
041B 503A           JNC    ?NXT103
                                           ; SOURCE LINE # 199 
041D E500    R      MOV    A,startAddress+01H
041F 2500    R      ADD    A,j
0421 FF             MOV    R7,A
0422 E4             CLR    A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 22

0423 3500    R      ADDC   A,startAddress
0425 FE             MOV    R6,A
0426 C006           PUSH   AR6
0428 C007           PUSH   AR7
042A 75F002         MOV    B,#002H
042D E500    R      MOV    A,j
042F A4             MUL    AB
0430 FE             MOV    R6,A
0431 2400    R      ADD    A,#buf+07H
0433 F8             MOV    R0,A
0434 8607           MOV    AR7,@R0
0436 EE             MOV    A,R6
0437 2400    R      ADD    A,#buf+08H
0439 F8             MOV    R0,A
043A 8605           MOV    AR5,@R0
043C 120000  R      LCALL  _bytesToWord
043F 8E04           MOV    AR4,R6
0441 8F05           MOV    AR5,R7
0443 D007           POP    AR7
0445 D006           POP    AR6
0447 120000  R      LCALL  _holdingRegisterWrite
044A 4007           JC     ?NXT104
                                           ; SOURCE LINE # 200 
044C E4             CLR    A
044D FE             MOV    R6,A
044E 7F04           MOV    R7,#004H
0450 020000  R      LJMP   _oops
0453         ?NXT104:
                                           ; SOURCE LINE # 198 
0453 0500    R      INC    j
0455 80BB           SJMP   ?FOR13
0457         ?NXT103:
                                           ; SOURCE LINE # 204 
0457 7F06           MOV    R7,#006H
0459 020000  R      LJMP   _write
045C         ?DEFAULT1:
                                           ; SOURCE LINE # 209 
045C E4             CLR    A
045D FE             MOV    R6,A
045E 7F01           MOV    R7,#001H
0460 120000  R      LCALL  _oops
0463         ?NXT78:

0463         ?NXT71:
                                           ; SOURCE LINE # 214 
0463 22             RET    

            ; FUNCTION modbusPoll (END)

            ; FUNCTION _boolRead (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
                                           ; SOURCE LINE # 219 
0000 E500    R      MOV    A,numCoils
0002 24FF           ADD    A,#0FFH
0004 F8             MOV    R0,A
0005 E4             CLR    A
0006 34FF           ADDC   A,#0FFH
0008 AB00           MOV    R3,AR0
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 23

000A F5F0           MOV    B,A
000C EE             MOV    A,R6
000D B5F005         CJNE   A,B,?LAB211
0010 EF             MOV    A,R7
0011 B50301         CJNE   A,AR3,?LAB211
0014 D3             SETB   C
0015         ?LAB211:
0015 4003           JC     ?NXT108
0017 7F02           MOV    R7,#002H
                                           ; SOURCE LINE # 223 
0019 22             RET    
001A         ?NXT108:
                                           ; SOURCE LINE # 220 
001A 8F02           MOV    AR2,R7
001C 0A             INC    R2
001D 7401           MOV    A,#001H
001F 8002           SJMP   ?LAB214
0021         ?LAB215:
0021 C3             CLR    C
0022 33             RLC    A
0023         ?LAB214:
0023 DAFC           DJNZ   R2,?LAB215
0025 5500    R      ANL    A,outputState
0027 F500    R      MOV    boolStatus,A
                                           ; SOURCE LINE # 221 
0029 6003           JZ     ?NXT109
002B 750001  R      MOV    boolStatus,#001H
002E         ?NXT109:
                                           ; SOURCE LINE # 222 
002E AF00    R      MOV    R7,boolStatus
                                           ; SOURCE LINE # 223 
0030 22             RET    

            ; FUNCTION _boolRead (END)

            ; FUNCTION _wordRead (BEGIN)
              ; Register R4R5 is assigned to parameter startAddress
                                           ; SOURCE LINE # 225 
0000 8E04           MOV    AR4,R6
0002 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 226 
0004 E500    R      MOV    A,numHoldingRegisters
0006 24FF           ADD    A,#0FFH
0008 F8             MOV    R0,A
0009 E4             CLR    A
000A 34FF           ADDC   A,#0FFH
000C AB00           MOV    R3,AR0
000E F5F0           MOV    B,A
0010 EE             MOV    A,R6
0011 B5F005         CJNE   A,B,?LAB221
0014 EF             MOV    A,R7
0015 B50301         CJNE   A,AR3,?LAB221
0018 D3             SETB   C
0019         ?LAB221:
0019 4007           JC     ?NXT111
001B 74FF           MOV    A,#0FFH
001D FF             MOV    R7,A
001E FE             MOV    R6,A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 24

001F FC             MOV    R4,A
0020 FD             MOV    R5,A
                                           ; SOURCE LINE # 228 
0021 22             RET    
0022         ?NXT111:
                                           ; SOURCE LINE # 227 
0022 8C06           MOV    AR6,R4
0024 8D07           MOV    AR7,R5
0026 120000  R      LCALL  _EEPROMread
0029 E4             CLR    A
002A FC             MOV    R4,A
002B FD             MOV    R5,A
                                           ; SOURCE LINE # 228 
002C 22             RET    

            ; FUNCTION _wordRead (END)

            ; FUNCTION _coilWrite (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
              ; Register R4R5 is assigned to parameter value
                                           ; SOURCE LINE # 231 
0000 E500    R      MOV    A,numCoils
0002 24FF           ADD    A,#0FFH
0004 F8             MOV    R0,A
0005 E4             CLR    A
0006 34FF           ADDC   A,#0FFH
0008 AB00           MOV    R3,AR0
000A F5F0           MOV    B,A
000C EE             MOV    A,R6
000D B5F005         CJNE   A,B,?LAB233
0010 EF             MOV    A,R7
0011 B50301         CJNE   A,AR3,?LAB233
0014 D3             SETB   C
0015         ?LAB233:
0015 4002           JC     ?NXT114
0017 C3             CLR    C
                                           ; SOURCE LINE # 236 
0018 22             RET    
0019         ?NXT114:
                                           ; SOURCE LINE # 232 
0019 EC             MOV    A,R4
001A 4D             ORL    A,R5
001B 7010           JNZ    ?ELSE65
001D 7401           MOV    A,#001H
001F 8F02           MOV    AR2,R7
0021 0A             INC    R2
0022 8002           SJMP   ?LAB236
0024         ?LAB237:
0024 C3             CLR    C
0025 33             RLC    A
0026         ?LAB236:
0026 DAFC           DJNZ   R2,?LAB237
0028 F4             CPL    A
0029 5200    R      ANL    outputState,A
002B 800D           SJMP   ?NXT115
002D         ?ELSE65:
                                           ; SOURCE LINE # 233 
002D 8F02           MOV    AR2,R7
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 25

002F 0A             INC    R2
0030 7401           MOV    A,#001H
0032 8002           SJMP   ?LAB238
0034         ?LAB239:
0034 C3             CLR    C
0035 33             RLC    A
0036         ?LAB238:
0036 DAFC           DJNZ   R2,?LAB239
0038 4200    R      ORL    outputState,A
003A         ?NXT115:
                                           ; SOURCE LINE # 234 
003A E500    R      MOV    A,outputState
003C F4             CPL    A
003D F590           MOV    P1,A
                                           ; SOURCE LINE # 235 
003F D3             SETB   C
                                           ; SOURCE LINE # 236 
0040 22             RET    

            ; FUNCTION _coilWrite (END)

            ; FUNCTION _holdingRegisterWrite (BEGIN)
                                           ; SOURCE LINE # 238 
0000 8E00    R      MOV    startAddress,R6
0002 8F00    R      MOV    startAddress+01H,R7
0004 8C00    R      MOV    value,R4
0006 8D00    R      MOV    value+01H,R5
                                           ; SOURCE LINE # 239 
0008 E500    R      MOV    A,numHoldingRegisters
000A 24FF           ADD    A,#0FFH
000C F8             MOV    R0,A
000D E4             CLR    A
000E 34FF           ADDC   A,#0FFH
0010 AB00           MOV    R3,AR0
0012 F5F0           MOV    B,A
0014 E500    R      MOV    A,startAddress
0016 B5F006         CJNE   A,B,?LAB245
0019 E500    R      MOV    A,startAddress+01H
001B B50301         CJNE   A,AR3,?LAB245
001E D3             SETB   C
001F         ?LAB245:
001F 4002           JC     ?NXT117
0021 C3             CLR    C
                                           ; SOURCE LINE # 242 
0022 22             RET    
0023         ?NXT117:
                                           ; SOURCE LINE # 240 
0023 AE00    R      MOV    R6,startAddress
0025 AF00    R      MOV    R7,startAddress+01H
0027 AC00    R      MOV    R4,value
0029 AD00    R      MOV    R5,value+01H
002B 120000  R      LCALL  _EEPROMwrite
                                           ; SOURCE LINE # 241 
002E D3             SETB   C
                                           ; SOURCE LINE # 242 
002F 22             RET    

            ; FUNCTION _holdingRegisterWrite (END)
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 26


            ; FUNCTION _oops (BEGIN)
              ; Register R6R7 is assigned to parameter errCode
                                           ; SOURCE LINE # 245 
0000 430080  R      ORL    buf+01H,#080H
                                           ; SOURCE LINE # 246 
0003 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 247 
0005 7F03           MOV    R7,#003H
0007 020000  R      LJMP   _write

            ; FUNCTION _oops (END)

            ; FUNCTION _write (BEGIN)
                                           ; SOURCE LINE # 250 
0000 8F00    R      MOV    len,R7
                                           ; SOURCE LINE # 254 
0002 E500    R      MOV    A,buf
0004 6043           JZ     ?NXT121
                                           ; SOURCE LINE # 255 
0006 120000  R      LCALL  _crc
                                           ; SOURCE LINE # 257 
0009 EF             MOV    A,R7
000A FB             MOV    R3,A
                                           ; SOURCE LINE # 255 
000B 8E00    R      MOV    CRC,R6
000D 8F00    R      MOV    CRC+01H,R7
                                           ; SOURCE LINE # 257 
000F E500    R      MOV    A,len
0011 2400    R      ADD    A,#buf
0013 F8             MOV    R0,A
0014 A603           MOV    @R0,AR3
                                           ; SOURCE LINE # 258 
0016 E500    R      MOV    A,len
0018 2400    R      ADD    A,#buf+01H
001A F8             MOV    R0,A
001B A600    R      MOV    @R0,CRC
                                           ; SOURCE LINE # 260 
001D D2B5           SETB   T1
                                           ; SOURCE LINE # 261 
001F 750000  R      MOV    i,#000H
0022         ?FOR15:
0022 E500    R      MOV    A,len
0024 2402           ADD    A,#002H
0026 FB             MOV    R3,A
0027 E4             CLR    A
0028 33             RLC    A
0029 F5F0           MOV    B,A
002B B2F7           CPL    B.7
002D 7480           MOV    A,#080H
002F B5F005         CJNE   A,B,?LAB254
0032 E500    R      MOV    A,i
0034 B50300         CJNE   A,AR3,?LAB254
0037         ?LAB254:
0037 500E           JNC    ?NXT122
0039 E500    R      MOV    A,i
003B 2400    R      ADD    A,#buf
003D F8             MOV    R0,A
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 27

003E 8607           MOV    AR7,@R0
0040 120000  R      LCALL  _serialTX
0043 0500    R      INC    i
0045 80DB           SJMP   ?FOR15
0047         ?NXT122:
                                           ; SOURCE LINE # 262 
0047 C2B5           CLR    T1
0049         ?NXT121:
                                           ; SOURCE LINE # 264 
0049 22             RET    

            ; FUNCTION _write (END)

            ; FUNCTION _crc (BEGIN)
              ; Register R7 is assigned to parameter len
              ; R4R5 is assigned to crc
                                           ; SOURCE LINE # 269 
0000 74FF           MOV    A,#0FFH
0002 FC             MOV    R4,A
0003 FD             MOV    R5,A
              ; R6 is assigned to i
                                           ; SOURCE LINE # 271 
0004 7E00           MOV    R6,#000H
0006         ?FOR18:
0006 EE             MOV    A,R6
0007 B50700         CJNE   A,AR7,?LAB263
000A         ?LAB263:
000A 5032           JNC    ?NXT129
                                           ; SOURCE LINE # 272 
000C 2400    R      ADD    A,#buf
000E F8             MOV    R0,A
000F E6             MOV    A,@R0
0010 FB             MOV    R3,A
0011 ED             MOV    A,R5
0012 6B             XRL    A,R3
0013 FD             MOV    R5,A
                                           ; SOURCE LINE # 273 
0014 750000  R      MOV    j,#000H
0017         ?FOR19:
                                           ; SOURCE LINE # 274 
0017 ED             MOV    A,R5
0018 5401           ANL    A,#001H
001A 24FF           ADD    A,#0FFH
001C 9200    R      MOV    lsb,C
                                           ; SOURCE LINE # 275 
001E 8D03           MOV    AR3,R5
0020 EC             MOV    A,R4
0021 C3             CLR    C
0022 13             RRC    A
0023 CB             XCH    A,R3
0024 13             RRC    A
0025 CB             XCH    A,R3
0026 FC             MOV    R4,A
0027 8B05           MOV    AR5,R3
                                           ; SOURCE LINE # 276 
0029 300008  R      JNB    lsb,?NXT132
                                           ; SOURCE LINE # 277 
002C EB             MOV    A,R3
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 28

002D 6401           XRL    A,#001H
002F FD             MOV    R5,A
0030 EC             MOV    A,R4
0031 64A0           XRL    A,#0A0H
0033 FC             MOV    R4,A
0034         ?NXT132:
                                           ; SOURCE LINE # 273 
0034 0500    R      INC    j
0036 E500    R      MOV    A,j
0038 B408DC         CJNE   A,#008H,?FOR19
                                           ; SOURCE LINE # 271 
003B 0E             INC    R6
003C 80C8           SJMP   ?FOR18
003E         ?NXT129:
                                           ; SOURCE LINE # 281 
003E 8C06           MOV    AR6,R4
0040 8D07           MOV    AR7,R5
                                           ; SOURCE LINE # 282 
0042 22             RET    

            ; FUNCTION _crc (END)

            ; FUNCTION _div8RndUp (BEGIN)
              ; Register R6R7 is assigned to parameter value
                                           ; SOURCE LINE # 285 
0000 EF             MOV    A,R7
0001 2407           ADD    A,#007H
0003 FF             MOV    R7,A
0004 E4             CLR    A
0005 3E             ADDC   A,R6
0006 75F003         MOV    B,#003H
0009         ?LAB269:
0009 C3             CLR    C
000A 13             RRC    A
000B CF             XCH    A,R7
000C 13             RRC    A
000D CF             XCH    A,R7
000E D5F0F8         DJNZ   B,?LAB269
0011 FE             MOV    R6,A
                                           ; SOURCE LINE # 286 
0012 22             RET    

            ; FUNCTION _div8RndUp (END)

            ; FUNCTION _bytesToWord (BEGIN)
              ; Register R7 is assigned to parameter high
              ; Register R5 is assigned to parameter low
                                           ; SOURCE LINE # 289 
0000 ED             MOV    A,R5
0001 FB             MOV    R3,A
0002 7A00           MOV    R2,#000H
0004 C002           PUSH   AR2
0006 C003           PUSH   AR3
0008 EF             MOV    A,R7
0009 FA             MOV    R2,A
000A D007           POP    AR7
000C D0E0           POP    ACC
000E 4A             ORL    A,R2
RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 29

000F FE             MOV    R6,A
                                           ; SOURCE LINE # 290 
0010 22             RET    

            ; FUNCTION _bytesToWord (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 11 
0000 750008  R      MOV    numCoils,#008H
                                           ; SOURCE LINE # 12 
0003 E4             CLR    A
0004 F500    R      MOV    numDiscreteInputs,A
                                           ; SOURCE LINE # 13 
0006 750004  R      MOV    numHoldingRegisters,#004H
                                           ; SOURCE LINE # 15 
0009 C2B5           CLR    T1
                                           ; SOURCE LINE # 17 
000B 75004B  R      MOV    baud,#04BH
000E F500    R      MOV    baud+01H,A
                                           ; SOURCE LINE # 18 
0010 F500    R      MOV    id,A
0012 750001  R      MOV    id+01H,#001H
                                           ; SOURCE LINE # 20 
0015 30B414         JNB    T0,?NXT136
                                           ; SOURCE LINE # 21 
0018 FE             MOV    R6,A
0019 FF             MOV    R7,A
001A 120000  R      LCALL  _EEPROMread
001D 8E00    R      MOV    baud,R6
001F 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 22 
0021 E4             CLR    A
0022 FE             MOV    R6,A
0023 7F01           MOV    R7,#001H
0025 120000  R      LCALL  _EEPROMread
0028 8E00    R      MOV    id,R6
002A 8F00    R      MOV    id+01H,R7
002C         ?NXT136:
                                           ; SOURCE LINE # 24 
002C AE00    R      MOV    R6,baud
002E AF00    R      MOV    R7,baud+01H
0030 120000  R      LCALL  _serialInit
                                           ; SOURCE LINE # 25 
0033 AE00    R      MOV    R6,baud
0035 AF00    R      MOV    R7,baud+01H
0037 120000  R      LCALL  _modbusBegin
003A         ?WHILE13:
                                           ; SOURCE LINE # 28 
003A 120000  R      LCALL  modbusPoll
003D 80FB           SJMP   ?WHILE13

            ; FUNCTION main (END)

RC51 COMPILER V06.20.17.263,  DO_8               12/16/22  16:37:52  PAGE 31



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  3 WARNINGS,  0 ERROR
