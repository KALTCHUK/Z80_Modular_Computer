0001   0000             ;================================================================================================
0002   0000             ; ****************** ONLY FOR CP/M. USES BDOS CALL FOR CONSOLE INPUT ****************************
0003   0000             ;
0004   0000             ; Read console (no echo) and send to LCD. Ctrl-C terminates the program and returns to CCP.
0005   0000             ; When <CR><LF> occurs on the 2nd line, the display scrolls down 1 line. 
0006   0000             ; Converts non printable characters (from 0x0 to 0x1F) to tag.
0007   0000             ;
0008   0000             ; 00 --> [NUL]
0009   0000             ; 01 --> [SOH]
0010   0000             ; 02 --> [STX]
0011   0000             ;    ...
0012   0000             ; 1F --> [US]
0013   0000             ; 
0014   0000             ; CPU @ 4.0MHz (this is important for the delay routines)
0015   0000             ;
0016   0000             ; RS  = A0 from CPU
0017   0000             ; R/W = A1 from CPU
0018   0000             ; E   = 74LS85 output pin 'A=B'
0019   0000             ;
0020   0000             ; By Kaltchuk, feb/2021.
0021   0000             ;================================================================================================
0022   0000             LCDADDR		.EQU	0E0H			; LCD card address
0023   0000             DAT_WR		.EQU	LCDADDR + 1
0024   0000             DAT_RD		.EQU	LCDADDR + 3
0025   0000             CMD_WR		.EQU	LCDADDR + 0
0026   0000             CMD_RD		.EQU	LCDADDR + 2
0027   0000             
0028   0000             BOOT		.EQU	0				; Boot address (return control to CCP).
0029   0000             TPA			.EQU	0100H			; Transient Program Area initial address.
0030   0000             BDOS		.EQU	5H
0031   0000             
0032   0000             ; BDOS functions
0033   0000             C_RAWIO		.EQU	6
0034   0000             C_READ		.EQU	1
0035   0000             C_WRITE		.EQU	2
0036   0000             C_WRITESTR	.EQU	9
0037   0000             
0038   0000             CTRLC		.EQU	3
0039   0000             LF			.EQU	0AH
0040   0000             CR			.EQU	0DH
0041   0000             SPACE		.EQU	20H
0042   0000             
0043   0000             ;================================================================================================
0044   0000             ; Main program
0045   0000             ;================================================================================================
0046   0100             			.ORG	TPA
0047   0100             
0048   0100 CD 22 01    			CALL LCDINIT
0049   0103 CD 63 01    			CALL LCDCLEAR
0050   0106 CD 24 02    LOOP:		CALL GETCHAR
0051   0109 4F          			LD	C,A					; Copy it to C in case we need to print it later.
0052   010A FE 03       			CP	CTRLC
0053   010C CA 00 00    			JP	Z,BOOT				; CTRL-C --> return control to CCP.
0054   010F FE 0D       			CP	CR
0055   0111 28 79       			JR	Z,LCDCR				; It's a <CR>, do nothing.
0056   0113 FE 0A       			CP	LF
0057   0115 CA A1 01    			JP	Z,LCDLF				; It's a <LF>. It will be treated as <CR><LF>.
0058   0118 FE 20       			CP	20H
0059   011A FA E7 01    			JP	M,NONPRTBLE			; It's a non printable character.
0060   011D CD 6B 01    			CALL LCDPUT
0061   0120 18 E4       			JR	LOOP
0062   0122             
0063   0122             ;================================================================================================
0064   0122             ; Initialize LCD
0065   0122             ;================================================================================================
0066   0122 06 0F       LCDINIT:	LD	B,15				; wait 15ms
0067   0124 CD 0B 02    			CALL	DELAYMS
0068   0127 3E 30       			LD	A,030H				; write command 030h
0069   0129 D3 E0       			OUT	(CMD_WR),A
0070   012B 06 05       			LD	B,5					; wait 5ms
0071   012D CD 0B 02    			CALL	DELAYMS
0072   0130 3E 30       			LD	A,030H				; write command 030h
0073   0132 D3 E0       			OUT	(CMD_WR),A
0074   0134 0E 14       			LD	C,20				; wait (5x20) 100us
0075   0136 CD 17 02    			CALL	DELAY5US
0076   0139 3E 30       			LD	A,030H				; write command 030h
0077   013B D3 E0       			OUT	(CMD_WR),A
0078   013D 0E 14       			LD	C,20				; wait (5x20) 100us
0079   013F CD 17 02    			CALL	DELAY5US
0080   0142 3E 38       			LD	A,038H				; write command 038h = function set (8-bits, 2-lines, 5x7dots)
0081   0144 D3 E0       			OUT	(CMD_WR),A
0082   0146 CD 1E 02    			CALL	BWAIT
0083   0149 3E 08       			LD	A,08H				; write command 08h = display (off)
0084   014B D3 E0       			OUT	(CMD_WR),A
0085   014D CD 1E 02    			CALL	BWAIT
0086   0150 3E 01       			LD	A,01H				; write command 01h = clear display
0087   0152 D3 E0       			OUT	(CMD_WR),A
0088   0154 CD 1E 02    			CALL	BWAIT
0089   0157 3E 06       			LD	A,06H				; write command 06h = entry mode (increment)
0090   0159 D3 E0       			OUT	(CMD_WR),A
0091   015B CD 1E 02    			CALL	BWAIT
0092   015E 3E 0C       			LD	A,0CH				; write command 0Ch = display (on)
0093   0160 D3 E0       			OUT	(CMD_WR),A
0094   0162 C9          			RET	
0095   0163             
0096   0163             ;================================================================================================
0097   0163             ; Clear LCD and goto line 1, column 1.
0098   0163             ;================================================================================================
0099   0163 CD 1E 02    LCDCLEAR:	CALL	BWAIT
0100   0166 3E 01       			LD	A,01H				; write command 01h = clear display
0101   0168 D3 E0       			OUT	(CMD_WR),A
0102   016A C9          			RET
0103   016B             
0104   016B             ;================================================================================================
0105   016B             ; Send to LCD char in regC. Print at current position (what ever it is)
0106   016B             ;================================================================================================
0107   016B CD 1E 02    LCDPUT:		CALL	BWAIT
0108   016E 79          			LD	A,C
0109   016F D3 E1       			OUT	(DAT_WR),A
0110   0171 C9          			RET
0111   0172             
0112   0172             ;================================================================================================
0113   0172             ; Position LCD cursor at line regH, column regL.
0114   0172             ;================================================================================================
0115   0172 25          LCDPOS:		DEC	H
0116   0173 CB 24       			SLA	H
0117   0175 CB 24       			SLA	H
0118   0177 CB 24       			SLA	H
0119   0179 CB 24       			SLA	H
0120   017B CB 24       			SLA	H
0121   017D CB 24       			SLA	H
0122   017F 7C          			LD	A,H
0123   0180 2D          			DEC	L
0124   0181 B5          			OR	L
0125   0182 F6 80       			OR	080H
0126   0184 67          			LD	H,A
0127   0185 CD 1E 02    			CALL	BWAIT
0128   0188 7C          			LD	A,H
0129   0189 D3 E0       			OUT	(CMD_WR),A
0130   018B C9          			RET
0131   018C             
0132   018C             ;================================================================================================
0133   018C             ; Carriage Return.
0134   018C             ;================================================================================================
0135   018C CD 1E 02    LCDCR:		CALL BWAIT
0136   018F DB E2       			IN	A,(CMD_RD)
0137   0191 07          			RLCA					; Find out if cursor is on 1st or 2nd line.
0138   0192 07          			RLCA					; carry=0 --> 1st line, carry=1 --> 2nd line.
0139   0193 26 02       			LD	H,2
0140   0195 2E 01       			LD	L,1
0141   0197 38 02       			JR	C,LINE2
0142   0199 26 01       			LD	H,1
0143   019B CD 72 01    LINE2:		CALL LCDPOS
0144   019E C3 06 01    			JP	LOOP
0145   01A1             
0146   01A1             ;================================================================================================
0147   01A1             ; Line Feed.
0148   01A1             ;================================================================================================
0149   01A1 CD 1E 02    LCDLF:		CALL	BWAIT
0150   01A4 DB E2       			IN A,(CMD_RD)
0151   01A6 26 02       			LD	H,2
0152   01A8 6F          			LD	L,A
0153   01A9 2C          			INC	L					; L hold the current column
0154   01AA 07          			RLCA
0155   01AB 07          			RLCA
0156   01AC 30 33       			JR	NC,LINEONE
0157   01AE             
0158   01AE 06 00       			LD	B,0					; initialize position counter
0159   01B0 CD 1E 02    NEWSRC:		CALL	BWAIT
0160   01B3 78          			LD	A,B
0161   01B4 F6 C0       			OR	0C0H
0162   01B6 D3 E0       			OUT	(CMD_WR),A			; set addr counter to source position
0163   01B8 CD 1E 02    			CALL	BWAIT
0164   01BB DB E3       			IN	A,(DAT_RD)			; get data from source position
0165   01BD 4F          			LD	C,A
0166   01BE CD 1E 02    			CALL	BWAIT
0167   01C1 78          			LD	A,B
0168   01C2 F6 80       			OR	080H
0169   01C4 D3 E0       			OUT	(CMD_WR),A			; set addr counter to target position
0170   01C6 CD 1E 02    			CALL	BWAIT
0171   01C9 79          			LD	A,C
0172   01CA D3 E1       			OUT	(DAT_WR),A			; put data in target position
0173   01CC CD 1E 02    			CALL	BWAIT
0174   01CF 78          			LD	A,B
0175   01D0 F6 C0       			OR	0C0H
0176   01D2 D3 E0       			OUT	(CMD_WR),A			; set addr counter back to source position
0177   01D4 CD 1E 02    			CALL	BWAIT
0178   01D7 3E 20       			LD	A,SPACE
0179   01D9 D3 E1       			OUT	(DAT_WR),A			; put blank space in source position
0180   01DB 04          			INC	B
0181   01DC 78          			LD	A,B
0182   01DD D6 10       			SUB	010H
0183   01DF 20 CF       			JR	NZ,NEWSRC
0184   01E1 CD 72 01    LINEONE:	CALL	LCDPOS
0185   01E4 C3 06 01    			JP	LOOP
0186   01E7             
0187   01E7             ;================================================================================================
0188   01E7             ; Do the non printable characters
0189   01E7             ;================================================================================================
0190   01E7 21 30 02    NONPRTBLE:	LD	HL,CODETAB
0191   01EA 81          			ADD	A,C
0192   01EB 81          			ADD A,C
0193   01EC 4F          			LD	C,A
0194   01ED 06 00       			LD	B,0
0195   01EF 09          			ADD	HL,BC				; HL holds the position for the char in translation table
0196   01F0 0E 5B       			LD	C,'['
0197   01F2 CD 6B 01    			CALL LCDPUT
0198   01F5 4E          			LD	C,(HL)				; 1st char from table
0199   01F6 CD 6B 01    			CALL LCDPUT
0200   01F9 23          			INC	HL
0201   01FA 4E          			LD	C,(HL)				; 2nd char from table
0202   01FB CD 6B 01    			CALL LCDPUT
0203   01FE 23          			INC	HL
0204   01FF 4E          			LD	C,(HL)				; 3rd char from table
0205   0200 CD 6B 01    			CALL LCDPUT
0206   0203 0E 5D       			LD	C,']'
0207   0205 CD 6B 01    			CALL LCDPUT
0208   0208 C3 06 01    			JP	LOOP
0209   020B             
0210   020B             ;================================================================================================
0211   020B             ; Delay X miliseconds, with X passed on reg B
0212   020B             ;================================================================================================
0213   020B C5          DELAYMS:	PUSH	BC
0214   020C 0E C8       DECB:		LD	C,0C8H
0215   020E 00          DECC:		NOP
0216   020F 0D          			DEC	C
0217   0210 20 FC       			JR	NZ,DECC
0218   0212 05          			DEC	B
0219   0213 20 F7       			JR	NZ,DECB
0220   0215 C1          			POP	BC
0221   0216 C9          			RET
0222   0217             
0223   0217             ;================================================================================================
0224   0217             ; Delay 5*X microseconds, with X passed on reg C
0225   0217             ;================================================================================================
0226   0217 C5          DELAY5US:	PUSH	BC
0227   0218 00          DEC:		NOP
0228   0219 0D          			DEC	C
0229   021A 20 FC       			JR	NZ,DEC
0230   021C C1          			POP	BC
0231   021D C9          			RET
0232   021E             
0233   021E             ;================================================================================================
0234   021E             ; Wait until Busy flag = 0
0235   021E             ;================================================================================================
0236   021E DB E2       BWAIT:		IN A,(CMD_RD)
0237   0220 07          			RLCA
0238   0221 38 FB       			JR	C,BWAIT
0239   0223 C9          			RET
0240   0224             
0241   0224             ;================================================================================================
0242   0224             ; Wait for a char, return it in A (no echo)
0243   0224             ;================================================================================================
0244   0224 1E FF       GETCHAR:	LD	E,$FF
0245   0226 0E 06       			LD 	C,C_RAWIO
0246   0228 CD 05 00    			CALL BDOS
0247   022B FE 00       			CP	0
0248   022D 28 F5       			JR	Z,GETCHAR
0249   022F C9          			RET
0250   0230             ;================================================================================================
0251   0230             ; Conversion table for non printable characters
0252   0230             ;================================================================================================
0253   0230 4E 55 4C    CODETAB:	.DB		"NUL"			; Null
0254   0233 53 4F 48    			.DB		"SOH"			; Start of Header
0255   0236 53 54 58    			.DB		"STX"			; Start of Text
0256   0239 45 54 58    			.DB		"ETX"			; End of Text
0257   023C 45 4F 54    			.DB		"EOT"			; End of Transmission
0258   023F 45 4E 51    			.DB		"ENQ"			; Enquiry
0259   0242 41 43 4B    			.DB		"ACK"			; Acknowledge
0260   0245 42 45 4C    			.DB		"BEL"			; Bell
0261   0248 42 53 09    			.DB		"BS	"			; Backspace
0262   024B 48 54 09    			.DB		"HT	"			; Horizontal Tab
0263   024E 4C 46 09    			.DB		"LF	"			; Line Feed
0264   0251 56 54 09    			.DB		"VT	"			; Vertical Tab
0265   0254 46 46 09    			.DB		"FF	"			; Form Feed
0266   0257 43 52 09    			.DB		"CR	"			; Carriage Return
0267   025A 53 4F 09    			.DB		"SO	"			; Shift Out
0268   025D 53 49 09    			.DB		"SI	"			; Shift In
0269   0260 44 4C 45    			.DB		"DLE"			; Data Link Escape
0270   0263 44 43 31    			.DB		"DC1"			; Device Control 1
0271   0266 44 43 32    			.DB		"DC2"			; Device Control 2
0272   0269 44 43 33    			.DB		"DC3"			; Device Control 3
0273   026C 44 43 34    			.DB		"DC4"			; Device Control 4
0274   026F 4E 41 4B    			.DB		"NAK"			; Negative Acknowledge
0275   0272 53 59 4E    			.DB		"SYN"			; Synchronize
0276   0275 45 54 42    			.DB		"ETB"			; End of Transmission Block
0277   0278 43 41 4E    			.DB		"CAN"			; Cancel
0278   027B 45 4D 09    			.DB		"EM	"			; End of Medium
0279   027E 53 55 42    			.DB		"SUB"			; Substitute
0280   0281 45 53 43    			.DB		"ESC"			; Escape
0281   0284 46 53 09    			.DB		"FS	"			; File Separator
0282   0287 47 53 09    			.DB		"GS	"			; Group Separator
0283   028A 52 53 09    			.DB		"RS	"			; Record Separator
0284   028D 55 53 09    			.DB		"US	"			; Unit Separator
0285   0290             
0286   0290             			.END
tasm: Number of errors = 0
