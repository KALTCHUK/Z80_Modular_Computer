0001   0000             ;==================================================================================
0002   0000             ; READ DEBUG LOG AND SHOW ON CONSOLE
0003   0000             ;==================================================================================
0004   0000             REBOOT		.EQU	0H
0005   0000             BDOS		.EQU	5H
0006   0000             TPA			.EQU	0100H
0007   0000             BIOS		.EQU	0E600h			; Base of BIOS.
0008   0000             
0009   0000             CONIN		.EQU	BIOS+(3*3)		; BIOS entry for Console Input (console --> regA)
0010   0000             CONOUT		.EQU	BIOS+(3*4)		; BIOS entry for Console Output (regC --> console)
0011   0000             C_STRING	.EQU	9
0012   0000             F_CLOSE		.EQU	16
0013   0000             F_DELETE	.EQU	19
0014   0000             F_WRITE		.EQU	21
0015   0000             F_MAKE		.EQU	22
0016   0000             F_DMAOFF	.EQU	26
0017   0000             
0018   0000             EOT			.EQU	04H
0019   0000             ACK			.EQU	06H
0020   0000             LF			.EQU	0AH
0021   0000             CR			.EQU	0DH
0022   0000             NAK			.EQU	015H
0023   0000             EM			.EQU	019H
0024   0000             RS			.EQU	01EH
0025   0000             		
0026   0000             FCB			.EQU	0005CH
0027   0000             DMA			.EQU	080H
0028   0000             LOGPTR		.EQU	0300H
0029   0000             LOGBUF		.EQU	LOGPTR+2
0030   0000             ;==================================================================================
0031   0100             			.ORG TPA
0032   0100             
0033   0100 31 AB 01    			LD	SP,STACK			; Set default stack.
0034   0103 ED 4B 00 03 			LD	BC,(LOGPTR)
0035   0107 03          			INC	BC
0036   0108 21 02 03    			LD	HL,LOGBUF
0037   010B             			
0038   010B 7E          NEXT:		LD	A,(HL)
0039   010C C5          			PUSH BC					; Keep pointers safe
0040   010D E5          			PUSH HL
0041   010E FE 04       			CP	EOT
0042   0110 28 1E       			JR	Z,CEOT
0043   0112 FE 04       			CP	EOT
0044   0114 28 1F       			JR	Z,CACK
0045   0116 FE 04       			CP	EOT
0046   0118 28 20       			JR	Z,CLF
0047   011A FE 04       			CP	EOT
0048   011C 28 21       			JR	Z,CCR
0049   011E FE 04       			CP	EOT
0050   0120 28 22       			JR	Z,CNAK
0051   0122 FE 04       			CP	EOT
0052   0124 28 23       			JR	Z,CEM
0053   0126 FE 04       			CP	EOT
0054   0128 28 24       			JR	Z,CRS
0055   012A 4F          			LD	C,A
0056   012B CD 0C E6    			CALL CONOUT
0057   012E 18 28       			JR	CONTINUE
0058   0130             
0059   0130 11 65 01    CEOT:		LD	DE,SYMEOT
0060   0133 18 1E       			JR	PSYMBOL
0061   0135 11 6B 01    CACK:		LD	DE,SYMACK
0062   0138 18 19       			JR	PSYMBOL
0063   013A 11 71 01    CLF:		LD	DE,SYMLF
0064   013D 18 14       			JR	PSYMBOL
0065   013F 11 76 01    CCR:		LD	DE,SYMCR
0066   0142 18 0F       			JR	PSYMBOL
0067   0144 11 7B 01    CNAK:		LD	DE,SYMNAK
0068   0147 18 0A       			JR	PSYMBOL
0069   0149 11 81 01    CEM:		LD	DE,SYMEM
0070   014C 18 05       			JR	PSYMBOL
0071   014E 11 86 01    CRS:		LD	DE,SYMRS
0072   0151 18 00       			JR	PSYMBOL
0073   0153             
0074   0153             
0075   0153 0E 09       PSYMBOL:	LD	C,C_STRING
0076   0155 CD 05 00    			CALL BDOS
0077   0158             
0078   0158             
0079   0158 E1          CONTINUE:	POP	HL				; Recover pointers
0080   0159 C1          			POP	BC
0081   015A 23          			INC	HL
0082   015B 37          			SCF
0083   015C 3F          			CCF
0084   015D ED 42       			SBC	HL,BC
0085   015F C2 0B 01    			JP	NZ,NEXT
0086   0162 C3 00 00    			JP	REBOOT
0087   0165             
0088   0165             			
0089   0165             ;==================================================================================
0090   0165 3C 45 4F 54 SYMEOT		.DB	"<EOT>$"
0090   0169 3E 24 
0091   016B 3C 41 43 4B SYMACK		.DB	"<ACK>$"
0091   016F 3E 24 
0092   0171 3C 4C 46 3E SYMLF		.DB	"<LF>$"
0092   0175 24 
0093   0176 3C 43 52 3E SYMCR		.DB	"<CR>$"
0093   017A 24 
0094   017B 3C 4E 41 4B SYMNAK		.DB	"<NAK>$"
0094   017F 3E 24 
0095   0181 3C 45 4D 3E SYMEM		.DB	"<EM>$"
0095   0185 24 
0096   0186 3C 52 53 3E SYMRS		.DB	"<RS>$"
0096   018A 24 
0097   018B             
0098   018B             			.DS	020h			; Start of stack area.
0099   01AB             STACK		.EQU	$
0100   01AB             
0101   01AB             
0102   01AB             			.END
tasm: Number of errors = 0
