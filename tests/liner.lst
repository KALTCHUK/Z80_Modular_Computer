0001   0000             ;==================================================================================
0002   0000             ; LINER.ASM = MONITOR 2.0 - USE WITH VT100 TERMINAL
0003   0000             ; (Should behave like CCP on CP/M)
0004   0000             ;
0005   0000             ; Backspace = delete last character
0006   0000             ;        ^X = delete all the line
0007   0000             ;
0008   0000             ; After user types <ENTER>, the line is saved in line_buffer and control returns
0009   0000             ; to Monitor program.
0010   0000             ;==================================================================================
0011   0000             TPA			.EQU	0100H		; Transient Programs Area
0012   0000             MONITOR		.EQU	0D000H		; Monitor entry point
0013   0000             BIOS		.EQU	0E600H		; BIOS entry point
0014   0000             DMA			.EQU	0080H		; Buffer used by Monitor
0015   0000             
0016   0000             ;================================================================================================
0017   0000             ; BIOS functions.
0018   0000             ;================================================================================================
0019   0000             LEAP		.EQU	3					; 3 bytes for each entry (JP aaaa)
0020   0000             
0021   0000             BOOT:		.EQU	BIOS				;  0 Initialize.
0022   0000             WBOOT:		.EQU	BIOS+(LEAP*1)		;  1 Warm boot.
0023   0000             CONST:		.EQU	BIOS+(LEAP*2)		;  2 Console status.
0024   0000             CONIN:		.EQU	BIOS+(LEAP*3)		;  3 Console input.
0025   0000             CONOUT:		.EQU	BIOS+(LEAP*4)		;  4 Console OUTput.
0026   0000             LIST:		.EQU	BIOS+(LEAP*5)		;  5 List OUTput.
0027   0000             PUNCH:		.EQU	BIOS+(LEAP*6)		;  6 Punch OUTput.
0028   0000             READER:		.EQU	BIOS+(LEAP*7)		;  7 Reader input.
0029   0000             HOME:		.EQU	BIOS+(LEAP*8)		;  8 Home disk.
0030   0000             SELDSK:		.EQU	BIOS+(LEAP*9)		;  9 Select disk.
0031   0000             SETTRK:		.EQU	BIOS+(LEAP*10)		; 10 Select track.
0032   0000             SETSEC:		.EQU	BIOS+(LEAP*11)		; 11 Select sector.
0033   0000             SETDMA:		.EQU	BIOS+(LEAP*12)		; 12 Set DMA ADDress.
0034   0000             READ:		.EQU	BIOS+(LEAP*13)		; 13 Read 128 bytes.
0035   0000             WRITE:		.EQU	BIOS+(LEAP*14)		; 14 Write 128 bytes.
0036   0000             LISTST:		.EQU	BIOS+(LEAP*15)		; 15 List status.
0037   0000             SECTRAN:	.EQU	BIOS+(LEAP*16)		; 16 Sector translate.
0038   0000             PRINTSEQ:	.EQU	BIOS+(LEAP*17)		; not a BIOS function
0039   0000             
0040   0000             ;================================================================================================
0041   0000             ; ASCII characters.
0042   0000             ;================================================================================================
0043   0000             NUL			.EQU	00H
0044   0000             SOH			.EQU	01H
0045   0000             STX			.EQU	02H
0046   0000             ETX			.EQU	03H
0047   0000             EOT			.EQU	04H
0048   0000             ENQ			.EQU	05H
0049   0000             QCK			.EQU	06H
0050   0000             BEL			.EQU	07H
0051   0000             BS			.EQU	08H			; ^H
0052   0000             HT			.EQU	09H
0053   0000             LF			.EQU	0AH
0054   0000             VT			.EQU	0BH
0055   0000             FF			.EQU	0CH
0056   0000             CR			.EQU	0DH
0057   0000             SO			.EQU	0EH
0058   0000             SI			.EQU	0FH
0059   0000             DLE			.EQU	10H
0060   0000             DC1			.EQU	11H
0061   0000             DC2			.EQU	12H
0062   0000             DC3			.EQU	13H
0063   0000             DC4			.EQU	14H
0064   0000             NAK			.EQU	15H			; ^U
0065   0000             SYN			.EQU	16H
0066   0000             ETB			.EQU	17H
0067   0000             CAN			.EQU	18H			; ^X
0068   0000             EM			.EQU	19H
0069   0000             SUB			.EQU	1AH
0070   0000             ESC			.EQU	1BH
0071   0000             FS			.EQU	1CH
0072   0000             GS			.EQU	1DH
0073   0000             RS			.EQU	1EH
0074   0000             US			.EQU	1FH
0075   0000             
0076   0000             ;================================================================================================
0077   0000             ; Some constants
0078   0000             ;================================================================================================
0079   0000             MAXLBUF		.EQU	DMA+80
0080   0000             PROMPT		.EQU	'}'
0081   0000             ;================================================================================================
0082   0000             ; MAIN PROGRAM STARTS HERE
0083   0000             ;================================================================================================
0084   0100             			.ORG TPA
0085   0100             
0086   0100 CD 33 E6    			CALL PRINTSEQ
0087   0103 5A 38 30 20 			.DB	"Z80 Modular Computer BIOS 1.0 by Kaltchuk - 2020",CR,LF
0087   0107 4D 6F 64 75 
0087   010B 6C 61 72 20 
0087   010F 43 6F 6D 70 
0087   0113 75 74 65 72 
0087   0117 20 42 49 4F 
0087   011B 53 20 31 2E 
0087   011F 30 20 62 79 
0087   0123 20 4B 61 6C 
0087   0127 74 63 68 75 
0087   012B 6B 20 2D 20 
0087   012F 32 30 32 30 
0087   0133 0D 0A 
0088   0135 4D 6F 6E 69 			.DB	"Monitor 2.0 - 2021",CR,LF,0
0088   0139 74 6F 72 20 
0088   013D 32 2E 30 20 
0088   0141 2D 20 32 30 
0088   0145 32 31 0D 0A 
0088   0149 00 
0089   014A 3E 00       CYCLE:		LD	A,0
0090   014C 32 01 05    			LD	(ENVIR),A
0091   014F CD 24 04    			CALL PRINTENV
0092   0152 CD AE 02    			CALL LINER					; Call the line manager
0093   0155 FE FF       			CP	0FFH
0094   0157 CA 03 E6    			JP	Z,WBOOT					; User typed Ctrl-C or Ctrl-Z... Abort, abort!
0095   015A 3A 80 00    			LD	A,(DMA)
0096   015D FE 00       			CP	0
0097   015F 28 E9       			JR	Z,CYCLE					; User ENTERed an empty line. No need to parse.
0098   0161 21 B2 04    			LD	HL,CMDTBL
0099   0164 11 80 00    			LD	DE,DMA
0100   0167 CD 57 03    			CALL PARSER					; Find command comparing buffer with Command Table.
0101   016A 3C          			INC	A
0102   016B 28 01       			JR	Z,UNK					; No match found in command table.
0103   016D E9          			JP	(HL)					; Jump to Command Routine
0104   016E CD 93 02    UNK:		CALL UNKNOWN
0105   0171 18 D7       			JR	CYCLE
0106   0173             			
0107   0173             ;================================================================================================
0108   0173             ; Memory Operations
0109   0173             ;
0110   0173             ; Options:	R aaaa					Read 1 page starting at aaaa. <ENTER>=next page, <ESC>=quit.
0111   0173             ;			W aaaa,c1 c2 ... cN		Write at aaaa the sequence of characters.
0112   0173             ;			C aaaa-bbbb,cccc		Copy [aaaa ~ bbbb] to cccc.
0113   0173             ;			F aaaa-bbbb,cc			Fill [aaaa ~ bbbb] with cc.
0114   0173             ;			V aaaa-bbbb				Verify area [aaaa ~ bbbb].
0115   0173             ;			Ctrl-C					Return to Monitor.
0116   0173             ;================================================================================================
0117   0173 3E 4D       MEMO:		LD	A,'M'
0118   0175 32 01 05    			LD	(ENVIR),A				; Set environment variable.
0119   0178 CD 24 04    			CALL PRINTENV
0120   017B CD AE 02    			CALL LINER					; Call the line manager.
0121   017E FE FF       			CP	0FFH
0122   0180 CA 4A 01    			JP	Z,CYCLE					; User typed Crl-Z, return to Monitor.
0123   0183 3A 80 00    			LD	A,(DMA)
0124   0186 FE 00       			CP	0
0125   0188 28 E9       			JR	Z,MEMO					; User ENTERed an empty line. No need to parse.
0126   018A 21 E5 04    			LD	HL,MEMOCT				; Set Memory command table.
0127   018D 11 80 00    			LD	DE,DMA
0128   0190 CD 57 03    			CALL PARSER					; Find command comparing buffer with Command Table.
0129   0193 3C          			INC	A
0130   0194 28 01       			JR	Z,MUNKNOWN				; No match found in command table.
0131   0196 E9          			JP	(HL)					; Jump to Command Routine
0132   0197 CD 93 02    MUNKNOWN:	CALL UNKNOWN
0133   019A 18 D7       			JR	MEMO
0134   019C             			
0135   019C             ;================================================================================================
0136   019C             ; Read memory operations
0137   019C             ;================================================================================================
0138   019C CD 24 04    MREAD:		CALL PRINTENV
0139   019F CD 33 E6    			CALL PRINTSEQ
0140   01A2 52 20 61 61 			.DB	"R aaaa",CR,LF,0
0140   01A6 61 61 0D 0A 
0140   01AA 00 
0141   01AB C3 73 01    			JP	MEMO
0142   01AE             
0143   01AE             ;================================================================================================
0144   01AE             ; Write memory operations
0145   01AE             ;================================================================================================
0146   01AE CD 24 04    MWRITE:		CALL PRINTENV
0147   01B1 CD 33 E6    			CALL PRINTSEQ
0148   01B4 57 20 61 61 			.DB	"W aaaa,c1...cN",CR,LF,0
0148   01B8 61 61 2C 63 
0148   01BC 31 2E 2E 2E 
0148   01C0 63 4E 0D 0A 
0148   01C4 00 
0149   01C5 C3 73 01    			JP	MEMO
0150   01C8             
0151   01C8             ;================================================================================================
0152   01C8             ; Copy memory operations
0153   01C8             ;================================================================================================
0154   01C8 CD 24 04    MCOPY:		CALL PRINTENV
0155   01CB CD 33 E6    			CALL PRINTSEQ
0156   01CE 43 20 61 61 			.DB	"C aaaa-bbbb,cccc",CR,LF,0
0156   01D2 61 61 2D 62 
0156   01D6 62 62 62 2C 
0156   01DA 63 63 63 63 
0156   01DE 0D 0A 00 
0157   01E1 C3 73 01    			JP	MEMO
0158   01E4             
0159   01E4             ;================================================================================================
0160   01E4             ; Fill memory operations
0161   01E4             ;================================================================================================
0162   01E4 CD 24 04    MFILL:		CALL PRINTENV
0163   01E7 CD 33 E6    			CALL PRINTSEQ
0164   01EA 46 20 61 61 			.DB	"F aaaa-bbbb,cc",CR,LF,0
0164   01EE 61 61 2D 62 
0164   01F2 62 62 62 2C 
0164   01F6 63 63 0D 0A 
0164   01FA 00 
0165   01FB C3 73 01    			JP	MEMO
0166   01FE             
0167   01FE             ;================================================================================================
0168   01FE             ; Verify memory operations
0169   01FE             ;================================================================================================
0170   01FE CD 24 04    MVERIFY:	CALL PRINTENV
0171   0201 CD 33 E6    			CALL PRINTSEQ
0172   0204 56 20 61 61 			.DB	"V aaaa-bbbb",CR,LF,0
0172   0208 61 61 2D 62 
0172   020C 62 62 62 0D 
0172   0210 0A 00 
0173   0212 C3 73 01    			JP	MEMO
0174   0215             
0175   0215             ;================================================================================================
0176   0215             ; Xmodem Command
0177   0215             ;================================================================================================
0178   0215 CD 33 E6    XMODEM:		CALL PRINTSEQ
0179   0218 5D 58 4D 4F 			.DB	"]XMODEM aaaa",CR,LF,0
0179   021C 44 45 4D 20 
0179   0220 61 61 61 61 
0179   0224 0D 0A 00 
0180   0227 C3 4A 01    			JP	CYCLE
0181   022A             
0182   022A             ;================================================================================================
0183   022A             ; Hexadecimal to Executable conversion command.
0184   022A             ;================================================================================================
0185   022A CD 33 E6    HEX2COM:	CALL PRINTSEQ
0186   022D 5D 48 45 58 			.DB	"]HEX2COM aaaa",CR,LF,0
0186   0231 32 43 4F 4D 
0186   0235 20 61 61 61 
0186   0239 61 0D 0A 00 
0187   023D C3 4A 01    			JP	CYCLE
0188   0240             
0189   0240             ;================================================================================================
0190   0240             ; LCD Operations
0191   0240             ;================================================================================================
0192   0240 CD 33 E6    LCD:		CALL PRINTSEQ
0193   0243 4C 5D 52 65 			.DB	"L]Ready for LCD Operations",CR,LF,0
0193   0247 61 64 79 20 
0193   024B 66 6F 72 20 
0193   024F 4C 43 44 20 
0193   0253 4F 70 65 72 
0193   0257 61 74 69 6F 
0193   025B 6E 73 0D 0A 
0193   025F 00 
0194   0260 C3 4A 01    			JP	CYCLE
0195   0263             
0196   0263             ;================================================================================================
0197   0263             ; Disk Operations
0198   0263             ;================================================================================================
0199   0263 CD 33 E6    DISK:		CALL PRINTSEQ
0200   0266 44 5D 52 65 			.DB	"D]Ready for Disk Operations",CR,LF,0
0200   026A 61 64 79 20 
0200   026E 66 6F 72 20 
0200   0272 44 69 73 6B 
0200   0276 20 4F 70 65 
0200   027A 72 61 74 69 
0200   027E 6F 6E 73 0D 
0200   0282 0A 00 
0201   0284 C3 4A 01    			JP	CYCLE
0202   0287             
0203   0287             ;================================================================================================
0204   0287             ; Execute Command
0205   0287             ;================================================================================================
0206   0287 11 83 00    RUN:		LD	DE,DMA+3
0207   028A CD B2 03    			CALL GETWORD		
0208   028D FE 01       			CP	1				; Is the argument OK?
0209   028F C2 4A 01    			JP	NZ,CYCLE
0210   0292 E9          			JP	(HL)			; Continue execution where user requested. His responsability!
0211   0293             
0212   0293             ;================================================================================================
0213   0293             ; Unknown Command message. HL has the address of the line buffer.
0214   0293             ;================================================================================================
0215   0293 CD 24 04    UNKNOWN:	CALL PRINTENV
0216   0296 21 80 00    			LD	HL,DMA
0217   0299 7E          UNEXT:		LD	A,(HL)
0218   029A FE 00       			CP	0
0219   029C 28 07       			JR	Z,UEND
0220   029E 4F          			LD	C,A
0221   029F CD 0C E6    			CALL CONOUT
0222   02A2 23          			INC	HL
0223   02A3 18 F4       			JR	UNEXT
0224   02A5 0E 3F       UEND:		LD	C,'?'
0225   02A7 CD 0C E6    			CALL CONOUT
0226   02AA CD 07 03    			CALL CRLF
0227   02AD C9          			RET
0228   02AE             
0229   02AE             ;================================================================================================
0230   02AE             ; Routine to manage line input from console. Returns A=0FFh if user typed Ctrl-Z (ETX).
0231   02AE             ;================================================================================================
0232   02AE 21 80 00    LINER:		LD	HL,DMA
0233   02B1 22 FF 04    			LD	(LBUFPTR),HL			; Init line buffer pointer.
0234   02B4 CD 09 E6    WAITCHAR:	CALL CONIN					; Wait till user types something.
0235   02B7 FE 03       			CP	ETX						; It it Ctrl-C
0236   02B9 28 42       			JR	Z,GOTETX
0237   02BB FE 1A       			CP	SUB						; It it Ctrl-Z
0238   02BD 28 3E       			JR	Z,GOTSUB
0239   02BF FE 18       			CP	CAN
0240   02C1 28 40       			JR	Z,GOTCAN				; Is it <CAN>? (= delete line).
0241   02C3 FE 0D       			CP	CR
0242   02C5 28 29       			JR	Z,GOTCR					; Is it <ENTER>?
0243   02C7 FE 08       			CP	BS
0244   02C9 28 1E       			JR	Z,GOTBS					; Is it <BS>? (= backspace).
0245   02CB 2A FF 04    			LD	HL,(LBUFPTR)			; None of the above options, so let's put it in the buffer.
0246   02CE 01 D0 00    			LD	BC,MAXLBUF				; But 1st, we have to check if we still have space.
0247   02D1 37          			SCF
0248   02D2 3F          			CCF
0249   02D3 ED 42       			SBC	HL,BC
0250   02D5 28 0E       			JR	Z,LBUFFULL				; Is buffer full?
0251   02D7 2A FF 04    			LD	HL,(LBUFPTR)
0252   02DA 77          			LD	(HL),A
0253   02DB 23          			INC	HL
0254   02DC 22 FF 04    			LD	(LBUFPTR),HL
0255   02DF 4F          			LD	C,A
0256   02E0 CD 0C E6    OUTWAIT:	CALL CONOUT
0257   02E3 18 CF       			JR	WAITCHAR
0258   02E5             
0259   02E5 0E 07       LBUFFULL:	LD	C,BEL					; Buffer is full. Just ring the bell.
0260   02E7 18 F7       			JR	OUTWAIT
0261   02E9             
0262   02E9 16 01       GOTBS:		LD	D,1						; We got a backspace.
0263   02EB CD 12 03    AFTGOTBS:	CALL BSPROC
0264   02EE 18 C4       			JR	WAITCHAR
0265   02F0             
0266   02F0 2A FF 04    GOTCR:		LD	HL,(LBUFPTR)			; We got an ENTER, which means the the user
0267   02F3 3E 00       			LD	A,0						; has finished typing the command line.
0268   02F5 77          			LD	(HL),A
0269   02F6 CD 07 03    			CALL CRLF
0270   02F9 CD 40 03    			CALL UPPER					; Convert line to uppercase before parsing.
0271   02FC C9          			RET
0272   02FD             GOTETX:
0273   02FD CD 07 03    GOTSUB:		CALL CRLF					; User abort request (Ctrl-C or Ctrl-Z).
0274   0300 3E 0C       			LD	A,FF
0275   0302 C9          			RET
0276   0303             			
0277   0303 16 00       GOTCAN:		LD	D,0						; We got a line delete.
0278   0305 18 E4       			JR	AFTGOTBS
0279   0307             			
0280   0307 0E 0D       CRLF:		LD	C,CR
0281   0309 CD 0C E6    			CALL CONOUT
0282   030C 0E 0A       			LD	C,LF
0283   030E CD 0C E6    			CALL CONOUT					; Output <CR><LF>.
0284   0311 C9          			RET
0285   0312             
0286   0312             ;================================================================================================
0287   0312             ; Routine to do the backspace and line delete. D=1, backspace; D=0, delete line.
0288   0312             ;================================================================================================
0289   0312 2A FF 04    BSPROC:		LD	HL,(LBUFPTR)
0290   0315 01 80 00    			LD	BC,DMA
0291   0318 37          			SCF
0292   0319 3F          			CCF
0293   031A ED 42       			SBC	HL,BC
0294   031C 28 1C       			JR	Z,LBUFEMPTY
0295   031E 2A FF 04    			LD	HL,(LBUFPTR)
0296   0321 2B          			DEC	HL
0297   0322 22 FF 04    			LD	(LBUFPTR),HL
0298   0325 0E 08       			LD	C,BS
0299   0327 CD 0C E6    			CALL CONOUT
0300   032A 0E 20       			LD	C,' '
0301   032C CD 0C E6    			CALL CONOUT
0302   032F 0E 08       			LD	C,BS
0303   0331 CD 0C E6    			CALL CONOUT
0304   0334 7A          			LD	A,D
0305   0335 FE 01       			CP	1
0306   0337 C8          			RET	Z
0307   0338 18 D8       			JR	BSPROC
0308   033A             
0309   033A 0E 07       LBUFEMPTY:	LD	C,BEL
0310   033C CD 0C E6    			CALL CONOUT
0311   033F C9          			RET
0312   0340             			
0313   0340             ;================================================================================================
0314   0340             ; Routine to convert line buffer content to upper case
0315   0340             ;================================================================================================
0316   0340 21 7F 00    UPPER:		LD	HL,DMA-1
0317   0343 23          NEXT2UP:	INC	HL
0318   0344 7E          			LD	A,(HL)
0319   0345 FE 00       			CP	0
0320   0347 C8          			RET	Z
0321   0348 FE 61       			CP	'a'
0322   034A FA 43 03    			JP	M,NEXT2UP
0323   034D FE 7B       			CP	'{'
0324   034F F2 43 03    			JP	P,NEXT2UP
0325   0352 D6 20       			SUB	20H
0326   0354 77          			LD	(HL),A
0327   0355 18 EC       			JR	NEXT2UP
0328   0357             			
0329   0357             ;================================================================================================
0330   0357             ; Routine to parse command. HL=cmd_table_pointer, DE=line_buffer_pointer.
0331   0357             ; Returns jump address on HL. regA=cmd_num or FFh if no match.
0332   0357             ;================================================================================================
0333   0357 C5          PARSER:		PUSH BC
0334   0358 3E 00       			LD	A,0
0335   035A 32 FE 04    			LD	(CMDNUM),A		; Init command number.
0336   035D D5          			PUSH DE
0337   035E DD E1       			POP	IX				; Backup line buffer pointer.
0338   0360 1A          NEXT2PARS:	LD	A,(DE)
0339   0361 BE          			CP	(HL)
0340   0362 20 04       			JR	NZ,NOTEQU
0341   0364 23          			INC	HL
0342   0365 13          			INC	DE
0343   0366 18 F8       			JR	NEXT2PARS
0344   0368 7E          NOTEQU:		LD	A,(HL)
0345   0369 FE 1E       			CP	RS
0346   036B 28 04       			JR	Z,ISRS
0347   036D FE 03       			CP	ETX
0348   036F 20 21       			JR	NZ,NEXTCMD
0349   0371 1A          ISRS:		LD	A,(DE)
0350   0372 FE 00       			CP	0
0351   0374 28 04       			JR	Z,ISZERO
0352   0376 FE 20       			CP	' '
0353   0378 20 18       			JR	NZ,NEXTCMD
0354   037A 7E          ISZERO:		LD	A,(HL)
0355   037B FE 03       			CP	ETX
0356   037D 28 03       			JR	Z,CMDMATCH
0357   037F 23          			INC	HL
0358   0380 18 F8       			JR	ISZERO
0359   0382 23          CMDMATCH:	INC	HL
0360   0383 E5          			PUSH HL
0361   0384 D1          			POP	DE
0362   0385 26 00       			LD	H,0
0363   0387 3A FE 04    			LD	A,(CMDNUM)
0364   038A 6F          			LD	L,A
0365   038B E5          			PUSH HL
0366   038C C1          			POP	BC
0367   038D 09          			ADD	HL,BC			; command_number * 2
0368   038E 09          			ADD	HL,BC			; command_number * 3
0369   038F 19          			ADD HL,DE
0370   0390 C1          			POP	BC
0371   0391 C9          			RET
0372   0392 7E          NEXTCMD:	LD	A,(HL)
0373   0393 FE 1E       			CP	RS
0374   0395 28 07       			JR	Z,ISRS2
0375   0397 FE 03       			CP	ETX
0376   0399 28 10       			JR	Z,NOMATCH
0377   039B 23          			INC	HL
0378   039C 18 F4       			JR	NEXTCMD
0379   039E 23          ISRS2:		INC	HL
0380   039F 3A FE 04    			LD	A,(CMDNUM)
0381   03A2 3C          			INC	A
0382   03A3 32 FE 04    			LD	(CMDNUM),A
0383   03A6 DD E5       			PUSH IX
0384   03A8 D1          			POP	DE
0385   03A9 18 B5       			JR	NEXT2PARS
0386   03AB 21 00 00    NOMATCH:	LD	HL,0
0387   03AE 3E FF       			LD	A,0FFH
0388   03B0 C1          			POP	BC
0389   03B1 C9          			RET
0390   03B2             
0391   03B2             ;================================================================================================
0392   03B2             ; Routine to get word from command line. DE=line_buf_ptr(should point to where word starts).
0393   03B2             ; If successfull, return word in BC. A=0 if missing arg, A=1 if OK, A=2 if invalid arg. 
0394   03B2             ;================================================================================================
0395   03B2 CD C6 03    GETWORD:	CALL GETBYTE
0396   03B5 FE 01       			CP	1
0397   03B7 C0          			RET	NZ
0398   03B8 48          			LD	C,B
0399   03B9 13          			INC	DE
0400   03BA CD C6 03    			CALL GETBYTE
0401   03BD FE 01       			CP	1
0402   03BF C0          			RET NZ
0403   03C0 78          			LD	A,B
0404   03C1 41          			LD	B,C
0405   03C2 4F          			LD	C,A
0406   03C3 3E 01       			LD	A,1
0407   03C5 C9          			RET
0408   03C6             			
0409   03C6             ;================================================================================================
0410   03C6             ; Routine to get byte from command line. DE=line_buf_ptr(should point to where byte starts).
0411   03C6             ; If successfull, return byte in regB. A=0 if missing arg, A=1 if OK, A=2 if invalid arg. 
0412   03C6             ;================================================================================================
0413   03C6 1A          GETBYTE:	LD	A,(DE)
0414   03C7 FE 00       			CP	0
0415   03C9 28 1C       			JR	Z,GBNA				; End of buffer and no arg found.
0416   03CB FE 20       			CP	' '
0417   03CD 28 35       			JR	Z,GBSPC				; Trim the space.
0418   03CF 67          			LD	H,A
0419   03D0 CD 35 04    			CALL ISITHEX
0420   03D3 FE 01       			CP	1
0421   03D5 20 30       			JR	NZ,GBIA				; Invalid arg.
0422   03D7 13          			INC	DE
0423   03D8 1A          			LD	A,(DE)
0424   03D9 6F          			LD	L,A
0425   03DA CD 35 04    			CALL ISITHEX
0426   03DD FE 01       			CP	1
0427   03DF 20 26       			JR	NZ,GBIA				; Invalid arg.
0428   03E1 CD 4F 04    			CALL HL2B				; Convert ASCII pair to byte
0429   03E4 3E 01       			LD	A,1
0430   03E6 C9          			RET
0431   03E7 CD 24 04    GBNA:		CALL PRINTENV
0432   03EA CD 33 E6    			CALL PRINTSEQ
0433   03ED 4D 69 73 73 			.DB	"Missing argument.",CR,LF,0
0433   03F1 69 6E 67 20 
0433   03F5 61 72 67 75 
0433   03F9 6D 65 6E 74 
0433   03FD 2E 0D 0A 00 
0434   0401 3E 00       			LD	A,0
0435   0403 C9          			RET
0436   0404 13          GBSPC:		INC	DE
0437   0405 18 BF       			JR	GETBYTE
0438   0407 CD 24 04    GBIA:		CALL PRINTENV
0439   040A CD 33 E6    			CALL PRINTSEQ
0440   040D 49 6E 76 61 			.DB	"Invalid argument.",CR,LF,0
0440   0411 6C 69 64 20 
0440   0415 61 72 67 75 
0440   0419 6D 65 6E 74 
0440   041D 2E 0D 0A 00 
0441   0421 3E 02       			LD	A,2
0442   0423 C9          			RET
0443   0424             
0444   0424 3A 01 05    PRINTENV:	LD	A,(ENVIR)			; Print environment letter (M, L, D or none) before message.
0445   0427 FE 00       			CP	0
0446   0429 28 04       			JR	Z,NOLETTER
0447   042B 4F          			LD	C,A
0448   042C CD 0C E6    			CALL CONOUT
0449   042F 0E 7D       NOLETTER:	LD	C,PROMPT
0450   0431 CD 0C E6    			CALL CONOUT
0451   0434 C9          			RET
0452   0435             
0453   0435 FE 47       ISITHEX:	CP	'G'
0454   0437 F2 49 04    			JP	P,NOTHEX
0455   043A FE 41       			CP	'A'
0456   043C F2 4C 04    			JP	P,ISHEX
0457   043F FE 40       			CP	040H
0458   0441 F2 49 04    			JP	P,NOTHEX
0459   0444 FE 30       			CP	'0'
0460   0446 F2 4C 04    			JP	P,ISHEX
0461   0449 3E 00       NOTHEX:		LD	A,0
0462   044B C9          			RET
0463   044C 3E 01       ISHEX:		LD	A,1
0464   044E C9          			RET
0465   044F             
0466   044F             ;================================================================================================
0467   044F             ; Convert ASCII to HEX (HL --> B)
0468   044F             ;================================================================================================
0469   044F C5          HL2B:		PUSH BC
0470   0450 3E 60       			LD	A,060H
0471   0452 94          			SUB	H
0472   0453 0E 57       			LD	C,057H
0473   0455 DA 62 04    			JP	C,DISCOUNT
0474   0458 3E 40       			LD	A,040H
0475   045A 94          			SUB	H
0476   045B 0E 37       			LD	C,037H
0477   045D DA 62 04    			JP	C,DISCOUNT
0478   0460 0E 30       			LD	C,030H
0479   0462 7C          DISCOUNT:	LD	A,H
0480   0463 91          			SUB	C
0481   0464 47          CONVL:		LD	B,A
0482   0465 CB 20       			SLA	B
0483   0467 CB 20       			SLA	B
0484   0469 CB 20       			SLA	B
0485   046B CB 20       			SLA	B
0486   046D 3E 60       			LD	A,060H
0487   046F 95          			SUB	L
0488   0470 0E 57       			LD	C,057H
0489   0472 DA 7F 04    			JP	C,DISCOUNT2
0490   0475 3E 40       			LD	A,040H
0491   0477 95          			SUB	L
0492   0478 0E 37       			LD	C,037H
0493   047A DA 7F 04    			JP	C,DISCOUNT2
0494   047D 0E 30       			LD	C,030H
0495   047F 7D          DISCOUNT2:	LD	A,L
0496   0480 91          			SUB	C
0497   0481 B0          			OR	B
0498   0482 C1          			POP	BC
0499   0483 47          			LD	B,A
0500   0484 C9          			RET
0501   0485             
0502   0485             ;================================================================================================
0503   0485             ; Entry point for RUN command test.
0504   0485             ;================================================================================================
0505   0485 CD 33 E6    RUNCMDTST:	CALL PRINTSEQ
0506   0488 0D 0A       			.DB	CR,LF
0507   048A 20 2A 2A 2A 			.DB	" *** RUN COMMAND TEST EXIT POINT ***"
0507   048E 20 52 55 4E 
0507   0492 20 43 4F 4D 
0507   0496 4D 41 4E 44 
0507   049A 20 54 45 53 
0507   049E 54 20 45 58 
0507   04A2 49 54 20 50 
0507   04A6 4F 49 4E 54 
0507   04AA 20 2A 2A 2A 
0508   04AE 0D 0A 00    			.DB	CR,LF,0
0509   04B1 76          			HALT
0510   04B2             
0511   04B2             ;================================================================================================
0512   04B2 4D 45 4D 4F CMDTBL:		.DB	"MEMO",RS
0512   04B6 1E 
0513   04B7 58 4D 4F 44 			.DB	"XMODEM",RS
0513   04BB 45 4D 1E 
0514   04BE 48 45 58 32 			.DB	"HEX2COM",RS
0514   04C2 43 4F 4D 1E 
0515   04C6 4C 43 44 1E 			.DB	"LCD",RS
0516   04CA 44 49 53 4B 			.DB	"DISK",RS
0516   04CE 1E 
0517   04CF 52 55 4E 03 			.DB	"RUN",ETX
0518   04D3             
0519   04D3 C3 73 01    JMPTBL:		JP	MEMO
0520   04D6 C3 15 02    			JP	XMODEM
0521   04D9 C3 2A 02    			JP	HEX2COM
0522   04DC C3 40 02    			JP	LCD
0523   04DF C3 63 02    			JP	DISK
0524   04E2 C3 87 02    			JP	RUN
0525   04E5             			
0526   04E5 52 1E       MEMOCT:		.DB	"R",RS
0527   04E7 57 1E       			.DB	"W",RS
0528   04E9 43 1E       			.DB	"C",RS
0529   04EB 46 1E       			.DB	"F",RS
0530   04ED 56 03       			.DB	"V",ETX
0531   04EF             
0532   04EF C3 9C 01    MEMOJT:		JP	MREAD
0533   04F2 C3 AE 01    			JP	MWRITE
0534   04F5 C3 C8 01    			JP	MCOPY
0535   04F8 C3 E4 01    			JP	MFILL
0536   04FB C3 FE 01    			JP	MVERIFY
0537   04FE             			
0538   04FE 00          CMDNUM		.DB	0
0539   04FF 00 00       LBUFPTR		.DW	0
0540   0501 00          ENVIR		.DB	0			; 0=MONITOR, M=MEMO, L=LCD, D=DISK
0541   0502             
0542   0502             
0543   0502             			.END
tasm: Number of errors = 0
