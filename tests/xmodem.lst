0001   0000             ;================================================================================================
0002   0000             ; XMODEM [drive:]filename r/s - Receive or send file using xmodem protocol.
0003   0000             ;================================================================================================
0004   0000             BOOT		.EQU	0
0005   0000             BIOS		.EQU	0E600H				; BIOS entry point
0006   0000             LEAP		.EQU	3					; 3 bytes for each entry (JP aaaa)
0007   0000             BDOS		.EQU	5
0008   0000             
0009   0000             FCB			.EQU	05CH
0010   0000             FCB2		.EQU	06CH
0011   0000             DMA			.EQU	080H
0012   0000             TPA			.EQU	100H
0013   0000             
0014   0000             MAXTRY		.EQU	10
0015   0000             
0016   0000             ;================================================================================================
0017   0000             ; BIOS FUNCTIONS
0018   0000             ;================================================================================================
0019   0000             CONST:		.EQU	BIOS+(LEAP*2)		; 2 Console status (regA).
0020   0000             CONIN:		.EQU	BIOS+(LEAP*3)		; 3 Console input (regA).
0021   0000             CONOUT:		.EQU	BIOS+(LEAP*4)		; 4 Console output (regC).
0022   0000             LIST:		.EQU	BIOS+(LEAP*5)		; 3 List output (regC).
0023   0000             LISTST:		.EQU	BIOS+(LEAP*15)		; 2 List status (regA).
0024   0000             PRINTSEQ:	.EQU	BIOS+(LEAP*17)		; 4 Print sequence of chars ending with zero.
0025   0000             
0026   0000             ;================================================================================================
0027   0000             ; BDOS FUNCTIONS
0028   0000             ;================================================================================================
0029   0000             GET_IOB		.EQU	7
0030   0000             SET_IOB		.EQU	8
0031   0000             F_OPEN		.EQU	15
0032   0000             F_CLOSE		.EQU	16
0033   0000             F_DELETE	.EQU	19
0034   0000             F_READ		.EQU	20
0035   0000             F_WRITE		.EQU	21
0036   0000             F_MAKE		.EQU	22
0037   0000             F_DMA		.EQU	26
0038   0000             
0039   0000             ;================================================================================================
0040   0000             ; ASCII characters.
0041   0000             ;================================================================================================
0042   0000             SOH			.EQU	01H
0043   0000             EOT			.EQU	04H
0044   0000             ACK			.EQU	06H
0045   0000             LF			.EQU	0AH
0046   0000             CR			.EQU	0DH
0047   0000             DC1			.EQU	11H
0048   0000             NAK			.EQU	15H
0049   0000             CAN			.EQU	18H
0050   0000             
0051   0000             ;================================================================================================
0052   0000             ; PROGRAM STARTS HERE
0053   0000             ;================================================================================================
0054   0100             			.ORG	TPA
0055   0100             
0056   0100 3A 5D 00    START:		LD	A,(FCB+1)			; Check if we have filename.
0057   0103 FE 20       			CP	' '
0058   0105 20 1C       			JR	NZ,FNAMEOK
0059   0107 CD 33 E6    			CALL PRINTSEQ
0060   010A 0D 0A 4D 69 			.DB	CR,LF,"Missing filename.",CR,LF,0
0060   010E 73 73 69 6E 
0060   0112 67 20 66 69 
0060   0116 6C 65 6E 61 
0060   011A 6D 65 2E 0D 
0060   011E 0A 00 
0061   0120 C3 00 00    			JP	BOOT
0062   0123             
0063   0123 0E 07       FNAMEOK:	LD	C,GET_IOB
0064   0125 CD 05 00    			CALL BDOS
0065   0128 F6 C0       			OR	0C0H
0066   012A 5F          			LD	E,A					; Set LCD as LIST device.
0067   012B 0E 08       			LD	C,SET_IOB
0068   012D CD 05 00    			CALL BDOS
0069   0130 0E 11       			LD	C,DC1
0070   0132 CD 0F E6    			CALL LIST				; Init LCD
0071   0135 3E 00       			LD	A,0
0072   0137 32 6B 03    			LD	(RETRY),A			; Reset retry counter.
0073   013A 3A 6D 00    			LD	A,(FCB2+1)			; Check if it's a send or receive operation.		
0074   013D FE 53       			CP	'S'
0075   013F CA 3A 02    			JP	Z,SENDOP
0076   0142 FE 73       			CP	's'
0077   0144 CA 3A 02    			JP	Z,SENDOP
0078   0147             						
0079   0147             ;================================================================================================
0080   0147             ; RECEIVE FILE OPERATION
0081   0147             ;================================================================================================
0082   0147 0E 13       RECOP:		LD	C,F_DELETE			; Delete file.
0083   0149 11 5C 00    			LD	DE,FCB
0084   014C CD 05 00    			CALL BDOS
0085   014F 0E 16       			LD	C,F_MAKE			; Create file.
0086   0151 11 5C 00    			LD	DE,FCB
0087   0154 CD 05 00    			CALL BDOS
0088   0157 FE 00       			CP	0					; Got error?
0089   0159 20 06       			JR	NZ,ALIVE
0090   015B 11 28 03    			LD	DE,MSGME
0091   015E C3 2F 02    			JP	LEXIT
0092   0161             			
0093   0161 CD 6E 02    ALIVE:		CALL SENDNAK
0094   0164 06 05       GET1ST:		LD	B,5
0095   0166 CD D2 02    			CALL TOCONIN			; 5s timeout
0096   0169 38 0D       			JR	C,REPEAT			; Timed out?
0097   016B FE 04       			CP	EOT
0098   016D 28 1A       			JR	Z,GOTEOT			; EOT?
0099   016F FE 18       			CP	CAN
0100   0171 CA 00 00    			JP	Z,BOOT				; CAN?
0101   0174 FE 01       			CP	SOH
0102   0176 28 32       			JR	Z,GOTSOH			; SOH?
0103   0178 3A 6B 03    REPEAT:		LD	A,(RETRY)
0104   017B 3C          			INC	A
0105   017C 32 6B 03    			LD	(RETRY),A
0106   017F FE 0A       			CP	(MAXTRY)
0107   0181 20 DE       			JR	NZ,ALIVE			; Try again?
0108   0183 CD 74 02    OUT3:		CALL SENDCAN
0109   0186 C3 00 00    			JP	BOOT
0110   0189             			
0111   0189 CD 6E 02    GOTEOT:		CALL SENDNAK
0112   018C 06 01       			LD	B,1
0113   018E CD D2 02    			CALL TOCONIN
0114   0191 CD 68 02    			CALL SENDACK
0115   0194 0E 10       			LD	C,F_CLOSE			; Create file.
0116   0196 11 5C 00    			LD	DE,FCB
0117   0199 CD 05 00    			CALL BDOS
0118   019C FE FF       			CP	0FFH				; Did we get an error while closing the file?
0119   019E C2 00 00    			JP	NZ,BOOT
0120   01A1 11 35 03    			LD	DE,MSGCE
0121   01A4 CD C7 02    			CALL LISTSEQ
0122   01A7 C3 00 00    			JP	BOOT
0123   01AA             
0124   01AA 3E 00       GOTSOH:		LD	A,0
0125   01AC 32 6C 03    			LD	(CHKSUM),A			; Reset checksum
0126   01AF 21 80 00    			LD	HL,DMA				; Reset byte counter
0127   01B2 06 01       			LD	B,1
0128   01B4 CD D2 02    			CALL TOCONIN			; Get incoming block number
0129   01B7 38 1F       			JR	C,OUT2				; Timed out?
0130   01B9 4F          			LD	C,A					; Save incoming block number
0131   01BA 06 01       			LD	B,1
0132   01BC CD D2 02    			CALL TOCONIN			; Get complement of incoming block number
0133   01BF 38 17       			JR	C,OUT2				; Timed out?
0134   01C1 2F          			CPL
0135   01C2 B9          			CP	C
0136   01C3 20 13       			JR	NZ,OUT2				; block = //block?
0137   01C5 3A 6D 03    			LD	A,(BLOCK)
0138   01C8 B9          			CP	C					; Is block number what we expected?
0139   01C9 28 16       			JR	Z,RECPACK
0140   01CB 3D          			DEC	A
0141   01CC B9          			CP	C					; block number is the anterior? Probably sender missed our ACK.
0142   01CD 20 09       			JR	NZ,OUT2
0143   01CF CD F5 02    ANTBLK:		CALL PURGE				; Purge input buffer before sending ACK
0144   01D2 CD 68 02    			CALL SENDACK
0145   01D5 C3 64 01    			JP	GET1ST
0146   01D8             
0147   01D8 CD F5 02    OUT2:		CALL PURGE
0148   01DB CD 74 02    			CALL SENDCAN
0149   01DE C3 00 00    			JP	BOOT
0150   01E1             
0151   01E1 06 01       RECPACK:	LD	B,1					; Start receiving data packet (128 bytes)
0152   01E3 CD D2 02    			CALL TOCONIN
0153   01E6 38 F0       			JR	C,OUT2				; Timed out?
0154   01E8 77          			LD	(HL),A				; Put byte in buffer
0155   01E9 23          			INC	HL					; Inc buffer pointer
0156   01EA 4F          			LD	C,A
0157   01EB 3A 6C 03    			LD	A,(CHKSUM)
0158   01EE 81          			ADD	A,C
0159   01EF 32 6C 03    			LD	(CHKSUM),A			; Update checksum
0160   01F2 01 00 01    			LD	BC,DMA+128
0161   01F5 37          			SCF
0162   01F6 3F          			CCF
0163   01F7 E5          			PUSH HL					; Save pointer/couter before checkpoint
0164   01F8 ED 42       			SBC	HL,BC				; do the math
0165   01FA E1          			POP	HL					; Recover pointer/counter
0166   01FB 20 E4       			JR	NZ,RECPACK
0167   01FD 06 01       			LD	B,1
0168   01FF CD D2 02    			CALL TOCONIN			; Get checksum
0169   0202 38 D4       			JR	C,OUT2				; Timed out?
0170   0204 4F          			LD	C,A
0171   0205 3A 6C 03    			LD	A,(CHKSUM)
0172   0208 B9          			CP	C
0173   0209 C2 78 01    			JP	NZ,REPEAT			; Checksum OK?
0174   020C 3E 00       			LD	A,0
0175   020E 32 6B 03    			LD	(RETRY),A			; Reset retry counter
0176   0211 3A 6D 03    			LD	A,(BLOCK)
0177   0214 3C          			INC	A
0178   0215 32 6D 03    			LD	(BLOCK),A			; Increment block counter
0179   0218 CD 7A 02    			CALL SAVEBLK			; Save block
0180   021B FE 00       			CP	0
0181   021D 20 0D       			JR	NZ,BWERR			; Oops, we got a block write error
0182   021F CD A1 02    			CALL VERBLK				; Verify block
0183   0222 FE 00       			CP	0
0184   0224 20 0F       			JR	NZ,BVERR			; Oops, we got a block verify error
0185   0226 CD 68 02    			CALL SENDACK
0186   0229 C3 64 01    			JP	GET1ST
0187   022C             
0188   022C 11 43 03    BWERR:		LD	DE,MSGWE
0189   022F CD C7 02    LEXIT:		CALL LISTSEQ
0190   0232 C3 83 01    			JP	OUT3
0191   0235             
0192   0235 11 51 03    BVERR:		LD	DE,MSGVE
0193   0238 18 F5       			JR	LEXIT
0194   023A             
0195   023A             ;================================================================================================
0196   023A             ; SEND FILE OPERATION
0197   023A             ;================================================================================================
0198   023A CD 33 E6    SENDOP:		CALL PRINTSEQ
0199   023D 0D 0A 53 65 			.DB	CR,LF,"Send operation not implemented yet.",CR,LF,0
0199   0241 6E 64 20 6F 
0199   0245 70 65 72 61 
0199   0249 74 69 6F 6E 
0199   024D 20 6E 6F 74 
0199   0251 20 69 6D 70 
0199   0255 6C 65 6D 65 
0199   0259 6E 74 65 64 
0199   025D 20 79 65 74 
0199   0261 2E 0D 0A 00 
0200   0265 C3 00 00    			JP	BOOT
0201   0268             
0202   0268             ;================================================================================================
0203   0268             ; SEND ACK TO CONSOLE
0204   0268             ;================================================================================================
0205   0268 0E 06       SENDACK:	LD C,ACK
0206   026A CD 0C E6    			CALL CONOUT
0207   026D C9          			RET
0208   026E             
0209   026E             ;================================================================================================
0210   026E             ; SEND NAK TO CONSOLE
0211   026E             ;================================================================================================
0212   026E 0E 15       SENDNAK:	LD C,NAK
0213   0270 CD 0C E6    			CALL CONOUT
0214   0273 C9          			RET
0215   0274             
0216   0274             ;================================================================================================
0217   0274             ; SEND CAN TO CONSOLE
0218   0274             ;================================================================================================
0219   0274 0E 18       SENDCAN:	LD C,CAN
0220   0276 CD 0C E6    			CALL CONOUT
0221   0279 C9          			RET
0222   027A             
0223   027A             ;================================================================================================
0224   027A             ; SAVE BLOCK ON DISK (WRITE TO FILE)
0225   027A             ;================================================================================================
0226   027A 3A 6D 03    SAVEBLK:	LD	A,(BLOCK)
0227   027D 3D          			DEC	A
0228   027E 47          			LD	B,A
0229   027F CD FD 02    			CALL B2HL				; Convert block number to ASCII
0230   0282 7C          			LD	A,H
0231   0283 32 68 03    			LD	(MSGBNUM),A
0232   0286 7D          			LD	A,L
0233   0287 32 69 03    			LD	(MSGBNUM+1),A
0234   028A 11 60 03    			LD	DE,MSGBLK
0235   028D CD C7 02    			CALL LISTSEQ			; Send block number to LIST (LCD).
0236   0290 0E 1A       			LD	C,F_DMA
0237   0292 11 80 00    			LD	DE,DMA
0238   0295 CD 05 00    			CALL BDOS				; Set DMA before file write.
0239   0298 0E 15       			LD	C,F_WRITE
0240   029A 11 5C 00    			LD	DE,FCB
0241   029D CD 05 00    			CALL BDOS				; Write block to file.
0242   02A0 C9          			RET
0243   02A1             			
0244   02A1             ;================================================================================================
0245   02A1             ; VERIFY BLOCK ON DISK (COMPARE WRITTEN BLOCK TO SOURCE ON RAM)
0246   02A1             ;================================================================================================
0247   02A1 0E 1A       VERBLK:		LD	C,F_DMA
0248   02A3 11 6E 03    			LD	DE,DMA4VER
0249   02A6 CD 05 00    			CALL BDOS				; Set DMA before file read.
0250   02A9 0E 14       			LD	C,F_READ
0251   02AB 11 5C 00    			LD	DE,FCB
0252   02AE CD 05 00    			CALL BDOS				; Read block from file.
0253   02B1 06 00       			LD	B,0
0254   02B3 21 80 00    			LD	HL,DMA
0255   02B6 11 6E 03    			LD	DE,DMA4VER
0256   02B9 1A          VERNEXT:	LD	A,(DE)
0257   02BA BE          			CP	(HL)				; Compare blocks.
0258   02BB 20 07       			JR	NZ,VERR
0259   02BD 13          			INC	DE
0260   02BE 23          			INC HL
0261   02BF 10 F8       			DJNZ VERNEXT
0262   02C1 3E 00       			LD	A,0
0263   02C3 C9          			RET
0264   02C4 3E FF       VERR:		LD  A,0FFH
0265   02C6 C9          			RET
0266   02C7             
0267   02C7             ;==================================================================================
0268   02C7             ; List a string pointed by DE and ending with zero.
0269   02C7             ;==================================================================================
0270   02C7 1A          LISTSEQ:	LD	A,(DE)
0271   02C8 FE 00       			CP	0
0272   02CA C8          			RET	Z
0273   02CB 4F          			LD	C,A
0274   02CC CD 0F E6    			CALL LIST
0275   02CF 13          			INC DE
0276   02D0 18 F5       			JR	LISTSEQ
0277   02D2             			
0278   02D2             ;==================================================================================
0279   02D2             ; Timed Out Console Input - X seconds, with X passed on reg B
0280   02D2             ; Incoming byte, if any, returns in A
0281   02D2             ; Carry flag set if timed out.
0282   02D2             ;==================================================================================
0283   02D2 C5          TOCONIN:	PUSH	BC
0284   02D3 E5          			PUSH	HL
0285   02D4             			
0286   02D4 21 AD 02    LOOP0:		LD	HL,685				;2.5					\
0287   02D7 0E 23       LOOP1:		LD	C,35				;1.75	\				|
0288   02D9 CD 06 E6    LOOP2:		CALL CONST				;36.5	|t=41.5C+0.5	| 
0289   02DC 3C          			INC	A					;1		|				|
0290   02DD 28 0E       			JR	Z,BWAITING			;3/1.75	|				| t=HL(41.5C+6.5)+1.25
0291   02DF 79          			LD	A,C					;1		|				|
0292   02E0 0D          			DEC	C					;1		|				|
0293   02E1 20 F6       			JR	NZ,LOOP2			;3/1.75	/				| with HL=685 and c=35,
0294   02E3 2B          			DEC	HL					;1						|  t=0.9994sec (WOW!!!)
0295   02E4 7C          			LD	A,H					;1						|
0296   02E5 B5          			OR	L					;1						|
0297   02E6 20 EF       			JR	NZ,LOOP1			;3/1.75					/
0298   02E8 10 EA       			DJNZ	LOOP0			;3.25/2
0299   02EA 37          			SCF
0300   02EB 18 05       			JR	TOUT
0301   02ED CD 09 E6    BWAITING:	CALL CONIN
0302   02F0 37          			SCF						; Reset carry flag
0303   02F1 3F          			CCF
0304   02F2 E1          TOUT:		POP	HL
0305   02F3 C1          			POP	BC
0306   02F4 C9          			RET
0307   02F5             
0308   02F5             ;==================================================================================
0309   02F5             ; Purge console input.
0310   02F5             ;==================================================================================
0311   02F5 06 03       PURGE:		LD	B,3
0312   02F7 CD D2 02    			CALL TOCONIN
0313   02FA 30 F9       			JR	NC,PURGE
0314   02FC C9          			RET
0315   02FD             
0316   02FD             ;================================================================================================
0317   02FD             ; Convert HEX to ASCII (B --> HL)
0318   02FD             ;================================================================================================
0319   02FD C5          B2HL:		PUSH	BC
0320   02FE 78          			LD	A,B
0321   02FF E6 0F       			AND	0FH
0322   0301 6F          			LD	L,A
0323   0302 D6 0A       			SUB	0AH
0324   0304 0E 30       			LD	C,030H
0325   0306 DA 0B 03    			JP	C,COMPENSE
0326   0309 0E 37       			LD	C,037H
0327   030B 7D          COMPENSE:	LD	A,L
0328   030C 81          			ADD	A,C
0329   030D 6F          			LD	L,A
0330   030E 78          			LD	A,B
0331   030F E6 F0       			AND	0F0H
0332   0311 CB 3F       			SRL	A
0333   0313 CB 3F       			SRL	A
0334   0315 CB 3F       			SRL	A
0335   0317 CB 3F       			SRL	A
0336   0319 67          			LD	H,A
0337   031A D6 0A       			SUB	0AH
0338   031C 0E 30       			LD	C,030H
0339   031E DA 23 03    			JP	C,COMPENSE2
0340   0321 0E 37       			LD	C,037H
0341   0323 7C          COMPENSE2:	LD	A,H
0342   0324 81          			ADD	A,C
0343   0325 67          			LD	H,A
0344   0326 C1          			POP	BC
0345   0327 C9          			RET
0346   0328             
0347   0328             ;==================================================================================
0348   0328             ; MESSAGE STRINGS
0349   0328             ;==================================================================================
0350   0328 0D 0A 4D 41 MSGME		.DB	CR,LF,"MAKE ERROR",0
0350   032C 4B 45 20 45 
0350   0330 52 52 4F 52 
0350   0334 00 
0351   0335 0D 0A 43 4C MSGCE		.DB	CR,LF,"CLOSE ERROR",0
0351   0339 4F 53 45 20 
0351   033D 45 52 52 4F 
0351   0341 52 00 
0352   0343 0D 0A 57 52 MSGWE		.DB	CR,LF,"WRITE ERROR",0
0352   0347 49 54 45 20 
0352   034B 45 52 52 4F 
0352   034F 52 00 
0353   0351 0D 0A 56 45 MSGVE		.DB	CR,LF,"VERIFY ERROR",0
0353   0355 52 49 46 59 
0353   0359 20 45 52 52 
0353   035D 4F 52 00 
0354   0360 0D 0A 42 4C MSGBLK		.DB CR,LF,"BLOCK "
0354   0364 4F 43 4B 20 
0355   0368 00 00 00    MSGBNUM		.DB	0,0,0
0356   036B             
0357   036B             ;==================================================================================
0358   036B             ; VARIABLES AND BUFFERS
0359   036B             ;==================================================================================
0360   036B 00          RETRY		.DB	0
0361   036C 00          CHKSUM		.DB	0
0362   036D 00          BLOCK		.DB	0
0363   036E             DMA4VER		.DS	128
0364   03EE             
0365   03EE             			
0366   03EE             			.END
tasm: Number of errors = 0
