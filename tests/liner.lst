0001   0000             ;==================================================================================
0002   0000             ; LINER.ASM = MONITOR 2.0 - USE WITH VT100 TERMINAL
0003   0000             ; (Should behave like CCP on CP/M)
0004   0000             ;
0005   0000             ; Backspace = delete last character
0006   0000             ;        ^X = delete all the line
0007   0000             ;
0008   0000             ;==================================================================================
0009   0000             TPA			.EQU	0100H		; Transient Programs Area
0010   0000             MONITOR		.EQU	0D000H		; Monitor entry point
0011   0000             BIOS		.EQU	0E600H		; BIOS entry point
0012   0000             DMA			.EQU	0080H		; Buffer used by Monitor
0013   0000             
0014   0000             ;================================================================================================
0015   0000             ; BIOS functions.
0016   0000             ;================================================================================================
0017   0000             LEAP		.EQU	3					; 3 bytes for each entry (JP aaaa)
0018   0000             
0019   0000             BOOT:		.EQU	BIOS				;  0 Initialize.
0020   0000             WBOOT:		.EQU	BIOS+(LEAP*1)		;  1 Warm boot.
0021   0000             CONST:		.EQU	BIOS+(LEAP*2)		;  2 Console status.
0022   0000             CONIN:		.EQU	BIOS+(LEAP*3)		;  3 Console input.
0023   0000             CONOUT:		.EQU	BIOS+(LEAP*4)		;  4 Console OUTput.
0024   0000             LIST:		.EQU	BIOS+(LEAP*5)		;  5 List OUTput.
0025   0000             PUNCH:		.EQU	BIOS+(LEAP*6)		;  6 Punch OUTput.
0026   0000             READER:		.EQU	BIOS+(LEAP*7)		;  7 Reader input.
0027   0000             HOME:		.EQU	BIOS+(LEAP*8)		;  8 Home disk.
0028   0000             SELDSK:		.EQU	BIOS+(LEAP*9)		;  9 Select disk.
0029   0000             SETTRK:		.EQU	BIOS+(LEAP*10)		; 10 Select track.
0030   0000             SETSEC:		.EQU	BIOS+(LEAP*11)		; 11 Select sector.
0031   0000             SETDMA:		.EQU	BIOS+(LEAP*12)		; 12 Set DMA ADDress.
0032   0000             READ:		.EQU	BIOS+(LEAP*13)		; 13 Read 128 bytes.
0033   0000             WRITE:		.EQU	BIOS+(LEAP*14)		; 14 Write 128 bytes.
0034   0000             LISTST:		.EQU	BIOS+(LEAP*15)		; 15 List status.
0035   0000             SECTRAN:	.EQU	BIOS+(LEAP*16)		; 16 Sector translate.
0036   0000             PRINTSEQ:	.EQU	BIOS+(LEAP*17)		; not a BIOS function
0037   0000             
0038   0000             ;================================================================================================
0039   0000             ; ASCII characters.
0040   0000             ;================================================================================================
0041   0000             NUL			.EQU	00H
0042   0000             SOH			.EQU	01H
0043   0000             STX			.EQU	02H
0044   0000             ETX			.EQU	03H
0045   0000             EOT			.EQU	04H
0046   0000             ENQ			.EQU	05H
0047   0000             QCK			.EQU	06H
0048   0000             BEL			.EQU	07H
0049   0000             BS			.EQU	08H			; ^H
0050   0000             HT			.EQU	09H
0051   0000             LF			.EQU	0AH
0052   0000             VT			.EQU	0BH
0053   0000             FF			.EQU	0CH
0054   0000             CR			.EQU	0DH
0055   0000             SO			.EQU	0EH
0056   0000             SI			.EQU	0FH
0057   0000             DLE			.EQU	10H
0058   0000             DC1			.EQU	11H
0059   0000             DC2			.EQU	12H
0060   0000             DC3			.EQU	13H
0061   0000             DC4			.EQU	14H
0062   0000             NAK			.EQU	15H			; ^U
0063   0000             SYN			.EQU	16H
0064   0000             ETB			.EQU	17H
0065   0000             CAN			.EQU	18H			; ^X
0066   0000             EM			.EQU	19H
0067   0000             SUB			.EQU	1AH
0068   0000             ESC			.EQU	1BH
0069   0000             FS			.EQU	1CH
0070   0000             GS			.EQU	1DH
0071   0000             RS			.EQU	1EH
0072   0000             US			.EQU	1FH
0073   0000             
0074   0000             ;================================================================================================
0075   0000             ; Some constants
0076   0000             ;================================================================================================
0077   0000             MAXLBUF		.EQU	DMA+80
0078   0000             PROMPT		.EQU	'}'
0079   0000             
0080   0000             ;================================================================================================
0081   0000             ; MAIN PROGRAM STARTS HERE
0082   0000             ;================================================================================================
0083   0100             			.ORG TPA
0084   0100             
0085   0100 CD 33 E6    			CALL PRINTSEQ
0086   0103 5A 38 30 20 			.DB	"Z80 Modular Computer BIOS 1.0 by Kaltchuk - 2020",CR,LF
0086   0107 4D 6F 64 75 
0086   010B 6C 61 72 20 
0086   010F 43 6F 6D 70 
0086   0113 75 74 65 72 
0086   0117 20 42 49 4F 
0086   011B 53 20 31 2E 
0086   011F 30 20 62 79 
0086   0123 20 4B 61 6C 
0086   0127 74 63 68 75 
0086   012B 6B 20 2D 20 
0086   012F 32 30 32 30 
0086   0133 0D 0A 
0087   0135 4D 6F 6E 69 			.DB	"Monitor 2.0 - 2021",CR,LF,0
0087   0139 74 6F 72 20 
0087   013D 32 2E 30 20 
0087   0141 2D 20 32 30 
0087   0145 32 31 0D 0A 
0087   0149 00 
0088   014A 3E 00       CYCLE:		LD	A,0
0089   014C 32 A7 06    			LD	(ENVIR),A
0090   014F CD 92 05    			CALL PRINTENV
0091   0152 CD 19 04    			CALL LINER					; Call the line manager
0092   0155 FE FF       			CP	0FFH
0093   0157 CA 03 E6    			JP	Z,WBOOT					; User typed Ctrl-C or Ctrl-Z... Abort, abort!
0094   015A 3A 80 00    			LD	A,(DMA)
0095   015D FE 00       			CP	0
0096   015F 28 E9       			JR	Z,CYCLE					; User ENTERed an empty line. No need to parse.
0097   0161 21 4B 06    			LD	HL,CMDTBL
0098   0164 CD C2 04    			CALL PARSER					; Find command comparing buffer with Command Table.
0099   0167 3C          			INC	A
0100   0168 28 01       			JR	Z,UNK					; No match found in command table.
0101   016A E9          			JP	(HL)					; Jump to Command Routine
0102   016B CD FE 03    UNK:		CALL UNKNOWN
0103   016E 18 DA       			JR	CYCLE
0104   0170             			
0105   0170             ;================================================================================================
0106   0170             ; Memory Operations
0107   0170             ;
0108   0170             ; Options:	R aaaa					Read 1 page starting at aaaa. <ENTER>=next page, <ESC>=quit.
0109   0170             ;			W aaaa,c1 c2 ... cN		Write at aaaa the sequence of characters.
0110   0170             ;			C aaaa-bbbb,cccc		Copy [aaaa ~ bbbb] to cccc.
0111   0170             ;			F aaaa-bbbb,cc			Fill [aaaa ~ bbbb] with cc.
0112   0170             ;			V aaaa-bbbb				Verify area [aaaa ~ bbbb].
0113   0170             ;			Ctrl-C					Return to Monitor.
0114   0170             ;================================================================================================
0115   0170 3E 4D       MEMO:		LD	A,'M'
0116   0172 32 A7 06    			LD	(ENVIR),A				; Set environment variable.
0117   0175 CD 92 05    			CALL PRINTENV
0118   0178 CD 19 04    			CALL LINER					; Call the line manager.
0119   017B FE FF       			CP	0FFH
0120   017D CA 4A 01    			JP	Z,CYCLE					; User typed Ctrl-C or Ctrl-Z, return to Monitor.
0121   0180 3A 80 00    			LD	A,(DMA)
0122   0183 FE 00       			CP	0
0123   0185 28 E9       			JR	Z,MEMO					; User ENTERed an empty line. No need to parse.
0124   0187 21 86 06    			LD	HL,MEMOCT				; Set Memory command table.
0125   018A CD C2 04    			CALL PARSER					; Find command comparing buffer with Command Table.
0126   018D 3C          			INC	A
0127   018E 28 01       			JR	Z,MUNKNOWN				; No match found in command table.
0128   0190 E9          			JP	(HL)					; Jump to Command Routine
0129   0191 CD FE 03    MUNKNOWN:	CALL UNKNOWN
0130   0194 18 DA       			JR	MEMO
0131   0196             			
0132   0196             ;================================================================================================
0133   0196             ; Quit memory operations
0134   0196             ;================================================================================================
0135   0196 C3 4A 01    MQUIT:		JP	CYCLE					; Quit memory ops, return to monitor.
0136   0199             
0137   0199             ;================================================================================================
0138   0199             ; Read memory operations
0139   0199             ;================================================================================================
0140   0199 11 81 00    MREAD:		LD	DE,DMA+1
0141   019C CD 20 05    			CALL GETWORD		
0142   019F FE 01       			CP	1				; Is the argument OK?
0143   01A1 C2 70 01    			JP	NZ,MEMO
0144   01A4 C5          			PUSH BC
0145   01A5 D1          			POP	DE				; DE will be the address holder
0146   01A6 7B          			LD	A,E
0147   01A7 E6 F0       			AND	0F0H
0148   01A9 5F          			LD	E,A				; trim addr (xxx0)
0149   01AA CD 30 02    NEWHDR:		CALL PRINTHDR		; Print the header
0150   01AD 3E 10       			LD	A,16
0151   01AF 32 A8 06    			LD	(LINNUM),A
0152   01B2 CD 72 04    NEWLINE:	CALL CRLF
0153   01B5 CD 92 05    			CALL PRINTENV
0154   01B8 42          			LD	B,D				; Print the address
0155   01B9 CD F3 05    			CALL B2HL
0156   01BC 4C          			LD	C,H
0157   01BD CD 0C E6    			CALL CONOUT
0158   01C0 4D          			LD	C,L
0159   01C1 CD 0C E6    			CALL CONOUT
0160   01C4 43          			LD	B,E
0161   01C5 CD F3 05    			CALL B2HL
0162   01C8 4C          			LD	C,H
0163   01C9 CD 0C E6    			CALL CONOUT
0164   01CC 4D          			LD	C,L
0165   01CD CD 0C E6    			CALL CONOUT
0166   01D0 0E 3A       			LD	C,':'
0167   01D2 CD 0C E6    			CALL CONOUT
0168   01D5 0E 20       			LD	C,' '
0169   01D7 CD 0C E6    			CALL CONOUT
0170   01DA 06 10       			LD	B,16
0171   01DC C5          NEWCOL:		PUSH BC
0172   01DD 1A          			LD	A,(DE)			; Start printing the memory content
0173   01DE 13          			INC	DE
0174   01DF 47          			LD	B,A
0175   01E0 CD F3 05    			CALL B2HL
0176   01E3 4C          			LD	C,H
0177   01E4 CD 0C E6    			CALL CONOUT
0178   01E7 4D          			LD	C,L
0179   01E8 CD 0C E6    			CALL CONOUT
0180   01EB 0E 20       			LD	C,' '
0181   01ED CD 0C E6    			CALL CONOUT
0182   01F0 C1          			POP	BC
0183   01F1 10 E9       			DJNZ NEWCOL
0184   01F3 0E 20       			LD	C,' '
0185   01F5 CD 0C E6    			CALL CONOUT
0186   01F8 21 F0 FF    			LD	HL,0FFF0H		; This is -10h
0187   01FB 19          			ADD	HL,DE			; Go back to beginning of line
0188   01FC E5          			PUSH HL
0189   01FD D1          			POP	DE
0190   01FE 06 10       			LD	B,16
0191   0200 C5          NEWCOL2:	PUSH BC				; Start printing the printables
0192   0201 0E 2E       			LD	C,'.'
0193   0203 1A          			LD	A,(DE)
0194   0204 FE 20       			CP	20H
0195   0206 FA 0F 02    			JP	M,NOTPRTBL
0196   0209 FE 7F       			CP	7FH
0197   020B F2 0F 02    			JP	P,NOTPRTBL
0198   020E 4F          			LD	C,A
0199   020F CD 0C E6    NOTPRTBL:	CALL CONOUT
0200   0212 13          			INC	DE
0201   0213 C1          			POP	BC
0202   0214 10 EA       			DJNZ NEWCOL2
0203   0216 3A A8 06    			LD	A,(LINNUM)
0204   0219 3D          			DEC	A
0205   021A 32 A8 06    			LD	(LINNUM),A
0206   021D 20 93       			JR	NZ,NEWLINE
0207   021F CD CF 02    			CALL PRINTFTR		; Print footer message
0208   0222 CD 09 E6    			CALL CONIN			; Wait for user's decision
0209   0225 FE 0D       			CP	CR
0210   0227 28 81       TRYAGAIN:	JR	Z,NEWHDR
0211   0229 FE 1B       			CP	ESC
0212   022B CA 70 01    			JP	Z,MEMO
0213   022E 18 F7       			JR	TRYAGAIN
0214   0230             
0215   0230 CD 92 05    PRINTHDR:	CALL PRINTENV
0216   0233 CD 33 E6    			CALL PRINTSEQ
0217   0236 41 44 44 52 			.DB "ADDR: 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  0123456789ABCDEF",CR,LF,0
0217   023A 3A 20 30 30 
0217   023E 20 30 31 20 
0217   0242 30 32 20 30 
0217   0246 33 20 30 34 
0217   024A 20 30 35 20 
0217   024E 30 36 20 30 
0217   0252 37 20 30 38 
0217   0256 20 30 39 20 
0217   025A 30 41 20 30 
0217   025E 42 20 30 43 
0217   0262 20 30 44 20 
0217   0266 30 45 20 30 
0217   026A 46 20 20 30 
0217   026E 31 32 33 34 
0217   0272 35 36 37 38 
0217   0276 39 41 42 43 
0217   027A 44 45 46 0D 
0217   027E 0A 00 
0218   0280 CD 92 05    			CALL PRINTENV
0219   0283 CD 33 E6    			CALL PRINTSEQ
0220   0286 2D 2D 2D 2D 			.DB "----- -----------------------------------------------  ----------------",0
0220   028A 2D 20 2D 2D 
0220   028E 2D 2D 2D 2D 
0220   0292 2D 2D 2D 2D 
0220   0296 2D 2D 2D 2D 
0220   029A 2D 2D 2D 2D 
0220   029E 2D 2D 2D 2D 
0220   02A2 2D 2D 2D 2D 
0220   02A6 2D 2D 2D 2D 
0220   02AA 2D 2D 2D 2D 
0220   02AE 2D 2D 2D 2D 
0220   02B2 2D 2D 2D 2D 
0220   02B6 2D 2D 2D 2D 
0220   02BA 2D 20 20 2D 
0220   02BE 2D 2D 2D 2D 
0220   02C2 2D 2D 2D 2D 
0220   02C6 2D 2D 2D 2D 
0220   02CA 2D 2D 2D 00 
0221   02CE C9          			RET
0222   02CF             
0223   02CF CD 72 04    PRINTFTR:	CALL CRLF
0224   02D2 CD 92 05    			CALL PRINTENV
0225   02D5 CD 72 04    			CALL CRLF
0226   02D8 CD 92 05    			CALL PRINTENV
0227   02DB CD 33 E6    			CALL PRINTSEQ
0228   02DE 20 20 20 20 			.DB "                   <ENTER> = next page, <ESC> = quit.",CR,LF,0
0228   02E2 20 20 20 20 
0228   02E6 20 20 20 20 
0228   02EA 20 20 20 20 
0228   02EE 20 20 20 3C 
0228   02F2 45 4E 54 45 
0228   02F6 52 3E 20 3D 
0228   02FA 20 6E 65 78 
0228   02FE 74 20 70 61 
0228   0302 67 65 2C 20 
0228   0306 3C 45 53 43 
0228   030A 3E 20 3D 20 
0228   030E 71 75 69 74 
0228   0312 2E 0D 0A 00 
0229   0316 C9          			RET
0230   0317             
0231   0317             ;================================================================================================
0232   0317             ; Write memory operations
0233   0317             ;================================================================================================
0234   0317 CD 92 05    MWRITE:		CALL PRINTENV
0235   031A CD 33 E6    			CALL PRINTSEQ
0236   031D 57 20 61 61 			.DB	"W aaaa,c1...cN",CR,LF,0
0236   0321 61 61 2C 63 
0236   0325 31 2E 2E 2E 
0236   0329 63 4E 0D 0A 
0236   032D 00 
0237   032E C3 70 01    			JP	MEMO
0238   0331             
0239   0331             ;================================================================================================
0240   0331             ; Copy memory operations
0241   0331             ;================================================================================================
0242   0331 CD 92 05    MCOPY:		CALL PRINTENV
0243   0334 CD 33 E6    			CALL PRINTSEQ
0244   0337 43 20 61 61 			.DB	"C aaaa-bbbb,cccc",CR,LF,0
0244   033B 61 61 2D 62 
0244   033F 62 62 62 2C 
0244   0343 63 63 63 63 
0244   0347 0D 0A 00 
0245   034A C3 70 01    			JP	MEMO
0246   034D             
0247   034D             ;================================================================================================
0248   034D             ; Fill memory operations
0249   034D             ;================================================================================================
0250   034D CD 92 05    MFILL:		CALL PRINTENV
0251   0350 CD 33 E6    			CALL PRINTSEQ
0252   0353 46 20 61 61 			.DB	"F aaaa-bbbb,cc",CR,LF,0
0252   0357 61 61 2D 62 
0252   035B 62 62 62 2C 
0252   035F 63 63 0D 0A 
0252   0363 00 
0253   0364 C3 70 01    			JP	MEMO
0254   0367             
0255   0367             ;================================================================================================
0256   0367             ; Verify memory operations
0257   0367             ;================================================================================================
0258   0367 CD 92 05    MVERIFY:	CALL PRINTENV
0259   036A CD 33 E6    			CALL PRINTSEQ
0260   036D 56 20 61 61 			.DB	"V aaaa-bbbb",CR,LF,0
0260   0371 61 61 2D 62 
0260   0375 62 62 62 0D 
0260   0379 0A 00 
0261   037B C3 70 01    			JP	MEMO
0262   037E             
0263   037E             ;================================================================================================
0264   037E             ; Xmodem Command
0265   037E             ;================================================================================================
0266   037E CD 33 E6    XMODEM:		CALL PRINTSEQ
0267   0381 5D 58 4D 4F 			.DB	"]XMODEM aaaa",CR,LF,0
0267   0385 44 45 4D 20 
0267   0389 61 61 61 61 
0267   038D 0D 0A 00 
0268   0390 C3 4A 01    			JP	CYCLE
0269   0393             
0270   0393             ;================================================================================================
0271   0393             ; Hexadecimal to Executable conversion command.
0272   0393             ;================================================================================================
0273   0393 CD 33 E6    HEX2COM:	CALL PRINTSEQ
0274   0396 5D 48 45 58 			.DB	"]HEX2COM aaaa",CR,LF,0
0274   039A 32 43 4F 4D 
0274   039E 20 61 61 61 
0274   03A2 61 0D 0A 00 
0275   03A6 C3 4A 01    			JP	CYCLE
0276   03A9             
0277   03A9             ;================================================================================================
0278   03A9             ; LCD Operations
0279   03A9             ;================================================================================================
0280   03A9 CD 33 E6    LCD:		CALL PRINTSEQ
0281   03AC 4C 5D 52 65 			.DB	"L]Ready for LCD Operations",CR,LF,0
0281   03B0 61 64 79 20 
0281   03B4 66 6F 72 20 
0281   03B8 4C 43 44 20 
0281   03BC 4F 70 65 72 
0281   03C0 61 74 69 6F 
0281   03C4 6E 73 0D 0A 
0281   03C8 00 
0282   03C9 C3 4A 01    			JP	CYCLE
0283   03CC             
0284   03CC             ;================================================================================================
0285   03CC             ; Disk Operations
0286   03CC             ;================================================================================================
0287   03CC CD 33 E6    DISK:		CALL PRINTSEQ
0288   03CF 44 5D 52 65 			.DB	"D]Ready for Disk Operations",CR,LF,0
0288   03D3 61 64 79 20 
0288   03D7 66 6F 72 20 
0288   03DB 44 69 73 6B 
0288   03DF 20 4F 70 65 
0288   03E3 72 61 74 69 
0288   03E7 6F 6E 73 0D 
0288   03EB 0A 00 
0289   03ED C3 4A 01    			JP	CYCLE
0290   03F0             
0291   03F0             ;================================================================================================
0292   03F0             ; Execute Command
0293   03F0             ;================================================================================================
0294   03F0 11 83 00    RUN:		LD	DE,DMA+3
0295   03F3 CD 20 05    			CALL GETWORD		
0296   03F6 FE 01       			CP	1				; Is the argument OK?
0297   03F8 C2 4A 01    			JP	NZ,CYCLE
0298   03FB C5          			PUSH BC
0299   03FC E1          			POP	HL
0300   03FD E9          			JP	(HL)			; Continue execution where user requested. His responsability!
0301   03FE             
0302   03FE             ;================================================================================================
0303   03FE             ; Unknown Command message. HL has the address of the line buffer.
0304   03FE             ;================================================================================================
0305   03FE CD 92 05    UNKNOWN:	CALL PRINTENV
0306   0401 21 80 00    			LD	HL,DMA
0307   0404 7E          UNEXT:		LD	A,(HL)
0308   0405 FE 00       			CP	0
0309   0407 28 07       			JR	Z,UEND
0310   0409 4F          			LD	C,A
0311   040A CD 0C E6    			CALL CONOUT
0312   040D 23          			INC	HL
0313   040E 18 F4       			JR	UNEXT
0314   0410 0E 3F       UEND:		LD	C,'?'
0315   0412 CD 0C E6    			CALL CONOUT
0316   0415 CD 72 04    			CALL CRLF
0317   0418 C9          			RET
0318   0419             
0319   0419             ;================================================================================================
0320   0419             ; Routine to manage line input from console. Returns A=0FFh if user typed Ctrl-Z (ETX).
0321   0419             ;================================================================================================
0322   0419 21 80 00    LINER:		LD	HL,DMA
0323   041C 22 A5 06    			LD	(LBUFPTR),HL			; Init line buffer pointer.
0324   041F CD 09 E6    WAITCHAR:	CALL CONIN					; Wait till user types something.
0325   0422 FE 03       			CP	ETX						; Is it Ctrl-C?
0326   0424 28 42       			JR	Z,GOTETX
0327   0426 FE 1A       			CP	SUB						; Is is Ctrl-Z?
0328   0428 28 3E       			JR	Z,GOTSUB
0329   042A FE 18       			CP	CAN
0330   042C 28 40       			JR	Z,GOTCAN				; Is it <CAN>? (= delete line).
0331   042E FE 0D       			CP	CR
0332   0430 28 29       			JR	Z,GOTCR					; Is it <ENTER>?
0333   0432 FE 08       			CP	BS
0334   0434 28 1E       			JR	Z,GOTBS					; Is it <BS>? (= backspace).
0335   0436 2A A5 06    			LD	HL,(LBUFPTR)			; None of the above options, so let's put it in the buffer.
0336   0439 01 D0 00    			LD	BC,MAXLBUF				; But 1st, we have to check if we still have space.
0337   043C 37          			SCF
0338   043D 3F          			CCF
0339   043E ED 42       			SBC	HL,BC
0340   0440 28 0E       			JR	Z,LBUFFULL				; Is buffer full?
0341   0442 2A A5 06    			LD	HL,(LBUFPTR)
0342   0445 77          			LD	(HL),A
0343   0446 23          			INC	HL
0344   0447 22 A5 06    			LD	(LBUFPTR),HL
0345   044A 4F          			LD	C,A
0346   044B CD 0C E6    OUTWAIT:	CALL CONOUT
0347   044E 18 CF       			JR	WAITCHAR
0348   0450             
0349   0450 0E 07       LBUFFULL:	LD	C,BEL					; Buffer is full. Just ring the bell.
0350   0452 18 F7       			JR	OUTWAIT
0351   0454             
0352   0454 16 01       GOTBS:		LD	D,1						; We got a backspace.
0353   0456 CD 7D 04    AFTGOTBS:	CALL BSPROC
0354   0459 18 C4       			JR	WAITCHAR
0355   045B             
0356   045B 2A A5 06    GOTCR:		LD	HL,(LBUFPTR)			; We got an ENTER, which means the the user
0357   045E 3E 00       			LD	A,0						; has finished typing the command line.
0358   0460 77          			LD	(HL),A
0359   0461 CD 72 04    			CALL CRLF
0360   0464 CD AB 04    			CALL UPPER					; Convert line to uppercase before parsing.
0361   0467 C9          			RET
0362   0468             GOTETX:
0363   0468 CD 72 04    GOTSUB:		CALL CRLF					; User abort request (Ctrl-C or Ctrl-Z).
0364   046B 3E 0C       			LD	A,FF
0365   046D C9          			RET
0366   046E             			
0367   046E 16 00       GOTCAN:		LD	D,0						; We got a line delete.
0368   0470 18 E4       			JR	AFTGOTBS
0369   0472             			
0370   0472 0E 0D       CRLF:		LD	C,CR
0371   0474 CD 0C E6    			CALL CONOUT
0372   0477 0E 0A       			LD	C,LF
0373   0479 CD 0C E6    			CALL CONOUT					; Output <CR><LF>.
0374   047C C9          			RET
0375   047D             
0376   047D             ;================================================================================================
0377   047D             ; Routine to do the backspace and line delete. D=1, backspace; D=0, delete line.
0378   047D             ;================================================================================================
0379   047D 2A A5 06    BSPROC:		LD	HL,(LBUFPTR)
0380   0480 01 80 00    			LD	BC,DMA
0381   0483 37          			SCF
0382   0484 3F          			CCF
0383   0485 ED 42       			SBC	HL,BC
0384   0487 28 1C       			JR	Z,LBUFEMPTY
0385   0489 2A A5 06    			LD	HL,(LBUFPTR)
0386   048C 2B          			DEC	HL
0387   048D 22 A5 06    			LD	(LBUFPTR),HL
0388   0490 0E 08       			LD	C,BS
0389   0492 CD 0C E6    			CALL CONOUT
0390   0495 0E 20       			LD	C,' '
0391   0497 CD 0C E6    			CALL CONOUT
0392   049A 0E 08       			LD	C,BS
0393   049C CD 0C E6    			CALL CONOUT
0394   049F 7A          			LD	A,D
0395   04A0 FE 01       			CP	1
0396   04A2 C8          			RET	Z
0397   04A3 18 D8       			JR	BSPROC
0398   04A5             
0399   04A5 0E 07       LBUFEMPTY:	LD	C,BEL
0400   04A7 CD 0C E6    			CALL CONOUT
0401   04AA C9          			RET
0402   04AB             			
0403   04AB             ;================================================================================================
0404   04AB             ; Routine to convert line buffer content to upper case
0405   04AB             ;================================================================================================
0406   04AB 21 7F 00    UPPER:		LD	HL,DMA-1
0407   04AE 23          NEXT2UP:	INC	HL
0408   04AF 7E          			LD	A,(HL)
0409   04B0 FE 00       			CP	0
0410   04B2 C8          			RET	Z
0411   04B3 FE 61       			CP	'a'
0412   04B5 FA AE 04    			JP	M,NEXT2UP
0413   04B8 FE 7B       			CP	'{'
0414   04BA F2 AE 04    			JP	P,NEXT2UP
0415   04BD D6 20       			SUB	20H
0416   04BF 77          			LD	(HL),A
0417   04C0 18 EC       			JR	NEXT2UP
0418   04C2             			
0419   04C2             ;================================================================================================
0420   04C2             ; Routine to parse command. HL=cmd_table_pointer.
0421   04C2             ; regA=cmd_num or FFh if no match. HL=jump_address or 0000 if no match.
0422   04C2             ;================================================================================================
0423   04C2 C5          PARSER:		PUSH BC
0424   04C3 D5          			PUSH DE
0425   04C4 11 80 00    			LD	DE,DMA
0426   04C7 3E 00       			LD	A,0
0427   04C9 32 A4 06    			LD	(CMDNUM),A		; Init command number.
0428   04CC 1A          NEXT2PARS:	LD	A,(DE)
0429   04CD BE          			CP	(HL)
0430   04CE 20 04       			JR	NZ,NOTEQU
0431   04D0 23          			INC	HL
0432   04D1 13          			INC	DE
0433   04D2 18 F8       			JR	NEXT2PARS
0434   04D4 7E          NOTEQU:		LD	A,(HL)
0435   04D5 FE 1E       			CP	RS
0436   04D7 28 04       			JR	Z,ISRS
0437   04D9 FE 03       			CP	ETX
0438   04DB 20 22       			JR	NZ,NEXTCMD
0439   04DD 1A          ISRS:		LD	A,(DE)
0440   04DE FE 00       			CP	0
0441   04E0 28 04       			JR	Z,ISZERO
0442   04E2 FE 20       			CP	' '
0443   04E4 20 19       			JR	NZ,NEXTCMD
0444   04E6 7E          ISZERO:		LD	A,(HL)
0445   04E7 FE 03       			CP	ETX
0446   04E9 28 03       			JR	Z,CMDMATCH
0447   04EB 23          			INC	HL
0448   04EC 18 F8       			JR	ISZERO
0449   04EE 23          CMDMATCH:	INC	HL
0450   04EF E5          			PUSH HL
0451   04F0 D1          			POP	DE				; DE=addr of jump table
0452   04F1 26 00       			LD	H,0
0453   04F3 3A A4 06    			LD	A,(CMDNUM)
0454   04F6 6F          			LD	L,A
0455   04F7 E5          			PUSH HL
0456   04F8 C1          			POP	BC
0457   04F9 09          			ADD	HL,BC			; command_number * 2
0458   04FA 09          			ADD	HL,BC			; command_number * 3
0459   04FB 19          			ADD HL,DE
0460   04FC D1          			POP	DE
0461   04FD C1          			POP	BC
0462   04FE C9          			RET					; A=command_number, HL=jump_address
0463   04FF 7E          NEXTCMD:	LD	A,(HL)
0464   0500 FE 1E       			CP	RS
0465   0502 28 07       			JR	Z,ISRS2
0466   0504 FE 03       			CP	ETX
0467   0506 28 10       			JR	Z,NOMATCH
0468   0508 23          			INC	HL
0469   0509 18 F4       			JR	NEXTCMD
0470   050B 23          ISRS2:		INC	HL
0471   050C 3A A4 06    			LD	A,(CMDNUM)
0472   050F 3C          			INC	A
0473   0510 32 A4 06    			LD	(CMDNUM),A
0474   0513 11 80 00    			LD	DE,DMA
0475   0516 18 B4       			JR	NEXT2PARS
0476   0518 21 00 00    NOMATCH:	LD	HL,0
0477   051B 3E FF       			LD	A,0FFH
0478   051D D1          			POP	DE
0479   051E C1          			POP	BC
0480   051F C9          			RET
0481   0520             
0482   0520             ;================================================================================================
0483   0520             ; Routine to get word from command line. DE=line_buf_ptr(should point to where word starts).
0484   0520             ; If successfull, return word in BC. A=0 if missing arg, A=1 if OK, A=2 if invalid arg. 
0485   0520             ;================================================================================================
0486   0520 CD 34 05    GETWORD:	CALL GETBYTE
0487   0523 FE 01       			CP	1
0488   0525 C0          			RET	NZ
0489   0526 48          			LD	C,B
0490   0527 13          			INC	DE
0491   0528 CD 34 05    			CALL GETBYTE
0492   052B FE 01       			CP	1
0493   052D C0          			RET NZ
0494   052E 78          			LD	A,B
0495   052F 41          			LD	B,C
0496   0530 4F          			LD	C,A
0497   0531 3E 01       			LD	A,1
0498   0533 C9          			RET
0499   0534             			
0500   0534             ;================================================================================================
0501   0534             ; Routine to get byte from command line. DE=line_buf_ptr(should point to where byte starts).
0502   0534             ; If successfull, return byte in regB. A=0 if missing arg, A=1 if OK, A=2 if invalid arg. 
0503   0534             ;================================================================================================
0504   0534 1A          GETBYTE:	LD	A,(DE)
0505   0535 FE 00       			CP	0
0506   0537 28 1C       			JR	Z,GBNA				; End of buffer and no arg found.
0507   0539 FE 20       			CP	' '
0508   053B 28 35       			JR	Z,GBSPC				; Trim the space.
0509   053D 67          			LD	H,A
0510   053E CD A3 05    			CALL ISITHEX
0511   0541 FE 01       			CP	1
0512   0543 20 30       			JR	NZ,GBIA				; Invalid arg.
0513   0545 13          			INC	DE
0514   0546 1A          			LD	A,(DE)
0515   0547 6F          			LD	L,A
0516   0548 CD A3 05    			CALL ISITHEX
0517   054B FE 01       			CP	1
0518   054D 20 26       			JR	NZ,GBIA				; Invalid arg.
0519   054F CD BD 05    			CALL HL2B				; Convert ASCII pair to byte
0520   0552 3E 01       			LD	A,1
0521   0554 C9          			RET
0522   0555 CD 92 05    GBNA:		CALL PRINTENV
0523   0558 CD 33 E6    			CALL PRINTSEQ
0524   055B 4D 69 73 73 			.DB	"Missing argument.",CR,LF,0
0524   055F 69 6E 67 20 
0524   0563 61 72 67 75 
0524   0567 6D 65 6E 74 
0524   056B 2E 0D 0A 00 
0525   056F 3E 00       			LD	A,0
0526   0571 C9          			RET
0527   0572 13          GBSPC:		INC	DE
0528   0573 18 BF       			JR	GETBYTE
0529   0575 CD 92 05    GBIA:		CALL PRINTENV
0530   0578 CD 33 E6    			CALL PRINTSEQ
0531   057B 49 6E 76 61 			.DB	"Invalid argument.",CR,LF,0
0531   057F 6C 69 64 20 
0531   0583 61 72 67 75 
0531   0587 6D 65 6E 74 
0531   058B 2E 0D 0A 00 
0532   058F 3E 02       			LD	A,2
0533   0591 C9          			RET
0534   0592             
0535   0592 3A A7 06    PRINTENV:	LD	A,(ENVIR)			; Print environment letter (M, L, D or none) before message.
0536   0595 FE 00       			CP	0
0537   0597 28 04       			JR	Z,NOLETTER
0538   0599 4F          			LD	C,A
0539   059A CD 0C E6    			CALL CONOUT
0540   059D 0E 7D       NOLETTER:	LD	C,PROMPT
0541   059F CD 0C E6    			CALL CONOUT
0542   05A2 C9          			RET
0543   05A3             
0544   05A3 FE 47       ISITHEX:	CP	'G'
0545   05A5 F2 B7 05    			JP	P,NOTHEX
0546   05A8 FE 41       			CP	'A'
0547   05AA F2 BA 05    			JP	P,ISHEX
0548   05AD FE 40       			CP	040H
0549   05AF F2 B7 05    			JP	P,NOTHEX
0550   05B2 FE 30       			CP	'0'
0551   05B4 F2 BA 05    			JP	P,ISHEX
0552   05B7 3E 00       NOTHEX:		LD	A,0
0553   05B9 C9          			RET
0554   05BA 3E 01       ISHEX:		LD	A,1
0555   05BC C9          			RET
0556   05BD             
0557   05BD             ;================================================================================================
0558   05BD             ; Convert ASCII to HEX (HL --> B)
0559   05BD             ;================================================================================================
0560   05BD C5          HL2B:		PUSH BC
0561   05BE 3E 60       			LD	A,060H
0562   05C0 94          			SUB	H
0563   05C1 0E 57       			LD	C,057H
0564   05C3 DA D0 05    			JP	C,DISCOUNT
0565   05C6 3E 40       			LD	A,040H
0566   05C8 94          			SUB	H
0567   05C9 0E 37       			LD	C,037H
0568   05CB DA D0 05    			JP	C,DISCOUNT
0569   05CE 0E 30       			LD	C,030H
0570   05D0 7C          DISCOUNT:	LD	A,H
0571   05D1 91          			SUB	C
0572   05D2 47          CONVL:		LD	B,A
0573   05D3 CB 20       			SLA	B
0574   05D5 CB 20       			SLA	B
0575   05D7 CB 20       			SLA	B
0576   05D9 CB 20       			SLA	B
0577   05DB 3E 60       			LD	A,060H
0578   05DD 95          			SUB	L
0579   05DE 0E 57       			LD	C,057H
0580   05E0 DA ED 05    			JP	C,DISCOUNT2
0581   05E3 3E 40       			LD	A,040H
0582   05E5 95          			SUB	L
0583   05E6 0E 37       			LD	C,037H
0584   05E8 DA ED 05    			JP	C,DISCOUNT2
0585   05EB 0E 30       			LD	C,030H
0586   05ED 7D          DISCOUNT2:	LD	A,L
0587   05EE 91          			SUB	C
0588   05EF B0          			OR	B
0589   05F0 C1          			POP	BC
0590   05F1 47          			LD	B,A
0591   05F2 C9          			RET
0592   05F3             
0593   05F3             ;================================================================================================
0594   05F3             ; Convert HEX to ASCII (B --> HL)
0595   05F3             ;================================================================================================
0596   05F3 C5          B2HL:		PUSH	BC
0597   05F4 78          			LD	A,B
0598   05F5 E6 0F       			AND	0FH
0599   05F7 6F          			LD	L,A
0600   05F8 D6 0A       			SUB	0AH
0601   05FA 0E 30       			LD	C,030H
0602   05FC DA 01 06    			JP	C,COMPENSE
0603   05FF 0E 37       			LD	C,037H
0604   0601 7D          COMPENSE:	LD	A,L
0605   0602 81          			ADD	A,C
0606   0603 6F          			LD	L,A
0607   0604 78          			LD	A,B
0608   0605 E6 F0       			AND	0F0H
0609   0607 CB 3F       			SRL	A
0610   0609 CB 3F       			SRL	A
0611   060B CB 3F       			SRL	A
0612   060D CB 3F       			SRL	A
0613   060F 67          			LD	H,A
0614   0610 D6 0A       			SUB	0AH
0615   0612 0E 30       			LD	C,030H
0616   0614 DA 19 06    			JP	C,COMPENSE2
0617   0617 0E 37       			LD	C,037H
0618   0619 7C          COMPENSE2:	LD	A,H
0619   061A 81          			ADD	A,C
0620   061B 67          			LD	H,A
0621   061C C1          			POP	BC
0622   061D C9          			RET
0623   061E             
0624   061E             ;*****************************************************
0625   061E             ;********* Entry point for RUN command test **********
0626   061E             ;*****************************************************
0627   061E CD 33 E6    RUNCMDTST:	CALL PRINTSEQ
0628   0621 0D 0A       			.DB	CR,LF
0629   0623 20 2A 2A 2A 			.DB	" *** RUN COMMAND TEST EXIT POINT ***"
0629   0627 20 52 55 4E 
0629   062B 20 43 4F 4D 
0629   062F 4D 41 4E 44 
0629   0633 20 54 45 53 
0629   0637 54 20 45 58 
0629   063B 49 54 20 50 
0629   063F 4F 49 4E 54 
0629   0643 20 2A 2A 2A 
0630   0647 0D 0A 00    			.DB	CR,LF,0
0631   064A 76          			HALT
0632   064B             
0633   064B             ;================================================================================================
0634   064B 42 4F 4F 54 CMDTBL:		.DB	"BOOT",RS
0634   064F 1E 
0635   0650 4D 45 4D 4F 			.DB	"MEMO",RS
0635   0654 1E 
0636   0655 58 4D 4F 44 			.DB	"XMODEM",RS
0636   0659 45 4D 1E 
0637   065C 48 45 58 32 			.DB	"HEX2COM",RS
0637   0660 43 4F 4D 1E 
0638   0664 4C 43 44 1E 			.DB	"LCD",RS
0639   0668 44 49 53 4B 			.DB	"DISK",RS
0639   066C 1E 
0640   066D 52 55 4E 03 			.DB	"RUN",ETX
0641   0671             
0642   0671 C3 03 E6    JMPTBL:		JP	WBOOT
0643   0674 C3 70 01    			JP	MEMO
0644   0677 C3 7E 03    			JP	XMODEM
0645   067A C3 93 03    			JP	HEX2COM
0646   067D C3 A9 03    			JP	LCD
0647   0680 C3 CC 03    			JP	DISK
0648   0683 C3 F0 03    			JP	RUN
0649   0686             			
0650   0686 51 1E       MEMOCT:		.DB	"Q",RS
0651   0688 52 1E       			.DB	"R",RS
0652   068A 57 1E       			.DB	"W",RS
0653   068C 43 1E       			.DB	"C",RS
0654   068E 46 1E       			.DB	"F",RS
0655   0690 56 03       			.DB	"V",ETX
0656   0692             
0657   0692 C3 96 01    MEMOJT:		JP	MQUIT
0658   0695 C3 99 01    			JP	MREAD
0659   0698 C3 17 03    			JP	MWRITE
0660   069B C3 31 03    			JP	MCOPY
0661   069E C3 4D 03    			JP	MFILL
0662   06A1 C3 67 03    			JP	MVERIFY
0663   06A4             			
0664   06A4 00          CMDNUM		.DB	0
0665   06A5 00 00       LBUFPTR		.DW	0
0666   06A7 00          ENVIR		.DB	0			; 0=MONITOR, M=MEMO, L=LCD, D=DISK
0667   06A8 00          LINNUM		.DB	0
0668   06A9 00          COLNUM		.DB	0
0669   06AA             
0670   06AA             
0671   06AA             			.END
tasm: Number of errors = 0
