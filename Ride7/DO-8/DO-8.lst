RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.20.17.263, COMPILATION OF MODULE DO_8      
OBJECT MODULE PLACED IN C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Rid
            -e7\DO-8\DO-8.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\kaltc\Documents\GitHub\Z8
            -0_Modular_Computer\Ride7\DO-8\DO-8.obj) PIN(C:\Users\kaltc\Document
            -s\Raisonance\Ride\Inc;C:\Users\kaltc\Documents\Raisonance\Ride\Inc\
            -51) PIN(C:\Users\kaltc\Documents\Raisonance\Ride\\inc\51) NOAM CD P
            -R(C:\Users\kaltc\Documents\GitHub\Z80_Modular_Computer\Ride7\DO-8\D
            -O-8.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CHAR) PR PL(60) PW(80)
            - OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) SM MOD517(NODP8,NOAU
            -) 

stmt level    source
   1          /*
   2           DO-8.c - Modbus RTU Slave controller (AT89C4051) for DO-8 Card. B
            -y Kaltchuk, Sep/2022.
   3          */
   4          
   5          #include <REG51.h>
   6          #include "Serial.h"
   7          #include "EEPROM.h"
   8          #include "ModbusSlave.h"

*** WARNING C233 IN LINE 57 OF ModbusSlave.h : using absolute registers togethe
            -r with interrupts can cause register corruptions (mixup of register
            - banks)
   9          
  10          void main() {
  11   1      	numCoils = 8;
  12   1      	numDiscreteInputs = 0;
  13   1      	numHoldingRegisters = 4;
  14   1      
  15   1          _DE = 0;
  16   1      
  17   1          baud = 19200;	// factory set baud rate.
  18   1      	id = 1;			// factory set modbus slave id.
  19   1      
  20   1      	if (_FS == 1) {
  21   2      		baud = EEPROMread(0);
  22   2      		id =  EEPROMread(1);
  23   2      	}
  24   1      	serialInit(baud);
  25   1      	modbusBegin(baud);
  26   1      	
  27   1      	while (1) {
  28   2              modbusPoll();
  29   2      	}
  30   1      }
  31          
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 32

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _serialInit (BEGIN)
              ; Register R6R7 is assigned to parameter baud
                                           ; SOURCE LINE # 25 
0000 438920         ORL    TMOD,#020H
                                           ; SOURCE LINE # 26 
0003 438780         ORL    PCON,#080H
                                           ; SOURCE LINE # 27 
0006 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 28 
0009 BE2507         CJNE   R6,#025H,?LAB9
000C EF             MOV    A,R7
000D 2480           ADD    A,#080H
000F 6051           JZ     ?CASE10
0011 8061           SJMP   ?NXT1
0013         ?LAB9:
0013 5021           JNC    ?LAB10
0015 EE             MOV    A,R6
0016 B40407         CJNE   A,#004H,?LAB11
0019 EF             MOV    A,R7
001A 2450           ADD    A,#050H
001C 6035           JZ     ?CASE7
001E 8054           SJMP   ?NXT1
0020         ?LAB11:
0020 EE             MOV    A,R6
0021 B40907         CJNE   A,#009H,?LAB12
0024 EF             MOV    A,R7
0025 24A0           ADD    A,#0A0H
0027 602F           JZ     ?CASE8
0029 8049           SJMP   ?NXT1
002B         ?LAB12:
002B EE             MOV    A,R6
002C B41245         CJNE   A,#012H,?NXT1
002F EF             MOV    A,R7
0030 2440           ADD    A,#040H
0032 6029           JZ     ?CASE9
0034 803E           SJMP   ?NXT1
0036         ?LAB10:
0036 EE             MOV    A,R6
0037 B44B05         CJNE   A,#04BH,?LAB13
003A EF             MOV    A,R7
003B 602A           JZ     ?CASE11
003D 8035           SJMP   ?NXT1
003F         ?LAB13:
003F EE             MOV    A,R6
0040 B47007         CJNE   A,#070H,?LAB14
0043 EF             MOV    A,R7
0044 2480           ADD    A,#080H
0046 6024           JZ     ?CASE12
0048 802A           SJMP   ?NXT1
004A         ?LAB14:
004A EE             MOV    A,R6
004B B4E126         CJNE   A,#0E1H,?NXT1
004E EF             MOV    A,R7
004F 6020           JZ     ?CASE13
0051 8021           SJMP   ?NXT1
0053         ?CASE7:
                                           ; SOURCE LINE # 30 
0053 758DD0         MOV    TH1,#0D0H
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  2

                                           ; SOURCE LINE # 31 
0056 801C           SJMP   ?NXT1
0058         ?CASE8:
                                           ; SOURCE LINE # 33 
0058 758DE8         MOV    TH1,#0E8H
                                           ; SOURCE LINE # 34 
005B 8017           SJMP   ?NXT1
005D         ?CASE9:
                                           ; SOURCE LINE # 36 
005D 758DF4         MOV    TH1,#0F4H
                                           ; SOURCE LINE # 37 
0060 8012           SJMP   ?NXT1
0062         ?CASE10:
                                           ; SOURCE LINE # 39 
0062 758DFA         MOV    TH1,#0FAH
                                           ; SOURCE LINE # 40 
0065 800D           SJMP   ?NXT1
0067         ?CASE11:
                                           ; SOURCE LINE # 42 
0067 758DFD         MOV    TH1,#0FDH
                                           ; SOURCE LINE # 43 
006A 8008           SJMP   ?NXT1
006C         ?CASE12:
                                           ; SOURCE LINE # 45 
006C 758DFE         MOV    TH1,#0FEH
                                           ; SOURCE LINE # 46 
006F 8003           SJMP   ?NXT1
0071         ?CASE13:
                                           ; SOURCE LINE # 48 
0071 758DFF         MOV    TH1,#0FFH
0074         ?NXT1:
                                           ; SOURCE LINE # 51 
0074 D28E           SETB   TR1
                                           ; SOURCE LINE # 52 
0076 22             RET    

            ; FUNCTION _serialInit (END)

            ; FUNCTION _serialTX (BEGIN)
              ; Register R7 is assigned to parameter x
                                           ; SOURCE LINE # 55 
0000 8F99           MOV    SBUF,R7
0002         ?WHILE1:
                                           ; SOURCE LINE # 56 
0002 3099FD         JNB    TI,?WHILE1
                                           ; SOURCE LINE # 57 
0005 C299           CLR    TI
                                           ; SOURCE LINE # 58 
0007 22             RET    

            ; FUNCTION _serialTX (END)

            ; FUNCTION serialRX (BEGIN)
0000         ?WHILE3:
                                           ; SOURCE LINE # 61 
0000 3098FD         JNB    RI,?WHILE3
                                           ; SOURCE LINE # 62 
0003 C298           CLR    RI
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  3

                                           ; SOURCE LINE # 63 
0005 AF99           MOV    R7,SBUF
                                           ; SOURCE LINE # 64 
0007 22             RET    

            ; FUNCTION serialRX (END)

            ; FUNCTION _I2C_delay (BEGIN)
              ; Register R6R7 is assigned to parameter d
              ; R4R5 is assigned to i
                                           ; SOURCE LINE # 51 
0000 E4             CLR    A
0001 FC             MOV    R4,A
0002 FD             MOV    R5,A
0003         ?FOR1:
0003 8EF0           MOV    B,R6
0005 B2F7           CPL    B.7
0007 EC             MOV    A,R4
0008 6480           XRL    A,#080H
000A B5F004         CJNE   A,B,?LAB24
000D ED             MOV    A,R5
000E B50700         CJNE   A,AR7,?LAB24
0011         ?LAB24:
0011 5007           JNC    ?NXT8
0013 0D             INC    R5
0014 ED             MOV    A,R5
0015 70EC           JNZ    ?FOR1
0017 0C             INC    R4
0018 80E9           SJMP   ?FOR1
001A         ?NXT8:
                                           ; SOURCE LINE # 52 
001A 22             RET    

            ; FUNCTION _I2C_delay (END)

            ; FUNCTION I2C_start (BEGIN)
                                           ; SOURCE LINE # 58 
0000 C2B2           CLR    INT0
                                           ; SOURCE LINE # 59 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 60 
0008 C2B3           CLR    INT1
                                           ; SOURCE LINE # 61 
000A 22             RET    

            ; FUNCTION I2C_start (END)

            ; FUNCTION I2C_stop (BEGIN)
                                           ; SOURCE LINE # 69 
0000 C2B2           CLR    INT0
                                           ; SOURCE LINE # 70 
0002 E4             CLR    A
0003 FE             MOV    R6,A
0004 FF             MOV    R7,A
0005 120000  R      LCALL  _I2C_delay
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  4

                                           ; SOURCE LINE # 71 
0008 D2B3           SETB   INT1
                                           ; SOURCE LINE # 72 
000A 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 73 
000D D2B2           SETB   INT0
                                           ; SOURCE LINE # 74 
000F 22             RET    

            ; FUNCTION I2C_stop (END)

            ; FUNCTION _I2C_write (BEGIN)
                                           ; SOURCE LINE # 79 
0000 8F00    R      MOV    byte,R7
                                           ; SOURCE LINE # 82 
0002 750000  R      MOV    bt,#000H
0005         ?FOR3:
                                           ; SOURCE LINE # 83 
0005 E500    R      MOV    A,byte
0007 30E704         JNB    ACC.7,?ELSE1
                                           ; SOURCE LINE # 84 
000A D2B2           SETB   INT0
000C 8002           SJMP   ?NXT15
000E         ?ELSE1:
                                           ; SOURCE LINE # 86 
000E C2B2           CLR    INT0
0010         ?NXT15:
                                           ; SOURCE LINE # 88 
0010 E4             CLR    A
0011 FE             MOV    R6,A
0012 FF             MOV    R7,A
0013 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 89 
0016 D2B3           SETB   INT1
                                           ; SOURCE LINE # 90 
0018 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 91 
001B C2B3           CLR    INT1
                                           ; SOURCE LINE # 92 
001D E500    R      MOV    A,byte
001F C3             CLR    C
0020 33             RLC    A
0021 F500    R      MOV    byte,A
                                           ; SOURCE LINE # 82 
0023 0500    R      INC    bt
0025 E500    R      MOV    A,bt
0027 B408DB         CJNE   A,#008H,?FOR3
                                           ; SOURCE LINE # 94 
002A 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 95 
002D D2B3           SETB   INT1
                                           ; SOURCE LINE # 96 
002F 120000  R      LCALL  _I2C_delay
              ; R3 is assigned to reply
                                           ; SOURCE LINE # 97 
0032 7B00           MOV    R3,#000H
0034 30B201         JNB    INT0,?LAB35
0037 0B             INC    R3
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  5

0038         ?LAB35:
                                           ; SOURCE LINE # 98 
0038 C2B3           CLR    INT1
                                           ; SOURCE LINE # 99 
003A 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 100 
003D 8B07           MOV    AR7,R3
                                           ; SOURCE LINE # 101 
003F 22             RET    

            ; FUNCTION _I2C_write (END)

            ; FUNCTION _I2C_read (BEGIN)
              ; Register R3 is assigned to parameter condition
                                           ; SOURCE LINE # 106 
0000 8F03           MOV    AR3,R7
                                           ; SOURCE LINE # 107 
0002 750000  R      MOV    byte,#000H
                                           ; SOURCE LINE # 109 
0005 750000  R      MOV    bt,#000H
0008         ?FOR5:
                                           ; SOURCE LINE # 110 
0008 D2B2           SETB   INT0
                                           ; SOURCE LINE # 111 
000A E4             CLR    A
000B FF             MOV    R7,A
000C FE             MOV    R6,A
000D 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 112 
0010 D2B3           SETB   INT1
                                           ; SOURCE LINE # 113 
0012 120000  R      LCALL  _I2C_delay
0015         ?WHILE6:
                                           ; SOURCE LINE # 114 
0015 20B302         JB     INT1,?NXT23
0018 80FB           SJMP   ?WHILE6
001A         ?NXT23:
                                           ; SOURCE LINE # 115 
001A E500    R      MOV    A,byte
001C C3             CLR    C
001D 33             RLC    A
001E FE             MOV    R6,A
001F A2B2           MOV    C,INT0
0021 E4             CLR    A
0022 33             RLC    A
0023 FA             MOV    R2,A
0024 EE             MOV    A,R6
0025 4A             ORL    A,R2
0026 F500    R      MOV    byte,A
                                           ; SOURCE LINE # 116 
0028 C2B3           CLR    INT1
                                           ; SOURCE LINE # 109 
002A 0500    R      INC    bt
002C E500    R      MOV    A,bt
002E B408D7         CJNE   A,#008H,?FOR5
                                           ; SOURCE LINE # 118 
0031 EB             MOV    A,R3
0032 B40104         CJNE   A,#001H,?ELSE3
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  6

                                           ; SOURCE LINE # 119 
0035 C2B2           CLR    INT0
0037 8002           SJMP   ?NXT24
0039         ?ELSE3:
                                           ; SOURCE LINE # 121 
0039 D2B2           SETB   INT0
003B         ?NXT24:
                                           ; SOURCE LINE # 123 
003B E4             CLR    A
003C FE             MOV    R6,A
003D FF             MOV    R7,A
003E 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 124 
0041 D2B3           SETB   INT1
                                           ; SOURCE LINE # 125 
0043 120000  R      LCALL  _I2C_delay
0046         ?WHILE7:
                                           ; SOURCE LINE # 126 
0046 30B3FD         JNB    INT1,?WHILE7
                                           ; SOURCE LINE # 127 
0049 C2B3           CLR    INT1
                                           ; SOURCE LINE # 128 
004B E4             CLR    A
004C FE             MOV    R6,A
004D FF             MOV    R7,A
004E 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 129 
0051 AF00    R      MOV    R7,byte
                                           ; SOURCE LINE # 130 
0053 22             RET    

            ; FUNCTION _I2C_read (END)

            ; FUNCTION _EEPROMread (BEGIN)
                                           ; SOURCE LINE # 135 
0000 8E00    R      MOV    address,R6
0002 8F00    R      MOV    address+01H,R7
                                           ; SOURCE LINE # 138 
0004 AA00    R      MOV    R2,address
0006 E500    R      MOV    A,address+01H
0008 C3             CLR    C
0009 33             RLC    A
000A CA             XCH    A,R2
000B 33             RLC    A
000C CA             XCH    A,R2
000D F500    R      MOV    address+01H,A
000F 8A00    R      MOV    address,R2
                                           ; SOURCE LINE # 139 
0011 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 140 
0014 7FA0           MOV    R7,#0A0H
0016 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 141 
0019 AF00    R      MOV    R7,address
001B 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 142 
001E AF00    R      MOV    R7,address+01H
0020 120000  R      LCALL  _I2C_write
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  7

                                           ; SOURCE LINE # 143 
0023 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 144 
0026 E4             CLR    A
0027 FE             MOV    R6,A
0028 FF             MOV    R7,A
0029 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 145 
002C 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 146 
002F 7FA1           MOV    R7,#0A1H
0031 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 147 
0034 7F01           MOV    R7,#001H
0036 120000  R      LCALL  _I2C_read
0039 EF             MOV    A,R7
003A FA             MOV    R2,A
003B E4             CLR    A
003C FB             MOV    R3,A
003D FF             MOV    R7,A
003E C002           PUSH   AR2
0040 C003           PUSH   AR3
0042 120000  R      LCALL  _I2C_read
0045 D0E0           POP    ACC
0047 4F             ORL    A,R7
0048 F500    R      MOV    word+01H,A
004A D0E0           POP    ACC
004C F500    R      MOV    word,A
                                           ; SOURCE LINE # 148 
004E 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 150 
0051 AE00    R      MOV    R6,word
0053 AF00    R      MOV    R7,word+01H
                                           ; SOURCE LINE # 151 
0055 22             RET    

            ; FUNCTION _EEPROMread (END)

            ; FUNCTION _EEPROMwrite (BEGIN)
                                           ; SOURCE LINE # 156 
0000 8E00    R      MOV    address,R6
0002 8F00    R      MOV    address+01H,R7
0004 8C00    R      MOV    word,R4
0006 8D00    R      MOV    word+01H,R5
                                           ; SOURCE LINE # 157 
0008 AA00    R      MOV    R2,address
000A E500    R      MOV    A,address+01H
000C C3             CLR    C
000D 33             RLC    A
000E CA             XCH    A,R2
000F 33             RLC    A
0010 CA             XCH    A,R2
0011 F500    R      MOV    address+01H,A
0013 8A00    R      MOV    address,R2
                                           ; SOURCE LINE # 158 
0015 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 159 
0018 7FA0           MOV    R7,#0A0H
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  8

001A 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 160 
001D AF00    R      MOV    R7,address
001F 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 161 
0022 AF00    R      MOV    R7,address+01H
0024 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 162 
0027 AF00    R      MOV    R7,word
0029 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 163 
002C AF00    R      MOV    R7,word+01H
002E 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 164 
0031 E4             CLR    A
0032 FE             MOV    R6,A
0033 FF             MOV    R7,A
0034 120000  R      LCALL  _I2C_delay
                                           ; SOURCE LINE # 165 
0037 020000  R      LJMP   I2C_stop

            ; FUNCTION _EEPROMwrite (END)

            ; FUNCTION timer0_isr (BEGIN)
                                           ; SOURCE LINE # 51 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 53 
0004 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 54 
0007 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 56 
000A 0500    R      INC    milli+01H
000C E500    R      MOV    A,milli+01H
000E 7002           JNZ    ?NXT27
0010 0500    R      INC    milli
0012         ?NXT27:
0012 D0D0           POP    PSW
0014 D0E0           POP    ACC
                                           ; SOURCE LINE # 57 
0016 32             RETI   

            ; FUNCTION timer0_isr (END)

            ; FUNCTION milliStart (BEGIN)
                                           ; SOURCE LINE # 60 
0000 C2A9           CLR    ET0
                                           ; SOURCE LINE # 61 
0002 438901         ORL    TMOD,#001H
                                           ; SOURCE LINE # 62 
0005 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 63 
0008 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 64 
000B D28C           SETB   TR0
                                           ; SOURCE LINE # 65 
000D D2A9           SETB   ET0
                                           ; SOURCE LINE # 66 
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE  9

000F D2AF           SETB   EA
                                           ; SOURCE LINE # 68 
0011 E4             CLR    A
0012 F500    R      MOV    milli,A
0014 F500    R      MOV    milli+01H,A
                                           ; SOURCE LINE # 69 
0016 22             RET    

            ; FUNCTION milliStart (END)

            ; FUNCTION _modbusBegin (BEGIN)
                                           ; SOURCE LINE # 71 
0000 8E00    R      MOV    baud,R6
0002 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 72 
0004 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 74 
0007 EE             MOV    A,R6
0008 B44B00         CJNE   A,#04BH,?LAB61
000B         ?LAB61:
000B 400D           JC     ?ELSE6
                                           ; SOURCE LINE # 75 
000D E4             CLR    A
000E F500    R      MOV    charTimeout,A
0010 750001  R      MOV    charTimeout+01H,#001H
                                           ; SOURCE LINE # 76 
0013 F500    R      MOV    frameTimeout,A
0015 750002  R      MOV    frameTimeout+01H,#002H
0018 8021           SJMP   ?DO1
001A         ?ELSE6:
                                           ; SOURCE LINE # 79 
001A 7E4B           MOV    R6,#04BH
001C E4             CLR    A
001D FF             MOV    R7,A
001E AC00    R      MOV    R4,baud
0020 AD00    R      MOV    R5,baud+01H
0022 120000  R      LCALL  ?C_UIDIV
0025 EF             MOV    A,R7
0026 2401           ADD    A,#001H
0028 F500    R      MOV    charTimeout+01H,A
002A E4             CLR    A
002B 3E             ADDC   A,R6
002C F500    R      MOV    charTimeout,A
                                           ; SOURCE LINE # 80 
002E E500    R      MOV    A,charTimeout+01H
0030 AA00    R      MOV    R2,charTimeout
0032 C3             CLR    C
0033 33             RLC    A
0034 CA             XCH    A,R2
0035 33             RLC    A
0036 CA             XCH    A,R2
0037 F500    R      MOV    frameTimeout+01H,A
0039 8A00    R      MOV    frameTimeout,R2
003B         ?DO1:
                                           ; SOURCE LINE # 86 
003B 309805         JNB    RI,?TEST1
                                           ; SOURCE LINE # 87 
003E 120000  R      LCALL  milliStart
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 10

                                           ; SOURCE LINE # 88 
0041 C298           CLR    RI
0043         ?TEST1:
0043 E500    R      MOV    A,milli
0045 B50005  R      CJNE   A,frameTimeout,?LAB64
0048 E500    R      MOV    A,milli+01H
004A B50000  R      CJNE   A,frameTimeout+01H,?LAB64
004D         ?LAB64:
004D 40EC           JC     ?DO1
                                           ; SOURCE LINE # 91 
004F 22             RET    

            ; FUNCTION _modbusBegin (END)

            ; FUNCTION modbusPoll (BEGIN)
                                           ; SOURCE LINE # 94 
0000 750000  R      MOV    i,#000H
                                           ; SOURCE LINE # 98 
0003 209803         JB     RI,$ + 6
0006 020000  R      LJMP   ?NXT71
0009         ?DO3:
                                           ; SOURCE LINE # 100 
0009 30981A         JNB    RI,?TEST3
                                           ; SOURCE LINE # 101 
000C 120000  R      LCALL  milliStart
                                           ; SOURCE LINE # 102 
000F E500    R      MOV    A,i
0011 B41800         CJNE   A,#018H,?LAB136
0014         ?LAB136:
0014 500C           JNC    ?ELSE34
0016 120000  R      LCALL  serialRX
0019 E500    R      MOV    A,i
001B 2400    R      ADD    A,#buf
001D F8             MOV    R0,A
001E A607           MOV    @R0,AR7
0020 8002           SJMP   ?NXT74
0022         ?ELSE34:
                                           ; SOURCE LINE # 103 
0022 C298           CLR    RI
0024         ?NXT74:
                                           ; SOURCE LINE # 104 
0024 0500    R      INC    i
0026         ?TEST3:
0026 E500    R      MOV    A,milli
0028 B50005  R      CJNE   A,charTimeout,?LAB139
002B E500    R      MOV    A,milli+01H
002D B50000  R      CJNE   A,charTimeout+01H,?LAB139
0030         ?LAB139:
0030 5007           JNC    ?WHILE9
0032 E500    R      MOV    A,i
0034 B41800         CJNE   A,#018H,?LAB141
0037         ?LAB141:
0037 40D0           JC     ?DO3
0039         ?WHILE9:
                                           ; SOURCE LINE # 108 
0039 E500    R      MOV    A,milli
003B B50005  R      CJNE   A,frameTimeout,?LAB143
003E E500    R      MOV    A,milli+01H
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 11

0040 B50000  R      CJNE   A,frameTimeout+01H,?LAB143
0043         ?LAB143:
0043 5004           JNC    ?NXT75
                                           ; SOURCE LINE # 109 
0045 C298           CLR    RI
0047 80F0           SJMP   ?WHILE9
0049         ?NXT75:
                                           ; SOURCE LINE # 112 
0049 309803         JNB    RI,$ + 6
004C 020000  R      LJMP   ?NXT71
004F E4             CLR    A
0050 B50006  R      CJNE   A,id,?LAB148
0053 E500    R      MOV    A,buf
0055 6500    R      XRL    A,id+01H
0057 600A           JZ     ?LAB146
0059         ?LAB148:
0059 E500    R      MOV    A,buf
005B B40002         CJNE   A,#000H,$ + 5
005E 8003           SJMP   $ + 5
0060 020000  R      LJMP   ?NXT71
0063         ?LAB146:
0063 E500    R      MOV    A,i
0065 B41800         CJNE   A,#018H,?LAB149
0068         ?LAB149:
0068 4003           JC     $ + 5
006A 020000  R      LJMP   ?NXT71
                                           ; SOURCE LINE # 113 
006D E500    R      MOV    A,i
006F 2400    R      ADD    A,#buf+0FFH
0071 F8             MOV    R0,A
0072 8607           MOV    AR7,@R0
0074 E500    R      MOV    A,i
0076 2400    R      ADD    A,#buf+0FEH
0078 F8             MOV    R0,A
0079 8605           MOV    AR5,@R0
007B 120000  R      LCALL  _bytesToWord
007E C006           PUSH   AR6
0080 C007           PUSH   AR7
0082 E500    R      MOV    A,i
0084 24FE           ADD    A,#0FEH
0086 FF             MOV    R7,A
0087 120000  R      LCALL  _crc
008A D005           POP    AR5
008C D0F0           POP    B
008E EE             MOV    A,R6
008F B5F004         CJNE   A,B,?LAB151
0092 EF             MOV    A,R7
0093 6D             XRL    A,R5
0094 6001           JZ     ?NXT77
0096         ?LAB151:
                                           ; SOURCE LINE # 213 
0096 22             RET    
0097         ?NXT77:
                                           ; SOURCE LINE # 115 
0097 E500    R      MOV    A,buf+01H
0099 14             DEC    A
009A 6024           JZ     ?CASE20
009C 24FE           ADD    A,#0FEH
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 12

009E 7003           JNZ    $ + 5
00A0 020000  R      LJMP   ?CASE21
00A3 24FE           ADD    A,#0FEH
00A5 7003           JNZ    $ + 5
00A7 020000  R      LJMP   ?CASE22
00AA 14             DEC    A
00AB 7003           JNZ    $ + 5
00AD 020000  R      LJMP   ?CASE23
00B0 24F7           ADD    A,#0F7H
00B2 7003           JNZ    $ + 5
00B4 020000  R      LJMP   ?CASE24
00B7 14             DEC    A
00B8 7003           JNZ    $ + 5
00BA 020000  R      LJMP   ?CASE25
00BD 020000  R      LJMP   ?DEFAULT1
00C0         ?CASE20:
                                           ; SOURCE LINE # 117 
00C0 AF00    R      MOV    R7,buf+02H
00C2 AD00    R      MOV    R5,buf+03H
00C4 120000  R      LCALL  _bytesToWord
00C7 8E00    R      MOV    startAddress,R6
00C9 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 118 
00CB AF00    R      MOV    R7,buf+04H
00CD AD00    R      MOV    R5,buf+05H
00CF 120000  R      LCALL  _bytesToWord
00D2 8E00    R      MOV    quantity,R6
00D4 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 119 
00D6 E500    R      MOV    A,quantity
00D8 4500    R      ORL    A,quantity+01H
00DA 600D           JZ     ?LAB154
00DC E500    R      MOV    A,quantity
00DE B40006         CJNE   A,#000H,?LAB155
00E1 E500    R      MOV    A,quantity+01H
00E3 B40801         CJNE   A,#008H,?LAB155
00E6 D3             SETB   C
00E7         ?LAB155:
00E7 400A           JC     ?ELSE37
00E9         ?LAB154:
00E9 E4             CLR    A
00EA FE             MOV    R6,A
00EB 7F03           MOV    R7,#003H
00ED 120000  R      LCALL  _oops
00F0 020000  R      LJMP   ?NXT78
00F3         ?ELSE37:
                                           ; SOURCE LINE # 120 
00F3 E500    R      MOV    A,quantity+01H
00F5 2500    R      ADD    A,startAddress+01H
00F7 FE             MOV    R6,A
00F8 E500    R      MOV    A,quantity
00FA 3500    R      ADDC   A,startAddress
00FC B40005         CJNE   A,#000H,?LAB157
00FF EE             MOV    A,R6
0100 B50001  R      CJNE   A,numCoils,?LAB157
0103 D3             SETB   C
0104         ?LAB157:
0104 400A           JC     ?ELSE38
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 13

0106 E4             CLR    A
0107 FE             MOV    R6,A
0108 7F02           MOV    R7,#002H
010A 120000  R      LCALL  _oops
010D 020000  R      LJMP   ?NXT78
0110         ?ELSE38:
                                           ; SOURCE LINE # 122 
0110 750000  R      MOV    j,#000H
0113         ?FOR10:
0113 E4             CLR    A
0114 B50005  R      CJNE   A,quantity,?LAB159
0117 E500    R      MOV    A,j
0119 B50000  R      CJNE   A,quantity+01H,?LAB159
011C         ?LAB159:
011C 4003           JC     $ + 5
011E 020000  R      LJMP   ?NXT81
                                           ; SOURCE LINE # 123 
0121 E500    R      MOV    A,startAddress+01H
0123 2500    R      ADD    A,j
0125 FF             MOV    R7,A
0126 E4             CLR    A
0127 3500    R      ADDC   A,startAddress
0129 FE             MOV    R6,A
012A 120000  R      LCALL  _boolRead
012D E4             CLR    A
012E 33             RLC    A
012F E4             CLR    A
0130 5001           JNC    ?NXT83
0132 14             DEC    A
0133         ?NXT83:
0133 F500    R      MOV    value,A
0135 850000  R      MOV    value+01H,value
0138 750000  R      MOV    value+02H,#000H
013B 8F00    R      MOV    value+03H,R7
                                           ; SOURCE LINE # 124 
013D C000    R      PUSH   value
013F C000    R      PUSH   value+01H
0141 C000    R      PUSH   value+02H
0143 C000    R      PUSH   value+03H
0145 E4             CLR    A
0146 FE             MOV    R6,A
0147 FC             MOV    R4,A
0148 FD             MOV    R5,A
0149 7F01           MOV    R7,#001H
014B 120000  R      LCALL  ?C_CMPLS
014E BF0107         CJNE   R7,#001H,?NXT84
                                           ; SOURCE LINE # 125 
0151 E4             CLR    A
0152 FE             MOV    R6,A
0153 7F04           MOV    R7,#004H
0155 020000  R      LJMP   _oops
0158         ?NXT84:
                                           ; SOURCE LINE # 128 
0158 C000    R      PUSH   value
015A C000    R      PUSH   value+01H
015C C000    R      PUSH   value+02H
015E C000    R      PUSH   value+03H
0160 E4             CLR    A
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 14

0161 FC             MOV    R4,A
0162 FD             MOV    R5,A
0163 FE             MOV    R6,A
0164 7F01           MOV    R7,#001H
0166 120000  R      LCALL  ?C_CMPL
0169 BF001E         CJNE   R7,#000H,?ELSE40
016C E500    R      MOV    A,j
016E 03             RR     A
016F 03             RR     A
0170 03             RR     A
0171 541F           ANL    A,#01FH
0173 2400    R      ADD    A,#buf+03H
0175 F8             MOV    R0,A
0176 E500    R      MOV    A,j
0178 5407           ANL    A,#007H
017A FB             MOV    R3,A
017B 0B             INC    R3
017C 7401           MOV    A,#001H
017E 8002           SJMP   ?LAB162
0180         ?LAB163:
0180 C3             CLR    C
0181 33             RLC    A
0182         ?LAB162:
0182 DBFC           DJNZ   R3,?LAB163
0184 FA             MOV    R2,A
0185 E6             MOV    A,@R0
0186 4A             ORL    A,R2
0187 F6             MOV    @R0,A
0188 801D           SJMP   ?NXT82
018A         ?ELSE40:
                                           ; SOURCE LINE # 129 
018A E500    R      MOV    A,j
018C 03             RR     A
018D 03             RR     A
018E 03             RR     A
018F 541F           ANL    A,#01FH
0191 2400    R      ADD    A,#buf+03H
0193 F8             MOV    R0,A
0194 E500    R      MOV    A,j
0196 5407           ANL    A,#007H
0198 FC             MOV    R4,A
0199 0C             INC    R4
019A 7401           MOV    A,#001H
019C 8002           SJMP   ?LAB164
019E         ?LAB165:
019E C3             CLR    C
019F 33             RLC    A
01A0         ?LAB164:
01A0 DCFC           DJNZ   R4,?LAB165
01A2 F4             CPL    A
01A3 FA             MOV    R2,A
01A4 E6             MOV    A,@R0
01A5 5A             ANL    A,R2
01A6 F6             MOV    @R0,A
01A7         ?NXT82:
                                           ; SOURCE LINE # 122 
01A7 0500    R      INC    j
01A9 020000  R      LJMP   ?FOR10
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 15

01AC         ?NXT81:
                                           ; SOURCE LINE # 131 
01AC AE00    R      MOV    R6,quantity
01AE AF00    R      MOV    R7,quantity+01H
01B0 120000  R      LCALL  _div8RndUp
                                           ; SOURCE LINE # 132 
01B3 EF             MOV    A,R7
                                           ; SOURCE LINE # 131 
01B4 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 132 
01B6 2403           ADD    A,#003H
01B8 FF             MOV    R7,A
01B9 020000  R      LJMP   _write
01BC         ?CASE21:
                                           ; SOURCE LINE # 137 
01BC AF00    R      MOV    R7,buf+02H
01BE AD00    R      MOV    R5,buf+03H
01C0 120000  R      LCALL  _bytesToWord
01C3 8E00    R      MOV    startAddress,R6
01C5 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 138 
01C7 AF00    R      MOV    R7,buf+04H
01C9 AD00    R      MOV    R5,buf+05H
01CB 120000  R      LCALL  _bytesToWord
01CE 8E00    R      MOV    quantity,R6
01D0 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 139 
01D2 E500    R      MOV    A,quantity
01D4 4500    R      ORL    A,quantity+01H
01D6 600D           JZ     ?LAB166
01D8 E500    R      MOV    A,quantity
01DA B40006         CJNE   A,#000H,?LAB167
01DD E500    R      MOV    A,quantity+01H
01DF B50001  R      CJNE   A,numHoldingRegisters,?LAB167
01E2 D3             SETB   C
01E3         ?LAB167:
01E3 400A           JC     ?ELSE41
01E5         ?LAB166:
01E5 E4             CLR    A
01E6 FE             MOV    R6,A
01E7 7F03           MOV    R7,#003H
01E9 120000  R      LCALL  _oops
01EC 020000  R      LJMP   ?NXT78
01EF         ?ELSE41:
                                           ; SOURCE LINE # 140 
01EF E500    R      MOV    A,quantity+01H
01F1 2500    R      ADD    A,startAddress+01H
01F3 FE             MOV    R6,A
01F4 E500    R      MOV    A,quantity
01F6 3500    R      ADDC   A,startAddress
01F8 B40005         CJNE   A,#000H,?LAB169
01FB EE             MOV    A,R6
01FC B50001  R      CJNE   A,numHoldingRegisters,?LAB169
01FF D3             SETB   C
0200         ?LAB169:
0200 400A           JC     ?ELSE42
0202 E4             CLR    A
0203 FE             MOV    R6,A
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 16

0204 7F02           MOV    R7,#002H
0206 120000  R      LCALL  _oops
0209 020000  R      LJMP   ?NXT78
020C         ?ELSE42:
                                           ; SOURCE LINE # 142 
020C 750000  R      MOV    j,#000H
020F         ?FOR11:
020F E4             CLR    A
0210 B50005  R      CJNE   A,quantity,?LAB171
0213 E500    R      MOV    A,j
0215 B50000  R      CJNE   A,quantity+01H,?LAB171
0218         ?LAB171:
0218 5065           JNC    ?NXT88
                                           ; SOURCE LINE # 143 
021A E500    R      MOV    A,startAddress+01H
021C 2500    R      ADD    A,j
021E FF             MOV    R7,A
021F E4             CLR    A
0220 3500    R      ADDC   A,startAddress
0222 FE             MOV    R6,A
0223 120000  R      LCALL  _wordRead
0226 8C00    R      MOV    value,R4
0228 8D00    R      MOV    value+01H,R5
022A 8E00    R      MOV    value+02H,R6
022C 8F00    R      MOV    value+03H,R7
                                           ; SOURCE LINE # 144 
022E C000    R      PUSH   value
0230 C000    R      PUSH   value+01H
0232 C000    R      PUSH   value+02H
0234 C000    R      PUSH   value+03H
0236 E4             CLR    A
0237 FF             MOV    R7,A
0238 FE             MOV    R6,A
0239 FC             MOV    R4,A
023A FD             MOV    R5,A
023B 120000  R      LCALL  ?C_CMPLS
023E BFFF07         CJNE   R7,#0FFH,?NXT90
                                           ; SOURCE LINE # 145 
0241 E4             CLR    A
0242 FE             MOV    R6,A
0243 7F04           MOV    R7,#004H
0245 020000  R      LJMP   _oops
0248         ?NXT90:
                                           ; SOURCE LINE # 148 
0248 AC00    R      MOV    R4,value
024A AD00    R      MOV    R5,value+01H
024C AE00    R      MOV    R6,value+02H
024E AF00    R      MOV    R7,value+03H
0250 75F008         MOV    B,#008H
0253 120000  R      LCALL  ?C_LSSHR
0256 8F82           MOV    DPL,R7
0258 75F002         MOV    B,#002H
025B E500    R      MOV    A,j
025D A4             MUL    AB
025E FB             MOV    R3,A
025F 2400    R      ADD    A,#buf+03H
0261 F8             MOV    R0,A
0262 A682           MOV    @R0,DPL
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 17

                                           ; SOURCE LINE # 149 
0264 C000    R      PUSH   value
0266 C000    R      PUSH   value+01H
0268 C000    R      PUSH   value+02H
026A C000    R      PUSH   value+03H
026C E4             CLR    A
026D FE             MOV    R6,A
026E FC             MOV    R4,A
026F FD             MOV    R5,A
0270 7FFF           MOV    R7,#0FFH
0272 120000  R      LCALL  ?C_LANL
0275 EB             MOV    A,R3
0276 2400    R      ADD    A,#buf+04H
0278 F8             MOV    R0,A
0279 A607           MOV    @R0,AR7
                                           ; SOURCE LINE # 142 
027B 0500    R      INC    j
027D 8090           SJMP   ?FOR11
027F         ?NXT88:
                                           ; SOURCE LINE # 151 
027F E500    R      MOV    A,quantity+01H
0281 C3             CLR    C
0282 33             RLC    A
0283 F500    R      MOV    buf+02H,A
                                           ; SOURCE LINE # 152 
0285 2403           ADD    A,#003H
0287 FF             MOV    R7,A
0288 020000  R      LJMP   _write
028B         ?CASE22:
                                           ; SOURCE LINE # 157 
028B AF00    R      MOV    R7,buf+02H
028D AD00    R      MOV    R5,buf+03H
028F 120000  R      LCALL  _bytesToWord
0292 8E00    R      MOV    startAddress,R6
0294 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 158 
0296 AF00    R      MOV    R7,buf+04H
0298 AD00    R      MOV    R5,buf+05H
029A 120000  R      LCALL  _bytesToWord
029D E4             CLR    A
029E F500    R      MOV    value,A
02A0 F500    R      MOV    value+01H,A
02A2 8E00    R      MOV    value+02H,R6
02A4 8F00    R      MOV    value+03H,R7
                                           ; SOURCE LINE # 159 
02A6 E500    R      MOV    A,value
02A8 4500    R      ORL    A,value+01H
02AA 4500    R      ORL    A,value+02H
02AC 4500    R      ORL    A,value+03H
02AE 6020           JZ     ?ELSE44
02B0 C000    R      PUSH   value
02B2 C000    R      PUSH   value+01H
02B4 C000    R      PUSH   value+02H
02B6 C000    R      PUSH   value+03H
02B8 E4             CLR    A
02B9 FF             MOV    R7,A
02BA FC             MOV    R4,A
02BB FD             MOV    R5,A
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 18

02BC 7EFF           MOV    R6,#0FFH
02BE 120000  R      LCALL  ?C_CMPL
02C1 BF0002         CJNE   R7,#000H,?LAB174
02C4 800A           SJMP   ?ELSE44
02C6         ?LAB174:
02C6 E4             CLR    A
02C7 FE             MOV    R6,A
02C8 7F03           MOV    R7,#003H
02CA 120000  R      LCALL  _oops
02CD 020000  R      LJMP   ?NXT78
02D0         ?ELSE44:
                                           ; SOURCE LINE # 160 
02D0 E500    R      MOV    A,startAddress
02D2 B40005         CJNE   A,#000H,?LAB177
02D5 E500    R      MOV    A,startAddress+01H
02D7 B50000  R      CJNE   A,numCoils,?LAB177
02DA         ?LAB177:
02DA 400A           JC     ?ELSE45
02DC E4             CLR    A
02DD FE             MOV    R6,A
02DE 7F02           MOV    R7,#002H
02E0 120000  R      LCALL  _oops
02E3 020000  R      LJMP   ?NXT78
02E6         ?ELSE45:
                                           ; SOURCE LINE # 161 
02E6 AE00    R      MOV    R6,startAddress
02E8 AF00    R      MOV    R7,startAddress+01H
02EA AC00    R      MOV    R4,value+02H
02EC AD00    R      MOV    R5,value+03H
02EE 120000  R      LCALL  _coilWrite
02F1 400A           JC     ?ELSE46
02F3 E4             CLR    A
02F4 FE             MOV    R6,A
02F5 7F04           MOV    R7,#004H
02F7 120000  R      LCALL  _oops
02FA 020000  R      LJMP   ?NXT78
02FD         ?ELSE46:
                                           ; SOURCE LINE # 162 
02FD 7F06           MOV    R7,#006H
02FF 020000  R      LJMP   _write
0302         ?CASE23:
                                           ; SOURCE LINE # 166 
0302 AF00    R      MOV    R7,buf+02H
0304 AD00    R      MOV    R5,buf+03H
0306 120000  R      LCALL  _bytesToWord
0309 8E00    R      MOV    startAddress,R6
030B 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 167 
030D AF00    R      MOV    R7,buf+04H
030F AD00    R      MOV    R5,buf+05H
0311 120000  R      LCALL  _bytesToWord
0314 E4             CLR    A
0315 F500    R      MOV    value,A
0317 F500    R      MOV    value+01H,A
0319 8E00    R      MOV    value+02H,R6
031B 8F00    R      MOV    value+03H,R7
                                           ; SOURCE LINE # 168 
031D E500    R      MOV    A,startAddress
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 19

031F B40005         CJNE   A,#000H,?LAB179
0322 E500    R      MOV    A,startAddress+01H
0324 B50000  R      CJNE   A,numHoldingRegisters,?LAB179
0327         ?LAB179:
0327 400A           JC     ?ELSE47
0329 E4             CLR    A
032A FE             MOV    R6,A
032B 7F02           MOV    R7,#002H
032D 120000  R      LCALL  _oops
0330 020000  R      LJMP   ?NXT78
0333         ?ELSE47:
                                           ; SOURCE LINE # 169 
0333 AE00    R      MOV    R6,startAddress
0335 AF00    R      MOV    R7,startAddress+01H
0337 AC00    R      MOV    R4,value+02H
0339 AD00    R      MOV    R5,value+03H
033B 120000  R      LCALL  _holdingRegisterWrite
033E 400A           JC     ?ELSE48
0340 E4             CLR    A
0341 FE             MOV    R6,A
0342 7F04           MOV    R7,#004H
0344 120000  R      LCALL  _oops
0347 020000  R      LJMP   ?NXT78
034A         ?ELSE48:
                                           ; SOURCE LINE # 170 
034A 7F06           MOV    R7,#006H
034C 020000  R      LJMP   _write
034F         ?CASE24:
                                           ; SOURCE LINE # 174 
034F AF00    R      MOV    R7,buf+02H
0351 AD00    R      MOV    R5,buf+03H
0353 120000  R      LCALL  _bytesToWord
0356 8E00    R      MOV    startAddress,R6
0358 8F00    R      MOV    startAddress+01H,R7
                                           ; SOURCE LINE # 175 
035A AF00    R      MOV    R7,buf+04H
035C AD00    R      MOV    R5,buf+05H
035E 120000  R      LCALL  _bytesToWord
0361 8E00    R      MOV    quantity,R6
0363 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 176 
0365 E500    R      MOV    A,quantity
0367 4500    R      ORL    A,quantity+01H
0369 601D           JZ     ?LAB181
036B E500    R      MOV    A,quantity
036D B40006         CJNE   A,#000H,?LAB183
0370 E500    R      MOV    A,quantity+01H
0372 B47001         CJNE   A,#070H,?LAB183
0375 D3             SETB   C
0376         ?LAB183:
0376 5010           JNC    ?LAB181
0378 AE00    R      MOV    R6,quantity
037A AF00    R      MOV    R7,quantity+01H
037C 120000  R      LCALL  _div8RndUp
037F E4             CLR    A
0380 B50605         CJNE   A,AR6,?LAB181
0383 E500    R      MOV    A,buf+06H
0385 6F             XRL    A,R7
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 20

0386 600A           JZ     ?ELSE49
0388         ?LAB181:
0388 E4             CLR    A
0389 FE             MOV    R6,A
038A 7F03           MOV    R7,#003H
038C 120000  R      LCALL  _oops
038F 020000  R      LJMP   ?NXT78
0392         ?ELSE49:
                                           ; SOURCE LINE # 177 
0392 E500    R      MOV    A,quantity+01H
0394 2500    R      ADD    A,startAddress+01H
0396 FE             MOV    R6,A
0397 E500    R      MOV    A,quantity
0399 3500    R      ADDC   A,startAddress
039B B40005         CJNE   A,#000H,?LAB186
039E EE             MOV    A,R6
039F B50001  R      CJNE   A,numCoils,?LAB186
03A2 D3             SETB   C
03A3         ?LAB186:
03A3 400A           JC     ?ELSE50
03A5 E4             CLR    A
03A6 FE             MOV    R6,A
03A7 7F02           MOV    R7,#002H
03A9 120000  R      LCALL  _oops
03AC 020000  R      LJMP   ?NXT78
03AF         ?ELSE50:
                                           ; SOURCE LINE # 179 
03AF 750000  R      MOV    j,#000H
03B2         ?FOR12:
03B2 E4             CLR    A
03B3 B50005  R      CJNE   A,quantity,?LAB188
03B6 E500    R      MOV    A,j
03B8 B50000  R      CJNE   A,quantity+01H,?LAB188
03BB         ?LAB188:
03BB 5064           JNC    ?NXT98
                                           ; SOURCE LINE # 180 
03BD E500    R      MOV    A,j
03BF 5407           ANL    A,#007H
03C1 7A00           MOV    R2,#000H
03C3 F8             MOV    R0,A
03C4 08             INC    R0
03C5 7401           MOV    A,#001H
03C7 8005           SJMP   ?LAB190
03C9         ?LAB191:
03C9 C3             CLR    C
03CA 33             RLC    A
03CB CA             XCH    A,R2
03CC 33             RLC    A
03CD CA             XCH    A,R2
03CE         ?LAB190:
03CE D8F9           DJNZ   R0,?LAB191
03D0 FE             MOV    R6,A
03D1 E500    R      MOV    A,j
03D3 03             RR     A
03D4 03             RR     A
03D5 03             RR     A
03D6 541F           ANL    A,#01FH
03D8 2400    R      ADD    A,#buf+07H
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 21

03DA F9             MOV    R1,A
03DB E7             MOV    A,@R1
03DC FF             MOV    R7,A
03DD EE             MOV    A,R6
03DE 5207           ANL    AR7,A
03E0 E4             CLR    A
03E1 33             RLC    A
03E2 E4             CLR    A
03E3 5001           JNC    ?NXT100
03E5 14             DEC    A
03E6         ?NXT100:
03E6 F500    R      MOV    value,A
03E8 850000  R      MOV    value+01H,value
03EB 750000  R      MOV    value+02H,#000H
03EE 8F00    R      MOV    value+03H,R7
                                           ; SOURCE LINE # 181 
03F0 E500    R      MOV    A,value
03F2 4500    R      ORL    A,value+01H
03F4 4500    R      ORL    A,value+02H
03F6 4500    R      ORL    A,value+03H
03F8 600A           JZ     ?NXT101
03FA E4             CLR    A
03FB F500    R      MOV    value,A
03FD F500    R      MOV    value+01H,A
03FF 7500FF  R      MOV    value+02H,#0FFH
0402 F500    R      MOV    value+03H,A
0404         ?NXT101:
                                           ; SOURCE LINE # 182 
0404 E500    R      MOV    A,startAddress+01H
0406 2500    R      ADD    A,j
0408 FF             MOV    R7,A
0409 E4             CLR    A
040A 3500    R      ADDC   A,startAddress
040C FE             MOV    R6,A
040D AC00    R      MOV    R4,value+02H
040F AD00    R      MOV    R5,value+03H
0411 120000  R      LCALL  _coilWrite
0414 4007           JC     ?NXT99
                                           ; SOURCE LINE # 183 
0416 E4             CLR    A
0417 FE             MOV    R6,A
0418 7F04           MOV    R7,#004H
041A 020000  R      LJMP   _oops
041D         ?NXT99:
                                           ; SOURCE LINE # 179 
041D 0500    R      INC    j
041F 8091           SJMP   ?FOR12
0421         ?NXT98:
                                           ; SOURCE LINE # 187 
0421 7F06           MOV    R7,#006H
0423 020000  R      LJMP   _write
0426         ?CASE25:
                                           ; SOURCE LINE # 192 
0426 AF00    R      MOV    R7,buf+02H
0428 AD00    R      MOV    R5,buf+03H
042A 120000  R      LCALL  _bytesToWord
042D 8E00    R      MOV    startAddress,R6
042F 8F00    R      MOV    startAddress+01H,R7
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 22

                                           ; SOURCE LINE # 193 
0431 AF00    R      MOV    R7,buf+04H
0433 AD00    R      MOV    R5,buf+05H
0435 120000  R      LCALL  _bytesToWord
0438 8E00    R      MOV    quantity,R6
043A 8F00    R      MOV    quantity+01H,R7
                                           ; SOURCE LINE # 194 
043C E500    R      MOV    A,quantity
043E 4500    R      ORL    A,quantity+01H
0440 6020           JZ     ?LAB193
0442 E500    R      MOV    A,quantity
0444 B40006         CJNE   A,#000H,?LAB195
0447 E500    R      MOV    A,quantity+01H
0449 B40701         CJNE   A,#007H,?LAB195
044C D3             SETB   C
044D         ?LAB195:
044D 5013           JNC    ?LAB193
044F AA00    R      MOV    R2,quantity
0451 E500    R      MOV    A,quantity+01H
0453 C3             CLR    C
0454 33             RLC    A
0455 CA             XCH    A,R2
0456 33             RLC    A
0457 CA             XCH    A,R2
0458 FB             MOV    R3,A
0459 E4             CLR    A
045A B50205         CJNE   A,AR2,?LAB193
045D E500    R      MOV    A,buf+06H
045F 6B             XRL    A,R3
0460 6009           JZ     ?ELSE53
0462         ?LAB193:
0462 E4             CLR    A
0463 FE             MOV    R6,A
0464 7F03           MOV    R7,#003H
0466 120000  R      LCALL  _oops
0469 8070           SJMP   ?NXT78
046B         ?ELSE53:
                                           ; SOURCE LINE # 195 
046B E500    R      MOV    A,quantity+01H
046D 2500    R      ADD    A,startAddress+01H
046F FE             MOV    R6,A
0470 E500    R      MOV    A,quantity
0472 3500    R      ADDC   A,startAddress
0474 B40005         CJNE   A,#000H,?LAB199
0477 EE             MOV    A,R6
0478 B50001  R      CJNE   A,numHoldingRegisters,?LAB199
047B D3             SETB   C
047C         ?LAB199:
047C 4009           JC     ?ELSE54
047E E4             CLR    A
047F FE             MOV    R6,A
0480 7F02           MOV    R7,#002H
0482 120000  R      LCALL  _oops
0485 8054           SJMP   ?NXT78
0487         ?ELSE54:
                                           ; SOURCE LINE # 197 
0487 750000  R      MOV    j,#000H
048A         ?FOR13:
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 23

048A E4             CLR    A
048B B50005  R      CJNE   A,quantity,?LAB201
048E E500    R      MOV    A,j
0490 B50000  R      CJNE   A,quantity+01H,?LAB201
0493         ?LAB201:
0493 503A           JNC    ?NXT105
                                           ; SOURCE LINE # 198 
0495 E500    R      MOV    A,startAddress+01H
0497 2500    R      ADD    A,j
0499 FF             MOV    R7,A
049A E4             CLR    A
049B 3500    R      ADDC   A,startAddress
049D FE             MOV    R6,A
049E C006           PUSH   AR6
04A0 C007           PUSH   AR7
04A2 75F002         MOV    B,#002H
04A5 E500    R      MOV    A,j
04A7 A4             MUL    AB
04A8 FE             MOV    R6,A
04A9 2400    R      ADD    A,#buf+07H
04AB F8             MOV    R0,A
04AC 8607           MOV    AR7,@R0
04AE EE             MOV    A,R6
04AF 2400    R      ADD    A,#buf+08H
04B1 F8             MOV    R0,A
04B2 8605           MOV    AR5,@R0
04B4 120000  R      LCALL  _bytesToWord
04B7 8E04           MOV    AR4,R6
04B9 8F05           MOV    AR5,R7
04BB D007           POP    AR7
04BD D006           POP    AR6
04BF 120000  R      LCALL  _holdingRegisterWrite
04C2 4007           JC     ?NXT106
                                           ; SOURCE LINE # 199 
04C4 E4             CLR    A
04C5 FE             MOV    R6,A
04C6 7F04           MOV    R7,#004H
04C8 020000  R      LJMP   _oops
04CB         ?NXT106:
                                           ; SOURCE LINE # 197 
04CB 0500    R      INC    j
04CD 80BB           SJMP   ?FOR13
04CF         ?NXT105:
                                           ; SOURCE LINE # 203 
04CF 7F06           MOV    R7,#006H
04D1 020000  R      LJMP   _write
04D4         ?DEFAULT1:
                                           ; SOURCE LINE # 208 
04D4 E4             CLR    A
04D5 FE             MOV    R6,A
04D6 7F01           MOV    R7,#001H
04D8 120000  R      LCALL  _oops
04DB         ?NXT78:

04DB         ?NXT71:
                                           ; SOURCE LINE # 213 
04DB 22             RET    

RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 24

            ; FUNCTION modbusPoll (END)

            ; FUNCTION _boolRead (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
                                           ; SOURCE LINE # 218 
0000 E500    R      MOV    A,numCoils
0002 24FF           ADD    A,#0FFH
0004 F8             MOV    R0,A
0005 E4             CLR    A
0006 34FF           ADDC   A,#0FFH
0008 AB00           MOV    R3,AR0
000A F5F0           MOV    B,A
000C EE             MOV    A,R6
000D B5F005         CJNE   A,B,?LAB211
0010 EF             MOV    A,R7
0011 B50301         CJNE   A,AR3,?LAB211
0014 D3             SETB   C
0015         ?LAB211:
0015 4003           JC     ?NXT110
0017 7F02           MOV    R7,#002H
                                           ; SOURCE LINE # 222 
0019 22             RET    
001A         ?NXT110:
                                           ; SOURCE LINE # 219 
001A 8F02           MOV    AR2,R7
001C 0A             INC    R2
001D 7401           MOV    A,#001H
001F 8002           SJMP   ?LAB214
0021         ?LAB215:
0021 C3             CLR    C
0022 33             RLC    A
0023         ?LAB214:
0023 DAFC           DJNZ   R2,?LAB215
0025 5500    R      ANL    A,outputState
0027 F500    R      MOV    boolStatus,A
                                           ; SOURCE LINE # 220 
0029 6003           JZ     ?NXT111
002B 750001  R      MOV    boolStatus,#001H
002E         ?NXT111:
                                           ; SOURCE LINE # 221 
002E AF00    R      MOV    R7,boolStatus
                                           ; SOURCE LINE # 222 
0030 22             RET    

            ; FUNCTION _boolRead (END)

            ; FUNCTION _wordRead (BEGIN)
              ; Register R4R5 is assigned to parameter startAddress
                                           ; SOURCE LINE # 224 
0000 8E04           MOV    AR4,R6
0002 8F05           MOV    AR5,R7
                                           ; SOURCE LINE # 225 
0004 E500    R      MOV    A,numHoldingRegisters
0006 24FF           ADD    A,#0FFH
0008 F8             MOV    R0,A
0009 E4             CLR    A
000A 34FF           ADDC   A,#0FFH
000C AB00           MOV    R3,AR0
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 25

000E F5F0           MOV    B,A
0010 EE             MOV    A,R6
0011 B5F005         CJNE   A,B,?LAB221
0014 EF             MOV    A,R7
0015 B50301         CJNE   A,AR3,?LAB221
0018 D3             SETB   C
0019         ?LAB221:
0019 4007           JC     ?NXT113
001B 74FF           MOV    A,#0FFH
001D FF             MOV    R7,A
001E FE             MOV    R6,A
001F FC             MOV    R4,A
0020 FD             MOV    R5,A
                                           ; SOURCE LINE # 227 
0021 22             RET    
0022         ?NXT113:
                                           ; SOURCE LINE # 226 
0022 8C06           MOV    AR6,R4
0024 8D07           MOV    AR7,R5
0026 120000  R      LCALL  _EEPROMread
0029 E4             CLR    A
002A FC             MOV    R4,A
002B FD             MOV    R5,A
                                           ; SOURCE LINE # 227 
002C 22             RET    

            ; FUNCTION _wordRead (END)

            ; FUNCTION _coilWrite (BEGIN)
              ; Register R6R7 is assigned to parameter startAddress
              ; Register R4R5 is assigned to parameter value
                                           ; SOURCE LINE # 230 
0000 E500    R      MOV    A,numCoils
0002 24FF           ADD    A,#0FFH
0004 F8             MOV    R0,A
0005 E4             CLR    A
0006 34FF           ADDC   A,#0FFH
0008 AB00           MOV    R3,AR0
000A F5F0           MOV    B,A
000C EE             MOV    A,R6
000D B5F005         CJNE   A,B,?LAB233
0010 EF             MOV    A,R7
0011 B50301         CJNE   A,AR3,?LAB233
0014 D3             SETB   C
0015         ?LAB233:
0015 4002           JC     ?NXT116
0017 C3             CLR    C
                                           ; SOURCE LINE # 235 
0018 22             RET    
0019         ?NXT116:
                                           ; SOURCE LINE # 231 
0019 EC             MOV    A,R4
001A 4D             ORL    A,R5
001B 7010           JNZ    ?ELSE65
001D 7401           MOV    A,#001H
001F 8F02           MOV    AR2,R7
0021 0A             INC    R2
0022 8002           SJMP   ?LAB236
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 26

0024         ?LAB237:
0024 C3             CLR    C
0025 33             RLC    A
0026         ?LAB236:
0026 DAFC           DJNZ   R2,?LAB237
0028 F4             CPL    A
0029 5200    R      ANL    outputState,A
002B 800D           SJMP   ?NXT117
002D         ?ELSE65:
                                           ; SOURCE LINE # 232 
002D 8F02           MOV    AR2,R7
002F 0A             INC    R2
0030 7401           MOV    A,#001H
0032 8002           SJMP   ?LAB238
0034         ?LAB239:
0034 C3             CLR    C
0035 33             RLC    A
0036         ?LAB238:
0036 DAFC           DJNZ   R2,?LAB239
0038 4200    R      ORL    outputState,A
003A         ?NXT117:
                                           ; SOURCE LINE # 233 
003A E500    R      MOV    A,outputState
003C F4             CPL    A
003D F590           MOV    P1,A
                                           ; SOURCE LINE # 234 
003F D3             SETB   C
                                           ; SOURCE LINE # 235 
0040 22             RET    

            ; FUNCTION _coilWrite (END)

            ; FUNCTION _holdingRegisterWrite (BEGIN)
                                           ; SOURCE LINE # 237 
0000 8E00    R      MOV    startAddress,R6
0002 8F00    R      MOV    startAddress+01H,R7
0004 8C00    R      MOV    value,R4
0006 8D00    R      MOV    value+01H,R5
                                           ; SOURCE LINE # 238 
0008 E500    R      MOV    A,numHoldingRegisters
000A 24FF           ADD    A,#0FFH
000C F8             MOV    R0,A
000D E4             CLR    A
000E 34FF           ADDC   A,#0FFH
0010 AB00           MOV    R3,AR0
0012 F5F0           MOV    B,A
0014 E500    R      MOV    A,startAddress
0016 B5F006         CJNE   A,B,?LAB245
0019 E500    R      MOV    A,startAddress+01H
001B B50301         CJNE   A,AR3,?LAB245
001E D3             SETB   C
001F         ?LAB245:
001F 4002           JC     ?NXT119
0021 C3             CLR    C
                                           ; SOURCE LINE # 241 
0022 22             RET    
0023         ?NXT119:
                                           ; SOURCE LINE # 239 
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 27

0023 AE00    R      MOV    R6,startAddress
0025 AF00    R      MOV    R7,startAddress+01H
0027 AC00    R      MOV    R4,value
0029 AD00    R      MOV    R5,value+01H
002B 120000  R      LCALL  _EEPROMwrite
                                           ; SOURCE LINE # 240 
002E D3             SETB   C
                                           ; SOURCE LINE # 241 
002F 22             RET    

            ; FUNCTION _holdingRegisterWrite (END)

            ; FUNCTION _oops (BEGIN)
              ; Register R6R7 is assigned to parameter errCode
                                           ; SOURCE LINE # 244 
0000 430080  R      ORL    buf+01H,#080H
                                           ; SOURCE LINE # 245 
0003 8F00    R      MOV    buf+02H,R7
                                           ; SOURCE LINE # 246 
0005 7F03           MOV    R7,#003H
0007 020000  R      LJMP   _write

            ; FUNCTION _oops (END)

            ; FUNCTION _write (BEGIN)
                                           ; SOURCE LINE # 249 
0000 8F00    R      MOV    len,R7
                                           ; SOURCE LINE # 253 
0002 E500    R      MOV    A,buf
0004 6043           JZ     ?NXT123
                                           ; SOURCE LINE # 254 
0006 120000  R      LCALL  _crc
                                           ; SOURCE LINE # 256 
0009 EF             MOV    A,R7
000A FB             MOV    R3,A
                                           ; SOURCE LINE # 254 
000B 8E00    R      MOV    CRC,R6
000D 8F00    R      MOV    CRC+01H,R7
                                           ; SOURCE LINE # 256 
000F E500    R      MOV    A,len
0011 2400    R      ADD    A,#buf
0013 F8             MOV    R0,A
0014 A603           MOV    @R0,AR3
                                           ; SOURCE LINE # 257 
0016 E500    R      MOV    A,len
0018 2400    R      ADD    A,#buf+01H
001A F8             MOV    R0,A
001B A600    R      MOV    @R0,CRC
                                           ; SOURCE LINE # 259 
001D D2B5           SETB   T1
                                           ; SOURCE LINE # 260 
001F 750000  R      MOV    i,#000H
0022         ?FOR15:
0022 E500    R      MOV    A,len
0024 2402           ADD    A,#002H
0026 FB             MOV    R3,A
0027 E4             CLR    A
0028 33             RLC    A
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 28

0029 F5F0           MOV    B,A
002B B2F7           CPL    B.7
002D 7480           MOV    A,#080H
002F B5F005         CJNE   A,B,?LAB254
0032 E500    R      MOV    A,i
0034 B50300         CJNE   A,AR3,?LAB254
0037         ?LAB254:
0037 500E           JNC    ?NXT124
0039 E500    R      MOV    A,i
003B 2400    R      ADD    A,#buf
003D F8             MOV    R0,A
003E 8607           MOV    AR7,@R0
0040 120000  R      LCALL  _serialTX
0043 0500    R      INC    i
0045 80DB           SJMP   ?FOR15
0047         ?NXT124:
                                           ; SOURCE LINE # 261 
0047 C2B5           CLR    T1
0049         ?NXT123:
                                           ; SOURCE LINE # 263 
0049 22             RET    

            ; FUNCTION _write (END)

            ; FUNCTION _crc (BEGIN)
              ; Register R7 is assigned to parameter len
              ; R4R5 is assigned to crc
                                           ; SOURCE LINE # 268 
0000 74FF           MOV    A,#0FFH
0002 FC             MOV    R4,A
0003 FD             MOV    R5,A
              ; R6 is assigned to i
                                           ; SOURCE LINE # 270 
0004 7E00           MOV    R6,#000H
0006         ?FOR18:
0006 EE             MOV    A,R6
0007 B50700         CJNE   A,AR7,?LAB263
000A         ?LAB263:
000A 5032           JNC    ?NXT131
                                           ; SOURCE LINE # 271 
000C 2400    R      ADD    A,#buf
000E F8             MOV    R0,A
000F E6             MOV    A,@R0
0010 FB             MOV    R3,A
0011 ED             MOV    A,R5
0012 6B             XRL    A,R3
0013 FD             MOV    R5,A
                                           ; SOURCE LINE # 272 
0014 750000  R      MOV    j,#000H
0017         ?FOR19:
                                           ; SOURCE LINE # 273 
0017 ED             MOV    A,R5
0018 5401           ANL    A,#001H
001A 24FF           ADD    A,#0FFH
001C 9200    R      MOV    lsb,C
                                           ; SOURCE LINE # 274 
001E 8D03           MOV    AR3,R5
0020 EC             MOV    A,R4
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 29

0021 C3             CLR    C
0022 13             RRC    A
0023 CB             XCH    A,R3
0024 13             RRC    A
0025 CB             XCH    A,R3
0026 FC             MOV    R4,A
0027 8B05           MOV    AR5,R3
                                           ; SOURCE LINE # 275 
0029 300008  R      JNB    lsb,?NXT134
                                           ; SOURCE LINE # 276 
002C EB             MOV    A,R3
002D 6401           XRL    A,#001H
002F FD             MOV    R5,A
0030 EC             MOV    A,R4
0031 64A0           XRL    A,#0A0H
0033 FC             MOV    R4,A
0034         ?NXT134:
                                           ; SOURCE LINE # 272 
0034 0500    R      INC    j
0036 E500    R      MOV    A,j
0038 B408DC         CJNE   A,#008H,?FOR19
                                           ; SOURCE LINE # 270 
003B 0E             INC    R6
003C 80C8           SJMP   ?FOR18
003E         ?NXT131:
                                           ; SOURCE LINE # 280 
003E 8C06           MOV    AR6,R4
0040 8D07           MOV    AR7,R5
                                           ; SOURCE LINE # 281 
0042 22             RET    

            ; FUNCTION _crc (END)

            ; FUNCTION _div8RndUp (BEGIN)
              ; Register R6R7 is assigned to parameter value
                                           ; SOURCE LINE # 284 
0000 EF             MOV    A,R7
0001 2407           ADD    A,#007H
0003 FF             MOV    R7,A
0004 E4             CLR    A
0005 3E             ADDC   A,R6
0006 75F003         MOV    B,#003H
0009         ?LAB269:
0009 C3             CLR    C
000A 13             RRC    A
000B CF             XCH    A,R7
000C 13             RRC    A
000D CF             XCH    A,R7
000E D5F0F8         DJNZ   B,?LAB269
0011 FE             MOV    R6,A
                                           ; SOURCE LINE # 285 
0012 22             RET    

            ; FUNCTION _div8RndUp (END)

            ; FUNCTION _bytesToWord (BEGIN)
              ; Register R7 is assigned to parameter high
              ; Register R5 is assigned to parameter low
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 30

                                           ; SOURCE LINE # 288 
0000 ED             MOV    A,R5
0001 FB             MOV    R3,A
0002 7A00           MOV    R2,#000H
0004 C002           PUSH   AR2
0006 C003           PUSH   AR3
0008 EF             MOV    A,R7
0009 FA             MOV    R2,A
000A D007           POP    AR7
000C D0E0           POP    ACC
000E 4A             ORL    A,R2
000F FE             MOV    R6,A
                                           ; SOURCE LINE # 289 
0010 22             RET    

            ; FUNCTION _bytesToWord (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 11 
0000 750008  R      MOV    numCoils,#008H
                                           ; SOURCE LINE # 12 
0003 E4             CLR    A
0004 F500    R      MOV    numDiscreteInputs,A
                                           ; SOURCE LINE # 13 
0006 750004  R      MOV    numHoldingRegisters,#004H
                                           ; SOURCE LINE # 15 
0009 C2B5           CLR    T1
                                           ; SOURCE LINE # 17 
000B 75004B  R      MOV    baud,#04BH
000E F500    R      MOV    baud+01H,A
                                           ; SOURCE LINE # 18 
0010 F500    R      MOV    id,A
0012 750001  R      MOV    id+01H,#001H
                                           ; SOURCE LINE # 20 
0015 30B414         JNB    T0,?NXT138
                                           ; SOURCE LINE # 21 
0018 FE             MOV    R6,A
0019 FF             MOV    R7,A
001A 120000  R      LCALL  _EEPROMread
001D 8E00    R      MOV    baud,R6
001F 8F00    R      MOV    baud+01H,R7
                                           ; SOURCE LINE # 22 
0021 E4             CLR    A
0022 FE             MOV    R6,A
0023 7F01           MOV    R7,#001H
0025 120000  R      LCALL  _EEPROMread
0028 8E00    R      MOV    id,R6
002A 8F00    R      MOV    id+01H,R7
002C         ?NXT138:
                                           ; SOURCE LINE # 24 
002C AE00    R      MOV    R6,baud
002E AF00    R      MOV    R7,baud+01H
0030 120000  R      LCALL  _serialInit
                                           ; SOURCE LINE # 25 
0033 AE00    R      MOV    R6,baud
0035 AF00    R      MOV    R7,baud+01H
0037 120000  R      LCALL  _modbusBegin
003A         ?WHILE11:
RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 31

                                           ; SOURCE LINE # 28 
003A 120000  R      LCALL  modbusPoll
003D 80FB           SJMP   ?WHILE11

            ; FUNCTION main (END)

RC51 COMPILER V06.20.17.263,  DO_8               01/06/23  15:57:47  PAGE 33



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  1 WARNING,  0 ERROR
