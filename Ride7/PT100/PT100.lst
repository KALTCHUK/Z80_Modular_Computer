RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  1

QCW(0x00002F32)

DOS RC51 COMPILER V06.20.17.263, COMPILATION OF MODULE PT100     
OBJECT MODULE PLACED IN C:\Users\ricardo\Documents\GitHub\Z80_Modular_Computer\R
            -ide7\PT100\PT100.obj
COMPILER INVOKED BY: QUIET GENERATEDEPFILE OJ(C:\Users\ricardo\Documents\GitHub\
            -Z80_Modular_Computer\Ride7\PT100\PT100.obj) PIN(C:\Users\ricardo\Do
            -cuments\Raisonance\Ride\Inc;C:\Users\ricardo\Documents\Raisonance\R
            -ide\Inc\51) PIN(C:\Users\ricardo\Documents\Raisonance\Ride\\inc\51)
            - NOAM CD PR(C:\Users\ricardo\Documents\GitHub\Z80_Modular_Computer\
            -Ride7\PT100\PT100.lst) FP(NOFLOAT) IP NOIS UNSIGNEDCHAR ET(CHAR) PR
            - PL(60) PW(80) OE(1) OT(7,SPEED) RB(0) MAXERR(25) MAXWAR(25) SM MOD
            -517(NODP8,NOAU) 

stmt level    source
   1          /*
   2           PT100.c
   3            */
   4          
   5          #include <REG51.h>
   6          #include "Serial.h"
   7          
   8          // Definitions
   9          #define CR      0x0D
  10          #define LF      0x0A
  11          #define _CS     INT0
  12          #define _RD     INT1
  13          #define _WR     T0
  14          #define _INT    T1
  15          
  16          unsigned int milli;
  17          
  18          // Function Prototyping
  19          void greeting(void);
  20          void printASCII(unsigned char v);
  21          void milliStart(void);
  22          void milliStop(void);
  23          void newLine(void);
  24          unsigned char readADC(void);
  25          
  26          void main() {
  27   1          _CS = 1;
  28   1          _RD = 1;
  29   1          _WR = 1;
  30   1          _INT = 1;
  31   1          P1 = 0xff;
  32   1      
  33   1          baud = 19200;
  34   1      	serialInit(baud);
  35   1      	
  36   1          greeting();
  37   1      
  38   1      	while (1) {
  39   2              printASCII(readADC());
  40   2              milliStart();
  41   2              while(milli < 1);
  42   2              milliStop();
  43   2          }
  44   1      }
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  4

  45          
  46          void timer0_isr() interrupt 1 {
  47   1          TH0 = 0xfc;        //Reload the TIMER0.
  48   1          TL0 = 0x66;
  49   1      
  50   1          milli++;
  51   1      }

*** WARNING C233 IN LINE 51 OF C:\Users\ricardo\Documents\GitHub\Z80_Modular_Co
            -mputer\Ride7\PT100\PT100.c : using absolute registers together with
            - interrupts can cause register corruptions (mixup of register banks
            -)
  52          
  53          void greeting(void) {
  54   1          char msg[]="*** PT100 reading ***";
  55   1          int i;
  56   1      
  57   1          newLine();
  58   1          for(i=0; msg[i] != 0; i++)
  59   1              serialTX(msg[i]);
  60   1          newLine();
  61   1      }
  62          
  63          void printASCII(unsigned char v) {
  64   1          unsigned char buf[2], vDiv, vRem;
  65   1      
  66   1          vDiv = v / 0xa;
  67   1          vRem = v % 0xa;
  68   1      
  69   1          if(vDiv < 0xa)
  70   1              buf[0] = vDiv + '0';
  71   1          else
  72   1              buf[0] = vDiv + 'A' - 0xa;
  73   1      
  74   1          if(vRem < 0xa)
  75   1              buf[0] = vRem + '0';
  76   1          else
  77   1              buf[0] = vRem + 'A' - 0xa;
  78   1      
  79   1          newLine();
  80   1          serialTX(buf[0]);
  81   1          serialTX(buf[1]);
  82   1      }
  83          
  84          void milliStart(void) {
  85   1      	ET0 = 0;				//Disable TIMER0 interrupt while configuring it.
  86   1          TMOD |= 0x01;      //TIMER0 = mode_1.
  87   1          TH0 = 0xfc;        //Load the timer value for 1ms tick (crysta
            -l = 11.059MHz).
  88   1          TL0 = 0x66;
  89   1          TR0 = 1;           //Turn ON TIMER0.
  90   1          ET0 = 1;           //Enable TIMER0 Interrupt.
  91   1          EA = 1;            //Enable Global Interrupt.
  92   1      	
  93   1      	milli = 0;
  94   1      }
  95          
  96          void milliStop(void) {
  97   1          ET0 = 0;           //Disable TIMER0 Interrupt.
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  8

  98   1      }
  99          
 100          void newLine(void) {
 101   1          serialTX(CR);
 102   1          serialTX(LF);
 103   1      }
 104          
 105          unsigned char readADC(void) {
 106   1          unsigned char i, val=0;
 107   1          unsigned int sum=0;
 108   1      
 109   1          for(i=0; i<16; i++) {   //Read 16 samples.
 110   2              _CS = 0;
 111   2              _WR = 0;
 112   2              val++;              //Just a delay.
 113   2              _WR = 1;
 114   2              _CS = 1;
 115   2          
 116   2              while(_INT == 1);   //Wait for interrupt signal (end of AD
            -C conversion cycle).
 117   2          
 118   2              _CS = 0;
 119   2              _RD = 0;
 120   2              _CS = 0;
 121   2              while(_INT == 0);   //Wait for valid data.
 122   2              sum += P1;
 123   2              _RD = 1;
 124   2              _CS = 1;
 125   2          }
 126   1      
 127   1          val = sum/16;           //Average sample.
 128   1          return val;
 129   1      }
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE 10

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _serialInit (BEGIN)
              ; Register R6R7 is assigned to parameter baud
                                           ; SOURCE LINE # 25 
0000 438920         ORL    TMOD,#020H
                                           ; SOURCE LINE # 26 
0003 438780         ORL    PCON,#080H
                                           ; SOURCE LINE # 27 
0006 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 28 
0009 BE2507         CJNE   R6,#025H,?LAB9
000C EF             MOV    A,R7
000D 2480           ADD    A,#080H
000F 6051           JZ     ?CASE10
0011 8061           SJMP   ?NXT1
0013         ?LAB9:
0013 5021           JNC    ?LAB10
0015 EE             MOV    A,R6
0016 B40407         CJNE   A,#004H,?LAB11
0019 EF             MOV    A,R7
001A 2450           ADD    A,#050H
001C 6035           JZ     ?CASE7
001E 8054           SJMP   ?NXT1
0020         ?LAB11:
0020 EE             MOV    A,R6
0021 B40907         CJNE   A,#009H,?LAB12
0024 EF             MOV    A,R7
0025 24A0           ADD    A,#0A0H
0027 602F           JZ     ?CASE8
0029 8049           SJMP   ?NXT1
002B         ?LAB12:
002B EE             MOV    A,R6
002C B41245         CJNE   A,#012H,?NXT1
002F EF             MOV    A,R7
0030 2440           ADD    A,#040H
0032 6029           JZ     ?CASE9
0034 803E           SJMP   ?NXT1
0036         ?LAB10:
0036 EE             MOV    A,R6
0037 B44B05         CJNE   A,#04BH,?LAB13
003A EF             MOV    A,R7
003B 602A           JZ     ?CASE11
003D 8035           SJMP   ?NXT1
003F         ?LAB13:
003F EE             MOV    A,R6
0040 B47007         CJNE   A,#070H,?LAB14
0043 EF             MOV    A,R7
0044 2480           ADD    A,#080H
0046 6024           JZ     ?CASE12
0048 802A           SJMP   ?NXT1
004A         ?LAB14:
004A EE             MOV    A,R6
004B B4E126         CJNE   A,#0E1H,?NXT1
004E EF             MOV    A,R7
004F 6020           JZ     ?CASE13
0051 8021           SJMP   ?NXT1
0053         ?CASE7:
                                           ; SOURCE LINE # 30 
0053 758DD0         MOV    TH1,#0D0H
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  2

                                           ; SOURCE LINE # 31 
0056 801C           SJMP   ?NXT1
0058         ?CASE8:
                                           ; SOURCE LINE # 33 
0058 758DE8         MOV    TH1,#0E8H
                                           ; SOURCE LINE # 34 
005B 8017           SJMP   ?NXT1
005D         ?CASE9:
                                           ; SOURCE LINE # 36 
005D 758DF4         MOV    TH1,#0F4H
                                           ; SOURCE LINE # 37 
0060 8012           SJMP   ?NXT1
0062         ?CASE10:
                                           ; SOURCE LINE # 39 
0062 758DFA         MOV    TH1,#0FAH
                                           ; SOURCE LINE # 40 
0065 800D           SJMP   ?NXT1
0067         ?CASE11:
                                           ; SOURCE LINE # 42 
0067 758DFD         MOV    TH1,#0FDH
                                           ; SOURCE LINE # 43 
006A 8008           SJMP   ?NXT1
006C         ?CASE12:
                                           ; SOURCE LINE # 45 
006C 758DFE         MOV    TH1,#0FEH
                                           ; SOURCE LINE # 46 
006F 8003           SJMP   ?NXT1
0071         ?CASE13:
                                           ; SOURCE LINE # 48 
0071 758DFF         MOV    TH1,#0FFH
0074         ?NXT1:
                                           ; SOURCE LINE # 51 
0074 D28E           SETB   TR1
                                           ; SOURCE LINE # 52 
0076 22             RET    

            ; FUNCTION _serialInit (END)

            ; FUNCTION _serialTX (BEGIN)
              ; Register R7 is assigned to parameter x
                                           ; SOURCE LINE # 55 
0000 8F99           MOV    SBUF,R7
0002         ?WHILE1:
                                           ; SOURCE LINE # 56 
0002 3099FD         JNB    TI,?WHILE1
                                           ; SOURCE LINE # 57 
0005 C299           CLR    TI
                                           ; SOURCE LINE # 58 
0007 22             RET    

            ; FUNCTION _serialTX (END)

            ; FUNCTION serialRX (BEGIN)
0000         ?WHILE3:
                                           ; SOURCE LINE # 61 
0000 3098FD         JNB    RI,?WHILE3
                                           ; SOURCE LINE # 62 
0003 C298           CLR    RI
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  3

                                           ; SOURCE LINE # 63 
0005 AF99           MOV    R7,SBUF
                                           ; SOURCE LINE # 64 
0007 22             RET    

            ; FUNCTION serialRX (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 27 
0000 D2B2           SETB   INT0
                                           ; SOURCE LINE # 28 
0002 D2B3           SETB   INT1
                                           ; SOURCE LINE # 29 
0004 D2B4           SETB   T0
                                           ; SOURCE LINE # 30 
0006 D2B5           SETB   T1
                                           ; SOURCE LINE # 31 
0008 7590FF         MOV    P1,#0FFH
                                           ; SOURCE LINE # 33 
000B 75004B  R      MOV    baud,#04BH
000E E4             CLR    A
000F F500    R      MOV    baud+01H,A
                                           ; SOURCE LINE # 34 
0011 AE00    R      MOV    R6,baud
0013 AF00    R      MOV    R7,baud+01H
0015 120000  R      LCALL  _serialInit
                                           ; SOURCE LINE # 36 
0018 120000  R      LCALL  greeting
001B         ?WHILE6:
                                           ; SOURCE LINE # 39 
001B 120000  R      LCALL  readADC
001E 120000  R      LCALL  _printASCII
                                           ; SOURCE LINE # 40 
0021 120000  R      LCALL  milliStart
0024         ?WHILE7:
                                           ; SOURCE LINE # 41 
0024 E500    R      MOV    A,milli
0026 B40005         CJNE   A,#000H,?LAB23
0029 E500    R      MOV    A,milli+01H
002B B40100         CJNE   A,#001H,?LAB23
002E         ?LAB23:
002E 40F4           JC     ?WHILE7
                                           ; SOURCE LINE # 42 
0030 120000  R      LCALL  milliStop
0033 80E6           SJMP   ?WHILE6

            ; FUNCTION main (END)

            ; FUNCTION timer0_isr (BEGIN)
                                           ; SOURCE LINE # 46 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 47 
0004 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 48 
0007 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 50 
000A 0500    R      INC    milli+01H
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  5

000C E500    R      MOV    A,milli+01H
000E 7002           JNZ    ?NXT11
0010 0500    R      INC    milli
0012         ?NXT11:
0012 D0D0           POP    PSW
0014 D0E0           POP    ACC
                                           ; SOURCE LINE # 51 
0016 32             RETI   

            ; FUNCTION timer0_isr (END)

            ; FUNCTION greeting (BEGIN)
                                           ; SOURCE LINE # 54 
0000 7D05           MOV    R5,#005H
0002 7C00    R      MOV    R4,#HIGH(?STR?PT100?BASE)
0004 7800    R      MOV    R0,#LOW(?STR?PT100?BASE)
0006 7B01           MOV    R3,#001H
0008 E4             CLR    A
0009 FA             MOV    R2,A
000A 7900    R      MOV    R1,#msg
000C 7E16           MOV    R6,#016H
000E 120000  R      LCALL  ?C_CPY
                                           ; SOURCE LINE # 57 
0011 120000  R      LCALL  newLine
                                           ; SOURCE LINE # 58 
0014 E4             CLR    A
0015 F500    R      MOV    i,A
0017 F500    R      MOV    i+01H,A
0019         ?FOR1:
0019 E500    R      MOV    A,i+01H
001B 2400    R      ADD    A,#msg
001D F8             MOV    R0,A
001E E6             MOV    A,@R0
001F 6014           JZ     ?NXT14
                                           ; SOURCE LINE # 59 
0021 E500    R      MOV    A,i+01H
0023 2400    R      ADD    A,#msg
0025 F8             MOV    R0,A
0026 8607           MOV    AR7,@R0
0028 120000  R      LCALL  _serialTX
                                           ; SOURCE LINE # 58 
002B 0500    R      INC    i+01H
002D E500    R      MOV    A,i+01H
002F 70E8           JNZ    ?FOR1
0031 0500    R      INC    i
0033 80E4           SJMP   ?FOR1
0035         ?NXT14:
                                           ; SOURCE LINE # 60 
0035 020000  R      LJMP   newLine

            ; FUNCTION greeting (END)

            ; FUNCTION _printASCII (BEGIN)
              ; Register R7 is assigned to parameter v
              ; R5 is assigned to vDiv
                                           ; SOURCE LINE # 66 
0000 75F00A         MOV    B,#00AH
0003 EF             MOV    A,R7
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  6

0004 84             DIV    AB
0005 FD             MOV    R5,A
              ; R4 is assigned to vRem
                                           ; SOURCE LINE # 67 
0006 75F00A         MOV    B,#00AH
0009 EF             MOV    A,R7
000A 84             DIV    AB
000B ACF0           MOV    R4,B
                                           ; SOURCE LINE # 69 
000D BD0A00         CJNE   R5,#00AH,?LAB39
0010         ?LAB39:
0010 5007           JNC    ?ELSE2
                                           ; SOURCE LINE # 70 
0012 ED             MOV    A,R5
0013 2430           ADD    A,#030H
0015 F500    R      MOV    buf,A
0017 8005           SJMP   ?NXT18
0019         ?ELSE2:
                                           ; SOURCE LINE # 72 
0019 ED             MOV    A,R5
001A 2437           ADD    A,#037H
001C F500    R      MOV    buf,A
001E         ?NXT18:
                                           ; SOURCE LINE # 74 
001E EC             MOV    A,R4
001F B40A00         CJNE   A,#00AH,?LAB41
0022         ?LAB41:
0022 5007           JNC    ?ELSE3
                                           ; SOURCE LINE # 75 
0024 EC             MOV    A,R4
0025 2430           ADD    A,#030H
0027 F500    R      MOV    buf,A
0029 8005           SJMP   ?NXT19
002B         ?ELSE3:
                                           ; SOURCE LINE # 77 
002B EC             MOV    A,R4
002C 2437           ADD    A,#037H
002E F500    R      MOV    buf,A
0030         ?NXT19:
                                           ; SOURCE LINE # 79 
0030 120000  R      LCALL  newLine
                                           ; SOURCE LINE # 80 
0033 AF00    R      MOV    R7,buf
0035 120000  R      LCALL  _serialTX
                                           ; SOURCE LINE # 81 
0038 AF00    R      MOV    R7,buf+01H
003A 020000  R      LJMP   _serialTX

            ; FUNCTION _printASCII (END)

            ; FUNCTION milliStart (BEGIN)
                                           ; SOURCE LINE # 85 
0000 C2A9           CLR    ET0
                                           ; SOURCE LINE # 86 
0002 438901         ORL    TMOD,#001H
                                           ; SOURCE LINE # 87 
0005 758CFC         MOV    TH0,#0FCH
                                           ; SOURCE LINE # 88 
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  7

0008 758A66         MOV    TL0,#066H
                                           ; SOURCE LINE # 89 
000B D28C           SETB   TR0
                                           ; SOURCE LINE # 90 
000D D2A9           SETB   ET0
                                           ; SOURCE LINE # 91 
000F D2AF           SETB   EA
                                           ; SOURCE LINE # 93 
0011 E4             CLR    A
0012 F500    R      MOV    milli,A
0014 F500    R      MOV    milli+01H,A
                                           ; SOURCE LINE # 94 
0016 22             RET    

            ; FUNCTION milliStart (END)

            ; FUNCTION milliStop (BEGIN)
                                           ; SOURCE LINE # 97 
0000 C2A9           CLR    ET0
                                           ; SOURCE LINE # 98 
0002 22             RET    

            ; FUNCTION milliStop (END)

            ; FUNCTION newLine (BEGIN)
                                           ; SOURCE LINE # 101 
0000 7F0D           MOV    R7,#00DH
0002 120000  R      LCALL  _serialTX
                                           ; SOURCE LINE # 102 
0005 7F0A           MOV    R7,#00AH
0007 020000  R      LJMP   _serialTX

            ; FUNCTION newLine (END)

            ; FUNCTION readADC (BEGIN)
              ; R7 is assigned to val
              ; R4R5 is assigned to sum
                                           ; SOURCE LINE # 106 
0000 7F00           MOV    R7,#000H
                                           ; SOURCE LINE # 107 
0002 E4             CLR    A
0003 FC             MOV    R4,A
0004 FD             MOV    R5,A
              ; R6 is assigned to i
                                           ; SOURCE LINE # 109 
0005 FE             MOV    R6,A
0006         ?FOR3:
                                           ; SOURCE LINE # 110 
0006 C2B2           CLR    INT0
                                           ; SOURCE LINE # 111 
0008 C2B4           CLR    T0
                                           ; SOURCE LINE # 112 
000A 0F             INC    R7
                                           ; SOURCE LINE # 113 
000B D2B4           SETB   T0
                                           ; SOURCE LINE # 114 
000D D2B2           SETB   INT0
000F         ?WHILE10:
RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE  9

                                           ; SOURCE LINE # 116 
000F 20B5FD         JB     T1,?WHILE10
                                           ; SOURCE LINE # 118 
0012 C2B2           CLR    INT0
                                           ; SOURCE LINE # 119 
0014 C2B3           CLR    INT1
                                           ; SOURCE LINE # 120 
0016 C2B2           CLR    INT0
0018         ?WHILE11:
                                           ; SOURCE LINE # 121 
0018 30B5FD         JNB    T1,?WHILE11
                                           ; SOURCE LINE # 122 
001B E590           MOV    A,P1
001D FB             MOV    R3,A
001E ED             MOV    A,R5
001F 2B             ADD    A,R3
0020 FD             MOV    R5,A
0021 E4             CLR    A
0022 3C             ADDC   A,R4
0023 FC             MOV    R4,A
                                           ; SOURCE LINE # 123 
0024 D2B3           SETB   INT1
                                           ; SOURCE LINE # 124 
0026 D2B2           SETB   INT0
                                           ; SOURCE LINE # 109 
0028 0E             INC    R6
0029 BE10DA         CJNE   R6,#010H,?FOR3
              ; R7 is assigned to val
                                           ; SOURCE LINE # 127 
002C 8D03           MOV    AR3,R5
002E 75F004         MOV    B,#004H
0031         ?LAB54:
0031 C3             CLR    C
0032 13             RRC    A
0033 CB             XCH    A,R3
0034 13             RRC    A
0035 CB             XCH    A,R3
0036 D5F0F8         DJNZ   B,?LAB54
0039 8B07           MOV    AR7,R3
                                           ; SOURCE LINE # 129 
003B 22             RET    

            ; FUNCTION readADC (END)

RC51 COMPILER V06.20.17.263,  PT100              01/04/23  16:42:37  PAGE 11



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    424    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RC51 COMPILATION COMPLETE.  1 WARNING,  0 ERROR
