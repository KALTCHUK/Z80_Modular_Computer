0001   0000             ;================================================================================================
0002   0000             ; Compact Flash Test Routines
0003   0000             ;
0004   0000             ; This version uses Matthew Cook's approach
0005   0000             ;================================================================================================
0006   0000             CF_INIT			.EQU	0200H			; Routine to initialize the CF
0007   0000             DISK_TAB		.EQU	0280H			; Disk physical address table
0008   0000             ;				disk	0280h
0009   0000             ;				track 	0281h
0010   0000             ;				sector	0283h
0011   0000             FILL_PAD		.EQU	0300H			; Fill scratch pad with content of addr SET_PAD+2 
0012   0000             FILL_PAD_PLAID	.EQU	0350H			; Fill scratch pad with plaid pattern (00 FF 00 FF...)
0013   0000             FILL_PAD_SAW	.EQU	0380H			; Fill scratch pad with saw tooth pattern
0014   0000             CF_RD			.EQU	0400H			; Routine to read from CF
0015   0000             CF_WR			.EQU	0500H			; Routine to write to CF
0016   0000             CF_VY			.EQU	0600H			; Routine to verify if CF sector is equal to scratch pad
0017   0000             SCRATCHPAD		.EQU	01000H			; 512 bytes (= 1 sector) read/write scratch pad
0018   0000             
0019   0000             PRINTSEQ		.EQU	0E633H			; Routine (located in the BIOS) to print a sequence of characters
0020   0000             WAITCMD			.EQU	0D131H			; Reentry point to Monitor
0021   0000             CONST			.EQU	0E606H			; Entry point for BIOS function CONST
0022   0000             CONIN			.EQU	0E609H			; Entry point for BIOS function CONIN
0023   0000             CONOUT			.EQU	0E60CH			; Entry point for BIOS function CONOUT
0024   0000             
0025   0000             FLASH_ADDR		.EQU	0B0H			; Base I/O address for compact flash card
0026   0000             ; CF registers
0027   0000             CF_DATA			.EQU	(FLASH_ADDR+0)	; R/W
0028   0000             CF_FEATURES		.EQU	(FLASH_ADDR+1)	; W
0029   0000             CF_ERROR		.EQU	(FLASH_ADDR+1)	; R
0030   0000             CF_SECCOUNT		.EQU	(FLASH_ADDR+2)	; W
0031   0000             
0032   0000             CF_SECTOR		.EQU	(FLASH_ADDR+3)	; W
0033   0000             CF_CYL_LOW		.EQU	(FLASH_ADDR+4)	; W
0034   0000             CF_CYL_HI		.EQU	(FLASH_ADDR+5)	; W
0035   0000             CF_HEAD			.EQU	(FLASH_ADDR+6)	; W
0036   0000             
0037   0000             CF_LBA0			.EQU	(FLASH_ADDR+3)	; W
0038   0000             CF_LBA1			.EQU	(FLASH_ADDR+4)	; W
0039   0000             CF_LBA2			.EQU	(FLASH_ADDR+5)	; W
0040   0000             CF_LBA3			.EQU	(FLASH_ADDR+6)	; W
0041   0000             
0042   0000             CF_STATUS		.EQU	(FLASH_ADDR+7)	; R
0043   0000             CF_COMMAND		.EQU	(FLASH_ADDR+7)	; W
0044   0000             
0045   0000             ;CF Features
0046   0000             CF_8BIT			.EQU	1
0047   0000             CF_NOCACHE		.EQU	082H
0048   0000             
0049   0000             ;CF Commands
0050   0000             CF_READ_SEC		.EQU	020H
0051   0000             CF_WRITE_SEC	.EQU	030H
0052   0000             CF_SET_FEAT		.EQU 	0EFH
0053   0000             
0054   0000             LF				.EQU	0AH				; line feed
0055   0000             FF				.EQU	0CH				; form feed
0056   0000             CR				.EQU	0DH				; carriage return
0057   0000             SPACE			.EQU	020H			; space
0058   0000             COLON			.EQU	03AH			; colon
0059   0000             
0060   0000             ;================================================================================================
0061   0000             ; Compact flash initialization
0062   0000             ;================================================================================================
0063   0200             		.ORG CF_INIT
0064   0200             
0065   0200 CD 68 05    		CALL	CFWAIT
0066   0203 3E 01       		LD 	A,CF_8BIT					; Set IDE to be 8bit
0067   0205 D3 B1       		OUT	(CF_FEATURES),A
0068   0207 CD 68 05    		CALL	CFWAIT
0069   020A 3E EF       		LD	A,CF_SET_FEAT
0070   020C D3 B7       		OUT	(CF_COMMAND),A
0071   020E CD 68 05    		CALL	CFWAIT
0072   0211             
0073   0211             ;		LD 	A,CF_NOCACHE				; No write cache
0074   0211             ;		OUT	(CF_FEATURES),A
0075   0211             ;		LD	A,CF_SET_FEAT
0076   0211             ;		OUT	(CF_COMMAND),A
0077   0211             
0078   0211 CD 33 E6    		CALL	PRINTSEQ
0079   0214 46 6C 61 73 		.TEXT	"Flash initialized."
0079   0218 68 20 69 6E 
0079   021C 69 74 69 61 
0079   0220 6C 69 7A 65 
0079   0224 64 2E 
0080   0226 0D 0A 00    		.DB CR,LF,0
0081   0229             
0082   0229 C3 31 D1    		JP	WAITCMD
0083   022C             		
0084   0280             		.ORG	DISK_TAB
0085   0280 00          DISK	.DB		0
0086   0281 00 00       TRACK	.DW		0
0087   0283 00          SECTOR	.DB		0
0088   0284             		
0089   0284 00          LBA0	.DB		0
0090   0285 00          LBA1	.DB		0
0091   0286 00          LBA2	.DB		0
0092   0287             
0093   0287             ;================================================================================================
0094   0287             ; Compact flash read 1 sector and write to SCRATCHPAD
0095   0287             ;================================================================================================
0096   0400             		.ORG CF_RD
0097   0400 CD 7C 05    		CALL	DTS2LBA
0098   0403             		
0099   0403 CD 68 05    		CALL 	CFWAIT
0100   0406 3A 84 02    		LD	A,(LBA0)
0101   0409 D3 B3       		OUT 	(CF_LBA0),A
0102   040B CD 68 05    		CALL 	CFWAIT
0103   040E 3A 85 02    		LD	A,(LBA1)
0104   0411 D3 B4       		OUT 	(CF_LBA1),A
0105   0413 CD 68 05    		CALL 	CFWAIT
0106   0416 3A 86 02    		LD	A,(LBA2)
0107   0419 D3 B5       		OUT 	(CF_LBA2),A
0108   041B CD 68 05    		CALL 	CFWAIT
0109   041E 3E E0       		LD	A,0E0H
0110   0420 D3 B6       		OUT 	(CF_LBA3),A
0111   0422 CD 68 05    		CALL 	CFWAIT
0112   0425 3E 01       		LD 	A,1
0113   0427 D3 B2       		OUT 	(CF_SECCOUNT),A
0114   0429 CD 68 05    		CALL	CFWAIT
0115   042C 3E 20       		LD 	A,CF_READ_SEC
0116   042E D3 B7       		OUT 	(CF_COMMAND),A
0117   0430 CD 71 05    		CALL	CFDATRDY	
0118   0433             
0119   0433 01 00 02    		LD	BC,0200H
0120   0436 11 00 10    		LD	DE,SCRATCHPAD
0121   0439             RDBYTE:	
0122   0439 DB B0       		IN 	A,(CF_DATA)						;get byte of ide data	
0123   043B 12          		LD 	(DE),A
0124   043C 13          		INC	DE
0125   043D 0B          		DEC	BC
0126   043E 78          		LD	A,B
0127   043F B1          		OR	C
0128   0440 20 F7       		JR 	NZ, RDBYTE
0129   0442             
0130   0442 CD 33 E6    		CALL	PRINTSEQ
0131   0445 46 6C 61 73 		.TEXT	"Flash sector read completed."
0131   0449 68 20 73 65 
0131   044D 63 74 6F 72 
0131   0451 20 72 65 61 
0131   0455 64 20 63 6F 
0131   0459 6D 70 6C 65 
0131   045D 74 65 64 2E 
0132   0461 0D 0A 00    		.DB CR,LF,0
0133   0464             
0134   0464 C3 31 D1    		JP	WAITCMD
0135   0467             
0136   0467             ;================================================================================================
0137   0467             ; Compact flash write 1 sector from SCRATCHPAD
0138   0467             ;================================================================================================
0139   0500             		.ORG CF_WR
0140   0500 CD 7C 05    		CALL	DTS2LBA
0141   0503             		
0142   0503 CD 68 05    		CALL 	CFWAIT
0143   0506 3A 84 02    		LD	A,(LBA0)
0144   0509 D3 B3       		OUT 	(CF_LBA0),A
0145   050B CD 68 05    		CALL 	CFWAIT
0146   050E 3A 85 02    		LD	A,(LBA1)
0147   0511 D3 B4       		OUT 	(CF_LBA1),A
0148   0513 CD 68 05    		CALL 	CFWAIT
0149   0516 3A 86 02    		LD	A,(LBA2)
0150   0519 D3 B5       		OUT 	(CF_LBA2),A
0151   051B CD 68 05    		CALL 	CFWAIT
0152   051E 3E E0       		LD	A,0E0H
0153   0520 D3 B6       		OUT 	(CF_LBA3),A
0154   0522 CD 68 05    		CALL 	CFWAIT
0155   0525 3E 01       		LD 	A,1
0156   0527 D3 B2       		OUT 	(CF_SECCOUNT),A
0157   0529 CD 68 05    		CALL	CFWAIT
0158   052C 3E 30       		LD 	A,CF_WRITE_SEC
0159   052E D3 B7       		OUT 	(CF_COMMAND),A
0160   0530 CD 71 05    		CALL	CFDATRDY	
0161   0533             
0162   0533 01 00 02    		LD	BC,0200H
0163   0536 11 00 10    		LD	DE,SCRATCHPAD
0164   0539 1A          WRBYTE:	LD	A,(DE)
0165   053A D3 B0       		OUT (CF_DATA),A
0166   053C 13          		INC	DE
0167   053D 0B          		DEC	BC
0168   053E 78          		LD	A,B
0169   053F B1          		OR	C
0170   0540 20 F7       		JR 	NZ, WRBYTE
0171   0542             
0172   0542 CD 33 E6    		CALL	PRINTSEQ
0173   0545 46 6C 61 73 		.TEXT	"Flash sector write completed."
0173   0549 68 20 73 65 
0173   054D 63 74 6F 72 
0173   0551 20 77 72 69 
0173   0555 74 65 20 63 
0173   0559 6F 6D 70 6C 
0173   055D 65 74 65 64 
0173   0561 2E 
0174   0562 0D 0A 00    		.DB CR,LF,0
0175   0565             
0176   0565 C3 31 D1    		JP	WAITCMD
0177   0568             
0178   0568             ;================================================================================================
0179   0568             ; Wait for disk to be ready
0180   0568             ;================================================================================================
0181   0568             CFWAIT:
0182   0568 F5          		PUSH 	AF
0183   0569             CFWAIT1:
0184   0569 DB B7       		IN 	A,(CF_STATUS)
0185   056B E6 80       		AND 080H
0186   056D 20 FA       		JR	NZ,CFWAIT1
0187   056F F1          		POP AF
0188   0570 C9          		RET
0189   0571             
0190   0571             ;================================================================================================
0191   0571             ; Originally LOOP_DAT_RDY by Matthew Cook.
0192   0571             ; Loops until status register bit 7 (busy) is 0 and bit 3 (drq) is 1
0193   0571             ;================================================================================================
0194   0571             CFDATRDY:
0195   0571 F5          		PUSH 	AF
0196   0572             CFDATRDY1:
0197   0572 DB B7       		IN	A,(CF_STATUS)					;Read status
0198   0574 E6 88       		AND	%10001000						;mask off busy and drq bits
0199   0576 EE 08       		XOR	%00001000						;we want busy(7) to be 0 and drq(3) to be 1
0200   0578 20 F8       		JR	NZ,CFDATRDY1
0201   057A F1          		POP AF
0202   057B C9          		RET
0203   057C             
0204   057C             ;================================================================================================
0205   057C             ; Convert physical address (disk, track, sector) to LBA address.
0206   057C             ;
0207   057C             ;	|      LBA2     |      LBA1     |      LBA0     |
0208   057C             ;	|0 0 0 0 0 0 D D|D D T T T T T T|T T T S S S S S|
0209   057C             ;               |3 2 1 0|8 7 6 5 4 3 2 1 0|4 3 2 1 0|
0210   057C             ;				| DISK  |      TRACK      | SECTOR  |
0211   057C             ;
0212   057C             ;================================================================================================
0213   057C             DTS2LBA:
0214   057C 2A 81 02    		LD	HL,(TRACK)
0215   057F CB 05       		RLC	L
0216   0581 CB 05       		RLC	L
0217   0583 CB 05       		RLC	L
0218   0585 CB 05       		RLC	L
0219   0587 CB 05       		RLC	L
0220   0589 7D          		LD	A,L
0221   058A E6 E0       		AND	0E0H
0222   058C 6F          		LD	L,A
0223   058D 3A 83 02    		LD	A,(SECTOR)
0224   0590 85          		ADD	A,L
0225   0591 32 84 02    		LD	(LBA0),A
0226   0594             
0227   0594 2A 81 02    		LD	HL,(TRACK)
0228   0597 CB 0D       		RRC	L
0229   0599 CB 0D       		RRC	L
0230   059B CB 0D       		RRC	L
0231   059D 7D          		LD	A,L
0232   059E E6 1F       		AND	01FH
0233   05A0 6F          		LD	L,A
0234   05A1 CB 04       		RLC	H
0235   05A3 CB 04       		RLC	H
0236   05A5 CB 04       		RLC	H
0237   05A7 CB 04       		RLC	H
0238   05A9 CB 04       		RLC	H
0239   05AB 7C          		LD	A,H
0240   05AC E6 20       		AND	020H
0241   05AE 67          		LD	H,A
0242   05AF 3A 80 02    		LD	A,(DISK)
0243   05B2 CB 07       		RLC	a
0244   05B4 CB 07       		RLC	a
0245   05B6 CB 07       		RLC	a
0246   05B8 CB 07       		RLC	a
0247   05BA CB 07       		RLC	a
0248   05BC CB 07       		RLC	a
0249   05BE E6 C0       		AND	0C0H
0250   05C0 84          		ADD	A,H
0251   05C1 85          		ADD	A,L
0252   05C2 32 85 02    		LD	(LBA1),A
0253   05C5             		
0254   05C5             
0255   05C5 3A 80 02    		LD	A,(DISK)
0256   05C8 CB 0F       		RRC	A
0257   05CA CB 0F       		RRC	A
0258   05CC E6 03       		AND	03H
0259   05CE 32 86 02    		LD	(LBA2),A
0260   05D1             
0261   05D1 C9          		RET
0262   05D2             
0263   05D2             ;================================================================================================
0264   05D2             ; Fill scratch pad with content of addr 'SET_PAD+2' 
0265   05D2             ;================================================================================================
0266   0300             		.ORG	FILL_PAD
0267   0300             
0268   0300 18 01       		JR	SKIPBYTE
0269   0302             
0270   0302 00          SET_BYTE	.DB	0						; this byte will be used to fill the scratch pad
0271   0303             
0272   0303 06 00       SKIPBYTE:	LD	B,0
0273   0305 11 00 10    		LD	DE,SCRATCHPAD
0274   0308 3A 02 03    		LD	A,(SET_BYTE)
0275   030B             SETNEXT:
0276   030B 12          		LD	(DE),A
0277   030C 13          		INC	DE
0278   030D 12          		LD	(DE),A
0279   030E 13          		INC	DE
0280   030F 10 FA       		DJNZ	SETNEXT
0281   0311             
0282   0311 CD 33 E6    		CALL	PRINTSEQ
0283   0314 46 69 6C 6C 		.TEXT	"Fill scratch pad completed."
0283   0318 20 73 63 72 
0283   031C 61 74 63 68 
0283   0320 20 70 61 64 
0283   0324 20 63 6F 6D 
0283   0328 70 6C 65 74 
0283   032C 65 64 2E 
0284   032F 0D 0A 00    		.DB CR,LF,0
0285   0332             
0286   0332 C3 31 D1    		JP	WAITCMD
0287   0335             
0288   0335             ;================================================================================================
0289   0335             ; Fill scratch pad with plaid pattern 
0290   0335             ;================================================================================================
0291   0350             		.ORG	FILL_PAD_PLAID
0292   0350             
0293   0350 06 00       		LD	B,0
0294   0352 11 00 10    		LD	DE,SCRATCHPAD
0295   0355 3A 02 03    		LD	A,(SET_BYTE)
0296   0358             SETNEXT1:
0297   0358 12          		LD	(DE),A
0298   0359 13          		INC	DE
0299   035A 2F          		CPL
0300   035B 12          		LD	(DE),A
0301   035C 13          		INC	DE
0302   035D 2F          		CPL
0303   035E 10 F8       		DJNZ	SETNEXT1
0304   0360             
0305   0360 CD 33 E6    		CALL	PRINTSEQ
0306   0363 46 69 6C 6C 		.TEXT	"Fill scratch pad with plaid pattern completed."
0306   0367 20 73 63 72 
0306   036B 61 74 63 68 
0306   036F 20 70 61 64 
0306   0373 20 77 69 74 
0306   0377 68 20 70 6C 
0306   037B 61 69 64 20 
0306   037F 70 61 74 74 
0306   0383 65 72 6E 20 
0306   0387 63 6F 6D 70 
0306   038B 6C 65 74 65 
0306   038F 64 2E 
0307   0391 0D 0A 00    		.DB CR,LF,0
0308   0394             
0309   0394 C3 31 D1    		JP	WAITCMD
0310   0397             
0311   0397             ;================================================================================================
0312   0397             ; Fill scratch pad with saw tooth pattern (00, FF, FE, FD, FC, FB, FA... 03, 02, 01, 00...)
0313   0397             ;================================================================================================
0314   0380             		.ORG	FILL_PAD_SAW
0315   0380             
0316   0380 01 00 02    		LD	BC,0200H
0317   0383 21 00 10    		LD	HL,SCRATCHPAD
0318   0386             SETNEXT2:
0319   0386 71          		LD	(HL),C
0320   0387 23          		INC	HL
0321   0388 0B          		DEC	BC
0322   0389 78          		LD	A,B
0323   038A B1          		OR	C
0324   038B 20 F9       		JR	NZ,SETNEXT2
0325   038D             
0326   038D CD 33 E6    		CALL	PRINTSEQ
0327   0390 46 69 6C 6C 		.TEXT	"Fill scratch pad saw tooth pattern completed."
0327   0394 20 73 63 72 
0327   0398 61 74 63 68 
0327   039C 20 70 61 64 
0327   03A0 20 73 61 77 
0327   03A4 20 74 6F 6F 
0327   03A8 74 68 20 70 
0327   03AC 61 74 74 65 
0327   03B0 72 6E 20 63 
0327   03B4 6F 6D 70 6C 
0327   03B8 65 74 65 64 
0327   03BC 2E 
0328   03BD 0D 0A 00    		.DB CR,LF,0
0329   03C0             
0330   03C0 C3 31 D1    		JP	WAITCMD
0331   03C3             		.END
0332   03C3             		
0333   03C3             ;================================================================================================
0334   03C3             ; Compact flash verify 1 sector (compare with SCRATCHPAD)
0335   03C3             ;================================================================================================
0336   0400             		.ORG CF_RD
0337   0400 CD 7C 05    		CALL	DTS2LBA
0338   0403             		
0339   0403 CD 68 05    		CALL 	CFWAIT
0340   0406 3A 84 02    		LD	A,(LBA0)
0341   0409 D3 B3       		OUT 	(CF_LBA0),A
0342   040B CD 68 05    		CALL 	CFWAIT
0343   040E 3A 85 02    		LD	A,(LBA1)
0344   0411 D3 B4       		OUT 	(CF_LBA1),A
0345   0413 CD 68 05    		CALL 	CFWAIT
0346   0416 3A 86 02    		LD	A,(LBA2)
0347   0419 D3 B5       		OUT 	(CF_LBA2),A
0348   041B CD 68 05    		CALL 	CFWAIT
0349   041E 3E E0       		LD	A,0E0H
0350   0420 D3 B6       		OUT 	(CF_LBA3),A
0351   0422 CD 68 05    		CALL 	CFWAIT
0352   0425 3E 01       		LD 	A,1
0353   0427 D3 B2       		OUT 	(CF_SECCOUNT),A
0354   0429 CD 68 05    		CALL	CFWAIT
0355   042C 3E 20       		LD 	A,CF_READ_SEC
0356   042E D3 B7       		OUT 	(CF_COMMAND),A
0357   0430 CD 71 05    		CALL	CFDATRDY	
0358   0433             
0359   0433 01 00 02    		LD	BC,0200H
0360   0436 11 00 10    		LD	DE,SCRATCHPAD
0361   0439             RDBYTE1:	
0362   0439 DB B0       		IN 	A,(CF_DATA)						;get byte of ide data
0363   043B 67          		LD	H,A
0364   043C 1A          		LD 	A,(DE)
0365   043D BC          		CP	H
0366   043E 28 0B       		JR	Z,ISEQUAL
0367   0440 CD 33 E6    		CALL	PRINTSEQ
0368   0443 45 52 52 4F 		.TEXT	"ERROR"
0368   0447 52 
0369   0448 0D 0A 00    		.DB CR,LF,0
0370   044B             ISEQUAL:
0371   044B 13          		INC	DE
0372   044C 0B          		DEC	BC
0373   044D 78          		LD	A,B
0374   044E B1          		OR	C
0375   044F 20 E8       		JR 	NZ, RDBYTE1
0376   0451             
0377   0451 CD 33 E6    		CALL	PRINTSEQ
0378   0454 46 6C 61 73 		.TEXT	"Flash sector verify completed."
0378   0458 68 20 73 65 
0378   045C 63 74 6F 72 
0378   0460 20 76 65 72 
0378   0464 69 66 79 20 
0378   0468 63 6F 6D 70 
0378   046C 6C 65 74 65 
0378   0470 64 2E 
0379   0472 0D 0A 00    		.DB CR,LF,0
0380   0475             
0381   0475 C3 31 D1    		JP	WAITCMD
0382   0478             
0383   0478             		
0384   0478             
tasm: Number of errors = 0
