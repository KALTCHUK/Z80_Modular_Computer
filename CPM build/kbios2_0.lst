0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ; Blocking/unblocking routines are the published version by Digital Research
0004   0000             ; (bugfixed, as found on the web)
0005   0000             ;
0006   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0007   0000             ;
0008   0000             ; Customized by Kaltchuk for use with Z80 Modular Computer, december/2020.
0009   0000             ; CP/M is booted from ROM.
0010   0000             ;
0011   0000             ; 04/02/21 - version B corrects a bug in wboot.
0012   0000             ; 09/06/21 - version C sets serial comm to 38.4kbps and
0013   0000             ;            puts "IOBYTE set" in the cold boot.
0014   0000             ; 12/06/21 - version D fixes a bug with CONIN.
0015   0000             ; 16/06/21 - version 2.0 is mainly about the new serial communication card,
0016   0000             ;            which doesn't use interrupt signal because all the buffering is
0017   0000             ;            done by the card instead of the CPU. IOBYTE is also fully
0018   0000             ;            implemented.
0019   0000             ;==================================================================================
0020   0000             #INCLUDE	"equates.h"
0001+  0000             
0002+  0000             CCP				.EQU	0D000h			; Base of CCP (or Monitor).
0003+  0000             BIOS			.EQU	0E620h			; Base of BIOS.
0004+  0000             ROM_CCP			.EQU	CCP-0C000h		; Base of CCP in ROM
0005+  0000             ROM_BIOS		.EQU	BIOS-0C000h		; Base of BIOS in ROM
0006+  0000             
0007+  0000             ccp				.EQU	CCP
0008+  0000             bios			.EQU	BIOS
0021   0000             
0022   0000             ; Set CP/M low memory data, vector and buffer addresses.
0023   0000             
0024   0000             iobyte			.EQU	03h				; Intel standard I/O definition byte.
0025   0000             userdrv			.EQU	04h				; Current user number and drive.
0026   0000             tpabuf			.EQU	80h				; Default I/O buffer and command line storage.
0027   0000             
0028   0000             blksiz			.equ	4096			;CP/M allocation size
0029   0000             hstsiz			.equ	512				;host disk sector size
0030   0000             hstspt			.equ	32				;host disk sectors/trk
0031   0000             hstblk			.equ	hstsiz/128		;CP/M sects/host buff
0032   0000             cpmspt			.equ	hstblk * hstspt	;CP/M sectors/track
0033   0000             secmsk			.equ	hstblk-1		;sector mask
0034   0000             										;compute sector mask
0035   0000             ;secshf			.equ	2				;log2(hstblk)
0036   0000             	
0037   0000             wrall			.equ	0				;write to allocated
0038   0000             wrdir			.equ	1				;write to directory
0039   0000             wrual			.equ	2				;write to unallocated
0040   0000             
0041   0000             ; MEM card stuff
0042   0000             MEM_ADDR		.EQU	0F0H			; MEM card address
0043   0000             ROM_RAM0		.EQU	MEM_ADDR		; ROM + RAM bank 0
0044   0000             NOROM_RAM0		.EQU	MEM_ADDR+1		; no ROM + RAM bank 0 (full RAM)
0045   0000             ROM_RAM1		.EQU	MEM_ADDR+2		; ROM + RAM bank 1
0046   0000             NOROM_RAM1		.EQU	MEM_ADDR+3		; no ROM + RAM bank 1 (full RAM)
0047   0000             
0048   0000             ; USART card stuff
0049   0000             PORT0			.EQU	0C0H		; PORT 0 address		(physical device TTY for CP/M)
0050   0000             PORT0_DAT		.EQU	PORT0+2		; PORT 0 data addr
0051   0000             PORT0_STA		.EQU	PORT0		; PORT 0 status addr
0052   0000             
0053   0000             PORT1			.EQU	PORT0+1		; PORT 1 address		(physical device CRT for CP/M)
0054   0000             PORT1_DAT		.EQU	PORT1+2		; PORT 1 data addr
0055   0000             PORT1_STA		.EQU	PORT1		; PORT 1 status addr
0056   0000             
0057   0000             ; FLASH card stuff
0058   0000             FLASH_ADDR		.EQU	0B0H			; FLASH card address
0059   0000             CF_DATA			.EQU	(FLASH_ADDR+0)	; R/W
0060   0000             CF_FEATURES		.EQU	(FLASH_ADDR+1)	; W
0061   0000             CF_ERROR		.EQU	(FLASH_ADDR+1)	; R
0062   0000             CF_SECCOUNT		.EQU	(FLASH_ADDR+2)	; W
0063   0000             
0064   0000             CF_SECTOR		.EQU	(FLASH_ADDR+3)	; W
0065   0000             CF_CYL_LOW		.EQU	(FLASH_ADDR+4)	; W
0066   0000             CF_CYL_HI		.EQU	(FLASH_ADDR+5)	; W
0067   0000             CF_HEAD			.EQU	(FLASH_ADDR+6)	; W
0068   0000             
0069   0000             CF_LBA0			.EQU	(FLASH_ADDR+3)	; W
0070   0000             CF_LBA1			.EQU	(FLASH_ADDR+4)	; W
0071   0000             CF_LBA2			.EQU	(FLASH_ADDR+5)	; W
0072   0000             CF_LBA3			.EQU	(FLASH_ADDR+6)	; W
0073   0000             
0074   0000             CF_STATUS		.EQU	(FLASH_ADDR+7)	; R
0075   0000             CF_COMMAND		.EQU	(FLASH_ADDR+7)	; W
0076   0000             
0077   0000             ;CF Features
0078   0000             CF_8BIT			.EQU	1
0079   0000             CF_NOCACHE		.EQU	082H
0080   0000             
0081   0000             ;CF Commands
0082   0000             CF_READ_SEC		.EQU	020H
0083   0000             CF_WRITE_SEC	.EQU	030H
0084   0000             CF_SET_FEAT		.EQU 	0EFH
0085   0000             
0086   0000             ;================================================================================================
0087   0000             ; ASCII characters.
0088   0000             ;================================================================================================
0089   0000             NUL			.EQU	00H
0090   0000             LF			.EQU	0AH
0091   0000             FF			.EQU	0CH
0092   0000             CR			.EQU	0DH
0093   0000             DC1			.EQU	11H
0094   0000             DC2			.EQU	12H
0095   0000             DC3			.EQU	13H
0096   0000             DC4			.EQU	14H
0097   0000             ;================================================================================================
0098   0000             
0099   E620             		.ORG	bios					; BIOS origin.
0100   E620             
0101   E620             ;================================================================================================
0102   E620             ; BIOS jump table.
0103   E620             ;================================================================================================
0104   E620 C3 83 E7    		JP	boot						;  0 Initialize.
0105   E623 C3 37 E8    wboote:	JP	wboot						;  1 Warm boot.
0106   E626 C3 B7 E8    		JP	CONST						;  2 Console status.
0107   E629 C3 CE E8    		JP	CONIN						;  3 Console input.
0108   E62C C3 E5 E8    		JP	CONOUT						;  4 Console OUTput.
0109   E62F C3 13 E9    		JP	LIST						;  5 List OUTput.
0110   E632 C3 2A E9    		JP	PUNCH						;  6 punch OUTput.
0111   E635 C3 FC E8    		JP	READER						;  7 Reader input.
0112   E638 C3 A0 E9    		JP	home						;  8 Home disk.
0113   E63B C3 78 E9    		JP	seldsk						;  9 Select disk.
0114   E63E C3 AC E9    		JP	settrk						; 10 Select track.
0115   E641 C3 B1 E9    		JP	setsec						; 11 Select sector.
0116   E644 C3 B6 E9    		JP	setdma						; 12 Set DMA ADDress.
0117   E647 C3 BE E9    		JP	read						; 13 Read 128 bytes.
0118   E64A C3 D2 E9    		JP	write						; 14 Write 128 bytes.
0119   E64D C3 41 E9    		JP	LISTST						; 15 List status.
0120   E650 C3 BB E9    		JP	sectran						; 16 Sector translate.
0121   E653 C3 AC EB    		JP	PRINTSEQ					; not a BIOS function
0122   E656             
0123   E656             ;================================================================================================
0124   E656             ; Disk parameter headers for disk 0 to 15
0125   E656             ;================================================================================================
0126   E656             dpbase:
0127   E656 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb0,0000h,alv00
0127   E65A 00 00 00 00 
0127   E65E C0 EB 56 E7 
0127   E662 00 00 40 EC 
0128   E666 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv01
0128   E66A 00 00 00 00 
0128   E66E C0 EB 65 E7 
0128   E672 00 00 41 ED 
0129   E676 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv02
0129   E67A 00 00 00 00 
0129   E67E C0 EB 65 E7 
0129   E682 00 00 42 EE 
0130   E686 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv03
0130   E68A 00 00 00 00 
0130   E68E C0 EB 65 E7 
0130   E692 00 00 43 EF 
0131   E696 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv04
0131   E69A 00 00 00 00 
0131   E69E C0 EB 65 E7 
0131   E6A2 00 00 44 F0 
0132   E6A6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv05
0132   E6AA 00 00 00 00 
0132   E6AE C0 EB 65 E7 
0132   E6B2 00 00 45 F1 
0133   E6B6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv06
0133   E6BA 00 00 00 00 
0133   E6BE C0 EB 65 E7 
0133   E6C2 00 00 46 F2 
0134   E6C6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv07
0134   E6CA 00 00 00 00 
0134   E6CE C0 EB 65 E7 
0134   E6D2 00 00 47 F3 
0135   E6D6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv08
0135   E6DA 00 00 00 00 
0135   E6DE C0 EB 65 E7 
0135   E6E2 00 00 48 F4 
0136   E6E6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv09
0136   E6EA 00 00 00 00 
0136   E6EE C0 EB 65 E7 
0136   E6F2 00 00 49 F5 
0137   E6F6 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv10
0137   E6FA 00 00 00 00 
0137   E6FE C0 EB 65 E7 
0137   E702 00 00 4A F6 
0138   E706 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv11
0138   E70A 00 00 00 00 
0138   E70E C0 EB 65 E7 
0138   E712 00 00 4B F7 
0139   E716 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv12
0139   E71A 00 00 00 00 
0139   E71E C0 EB 65 E7 
0139   E722 00 00 4C F8 
0140   E726 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv13
0140   E72A 00 00 00 00 
0140   E72E C0 EB 65 E7 
0140   E732 00 00 4D F9 
0141   E736 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpb,0000h,alv14
0141   E73A 00 00 00 00 
0141   E73E C0 EB 65 E7 
0141   E742 00 00 4E FA 
0142   E746 00 00 00 00 	 	.DW 0000h,0000h,0000h,0000h,dirbuf,dpbLast,0000h,alv15
0142   E74A 00 00 00 00 
0142   E74E C0 EB 74 E7 
0142   E752 00 00 4F FB 
0143   E756             
0144   E756             ; First drive has a reserved track for CP/M
0145   E756             dpb0:
0146   E756 80 00       		.DW 128 ;SPT - sectors per track
0147   E758 05          		.DB 5   ;BSH - block shift factor
0148   E759 1F          		.DB 31  ;BLM - block mask
0149   E75A 01          		.DB 1   ;EXM - Extent mask
0150   E75B FB 07       		.DW 2043 ; (2047-4) DSM - Storage size (blocks - 1)
0151   E75D FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0152   E75F F0          		.DB 240 ;AL0 - 1 bit set per directory block
0153   E760 00          		.DB 0   ;AL1 -            "
0154   E761 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0155   E763 01 00       		.DW 1   ;ON  - Reserved tracks
0156   E765             
0157   E765             dpb:
0158   E765 80 00       		.DW 128 ;SPT - sectors per track
0159   E767 05          		.DB 5   ;BSH - block shift factor
0160   E768 1F          		.DB 31  ;BLM - block mask
0161   E769 01          		.DB 1   ;EXM - Extent mask
0162   E76A FF 07       		.DW 2047 ;DSM - Storage size (blocks - 1)
0163   E76C FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0164   E76E F0          		.DB 240 ;AL0 - 1 bit set per directory block
0165   E76F 00          		.DB 0   ;AL1 -            "
0166   E770 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0167   E772 00 00       		.DW 0   ;OFF - Reserved tracks
0168   E774             
0169   E774             ; Last drive is smaller because CF is never full 64MB or 128MB
0170   E774             dpbLast:
0171   E774 80 00       		.DW 128 ;SPT - sectors per track
0172   E776 05          		.DB 5   ;BSH - block shift factor
0173   E777 1F          		.DB 31  ;BLM - block mask
0174   E778 01          		.DB 1   ;EXM - Extent mask
0175   E779 FF 01       		.DW 511 ;DSM - Storage size (blocks - 1)  ; 511 = 2MB (for 128MB card), 1279 = 5MB (for 64MB card)
0176   E77B FF 01       		.DW 511 ;DRM - Number of directory entries - 1
0177   E77D F0          		.DB 240 ;AL0 - 1 bit set per directory block
0178   E77E 00          		.DB 0   ;AL1 -            "
0179   E77F 00 00       		.DW 0   ;CKS - DIR check vector size (DRM+1)/4 (0=fixed disk)
0180   E781 00 00       		.DW 0   ;OFF - Reserved tracks
0181   E783             
0182   E783             ;================================================================================================
0183   E783             ; Cold boot
0184   E783             ;================================================================================================
0185   E783             
0186   E783             boot:
0187   E783 F3          		DI						; Disable interrupts.
0188   E784 31 8B FE    		LD	SP,BIOSSTACK		; Set default stack.
0189   E787             
0190   E787 D3 F1       		OUT (NOROM_RAM0),A		; Turn off ROM. Doesn't matter what we output
0191   E789             
0192   E789 CD A1 EB    		CALL	cfWait			; Initialize FLASH
0193   E78C 3E 01       		LD 	A,CF_8BIT			; Set IDE to be 8bit
0194   E78E D3 B1       		OUT	(CF_FEATURES),A
0195   E790 3E EF       		LD	A,CF_SET_FEAT
0196   E792 D3 B7       		OUT	(CF_COMMAND),A
0197   E794             
0198   E794 CD A1 EB    		CALL	cfWait
0199   E797 3E 82       		LD 	A,CF_NOCACHE		; No write cache
0200   E799 D3 B1       		OUT	(CF_FEATURES),A
0201   E79B 3E EF       		LD	A,CF_SET_FEAT
0202   E79D D3 B7       		OUT	(CF_COMMAND),A
0203   E79F             
0204   E79F AF          		XOR	A
0205   E7A0 32 04 00    		LD	(userdrv),A			; set drive byte to A:
0206   E7A3 32 03 00    		LD	(iobyte),A			; Set IOBYTE to 00
0207   E7A6             
0208   E7A6 CD AC EB    		CALL	PRINTSEQ
0209   E7A9 0D 0A 5A 38 		.DB CR,LF,"Z80 Modular Computer by Kaltchuk 2020.",CR,LF
0209   E7AD 30 20 4D 6F 
0209   E7B1 64 75 6C 61 
0209   E7B5 72 20 43 6F 
0209   E7B9 6D 70 75 74 
0209   E7BD 65 72 20 62 
0209   E7C1 79 20 4B 61 
0209   E7C5 6C 74 63 68 
0209   E7C9 75 6B 20 32 
0209   E7CD 30 32 30 2E 
0209   E7D1 0D 0A 
0210   E7D3 42 49 4F 53 		.DB "BIOS 2.0 - 128MB Compact Flash, LCD drive.",CR,LF
0210   E7D7 20 32 2E 30 
0210   E7DB 20 2D 20 31 
0210   E7DF 32 38 4D 42 
0210   E7E3 20 43 6F 6D 
0210   E7E7 70 61 63 74 
0210   E7EB 20 46 6C 61 
0210   E7EF 73 68 2C 20 
0210   E7F3 4C 43 44 20 
0210   E7F7 64 72 69 76 
0210   E7FB 65 2E 0D 0A 
0211   E7FF 43 50 2F 4D 		.DB "CP/M 2.2+ Copyright 1979 (c) by Digital Research",CR,LF,CR,LF,0
0211   E803 20 32 2E 32 
0211   E807 2B 20 43 6F 
0211   E80B 70 79 72 69 
0211   E80F 67 68 74 20 
0211   E813 31 39 37 39 
0211   E817 20 28 63 29 
0211   E81B 20 62 79 20 
0211   E81F 44 69 67 69 
0211   E823 74 61 6C 20 
0211   E827 52 65 73 65 
0211   E82B 61 72 63 68 
0211   E82F 0D 0A 0D 0A 
0211   E833 00 
0212   E834             
0213   E834 C3 4A E8    		JP	gocpm
0214   E837             
0215   E837             ;================================================================================================
0216   E837             ; Warm boot
0217   E837             ;================================================================================================
0218   E837             
0219   E837             wboot:
0220   E837 F3          		DI						; Disable interrupts.
0221   E838 31 8B FE    		LD	SP,BIOSSTACK		; Set default stack.
0222   E83B             
0223   E83B D3 F0       		OUT (ROM_RAM0),A		; Turn on ROM. Doesn't matter what we output
0224   E83D             
0225   E83D 01 20 16    		LD	BC,BIOS-CCP			; Copy CP/M ROM (01000h) to RAM (0D000h)
0226   E840 11 00 D0    		LD	DE,CCP				; Don't copy the BIOS!!!
0227   E843 21 00 10    		LD	HL,ROM_CCP
0228   E846 ED B0       		LDIR
0229   E848             
0230   E848 D3 F1       		OUT (NOROM_RAM0),A		; Turn off ROM. Doesn't matter what we output
0231   E84A             
0232   E84A             
0233   E84A             ;================================================================================================
0234   E84A             ; Common code for cold and warm boot
0235   E84A             ;================================================================================================
0236   E84A             
0237   E84A             gocpm:
0238   E84A AF          		XOR	A					; 0 to accumulator
0239   E84B 32 5E FC    		LD	(hstact),A			; host buffer inactive
0240   E84E 32 60 FC    		LD	(unacnt),A			; clear unalloc count
0241   E851             
0242   E851 21 80 00    		LD	HL,tpabuf			; ADDress of BIOS DMA buffer.
0243   E854 22 69 FC    		LD	(dmaAddr),HL
0244   E857             		
0245   E857 3E C3       		LD	A,0C3h				; Opcode for 'JP'.
0246   E859 32 00 00    		LD	(00h),A				; Load at start of RAM.
0247   E85C 21 23 E6    		LD	HL,wboote			; ADDress of jump for a warm boot.
0248   E85F 22 01 00    		LD	(01h),HL
0249   E862 32 05 00    		LD	(05h),A				; Opcode for 'JP'.
0250   E865 2A 1E E6    		LD	HL,(BIOS-2)			; ADDress of jump for the BDOS.
0251   E868 22 06 00    		LD	(06h),HL
0252   E86B 3A 04 00    		LD	A,(userdrv)			; Save new drive number (0).
0253   E86E 4F          		LD	C,A					; Pass drive number in C.
0254   E86F             
0255   E86F ED 46       		IM	0
0256   E871 FB          		EI
0257   E872             	
0258   E872 C3 00 D0    		JP	ccp					; Start CP/M by jumping to the CCP.
0259   E875             
0260   E875             ;================================================================================================
0261   E875             ; PHYSICAL DEVICE JUMP TABLE.
0262   E875             ; Used by CONST, CONIN, CONOUT, LIST, PUNCH, READER and LISTST according to IOBYTE setting.
0263   E875             ;================================================================================================
0264   E875 C3 65 E9    TTYST:	JP	PORT0ST
0265   E878 C3 75 E9    CRTST:	JP	PORT1ST
0266   E87B C3 41 E9    BATST:	JP	LISTST
0267   E87E C3 65 E9    UC1ST:	JP	PORT0ST		; No physical device present
0268   E881 C3 65 E9    LPTST:	JP	PORT0ST		; No physical device present
0269   E884 C3 65 E9    UL1ST:	JP	PORT0ST		; No physical device present
0270   E887             
0271   E887 C3 58 E9    TTYIN:	JP	PORT0IN
0272   E88A C3 68 E9    CRTIN:	JP	PORT1IN
0273   E88D C3 FC E8    BATIN:	JP	READER
0274   E890 C3 58 E9    UC1IN:	JP	PORT0IN		; No physical device present
0275   E893 C3 58 E9    PTRIN:	JP	PORT0IN		; No physical device present
0276   E896 C3 58 E9    UR1IN:	JP	PORT0IN		; No physical device present
0277   E899 C3 58 E9    UR2IN:	JP	PORT0IN		; No physical device present
0278   E89C             
0279   E89C C3 61 E9    TTYOUT:	JP	PORT0OUT
0280   E89F C3 71 E9    CRTOUT:	JP	PORT1OUT
0281   E8A2 C3 13 E9    BATOUT:	JP	LIST
0282   E8A5 C3 61 E9    UC1OUT:	JP	PORT0OUT	; No physical device present
0283   E8A8 C3 61 E9    LPTOUT:	JP	PORT0OUT	; No physical device present
0284   E8AB C3 61 E9    UL1OUT:	JP	PORT0OUT	; No physical device present
0285   E8AE C3 61 E9    PTPOUT:	JP	PORT0OUT	; No physical device present
0286   E8B1 C3 61 E9    UP1OUT:	JP	PORT0OUT	; No physical device present
0287   E8B4 C3 61 E9    UP2OUT:	JP	PORT0OUT	; No physical device present
0288   E8B7             
0289   E8B7             ;================================================================================================
0290   E8B7             ; Console I/O routines
0291   E8B7             ;================================================================================================
0292   E8B7             ;================================================================================================
0293   E8B7             ; Console Status (Return A=0FFh if character waiting. Otherwise, A=0)
0294   E8B7             ;================================================================================================
0295   E8B7 3A 03 00    CONST:	LD	A,(iobyte)
0296   E8BA E6 03       		AND	3
0297   E8BC FE 00       		CP	0
0298   E8BE CA 75 E8    		JP	Z,TTYST
0299   E8C1 FE 01       		CP	1
0300   E8C3 CA 78 E8    		JP	Z,CRTST
0301   E8C6 FE 02       		CP	2
0302   E8C8 CA 7B E8    		JP	Z,BATST
0303   E8CB C3 7E E8    		JP	UC1ST
0304   E8CE             
0305   E8CE             ;================================================================================================
0306   E8CE             ; Console Input (Wait for input and return character in A)
0307   E8CE             ;================================================================================================
0308   E8CE 3A 03 00    CONIN:	LD	A,(iobyte)
0309   E8D1 E6 03       		AND	3
0310   E8D3 FE 00       		CP	0
0311   E8D5 CA 87 E8    		JP	Z,TTYIN
0312   E8D8 FE 01       		CP	1
0313   E8DA CA 8A E8    		JP	Z,CRTIN
0314   E8DD FE 02       		CP	2
0315   E8DF CA 8D E8    		JP	Z,BATIN
0316   E8E2 C3 90 E8    		JP	UC1IN
0317   E8E5             
0318   E8E5             ;================================================================================================
0319   E8E5             ; Console Output (Send character in reg C)
0320   E8E5             ;================================================================================================
0321   E8E5 3A 03 00    CONOUT:	LD	A,(iobyte)
0322   E8E8 E6 03       		AND	3
0323   E8EA FE 00       		CP	0
0324   E8EC CA 9C E8    		JP	Z,TTYOUT
0325   E8EF FE 01       		CP	1
0326   E8F1 CA 9F E8    		JP	Z,CRTOUT
0327   E8F4 FE 02       		CP	2
0328   E8F6 CA A2 E8    		JP	Z,BATOUT
0329   E8F9 C3 A5 E8    		JP	UC1OUT
0330   E8FC             
0331   E8FC             ;================================================================================================
0332   E8FC             ; Reader Input
0333   E8FC             ;================================================================================================
0334   E8FC 3A 03 00    READER:	LD	A,(iobyte)
0335   E8FF E6 0C       		AND	0CH
0336   E901 FE 00       		CP	0
0337   E903 CA 87 E8    		JP	Z,TTYIN
0338   E906 FE 04       		CP	4
0339   E908 CA 93 E8    		JP	Z,PTRIN
0340   E90B FE 08       		CP	8
0341   E90D CA 96 E8    		JP	Z,UR1IN
0342   E910 C3 99 E8    		JP	UR2IN
0343   E913             
0344   E913             ;================================================================================================
0345   E913             ; List Output
0346   E913             ;================================================================================================
0347   E913 3A 03 00    LIST:	LD	A,(iobyte)
0348   E916 E6 C0       		AND	0C0H
0349   E918 FE 00       		CP	0
0350   E91A CA 9C E8    		JP	Z,TTYOUT
0351   E91D FE 40       		CP	40H
0352   E91F CA 9F E8    		JP	Z,CRTOUT
0353   E922 FE 80       		CP	80H
0354   E924 CA A8 E8    		JP	Z,LPTOUT
0355   E927 C3 AB E8    		JP	UL1OUT
0356   E92A             
0357   E92A             ;================================================================================================
0358   E92A             ; Punch Output
0359   E92A             ;================================================================================================
0360   E92A 3A 03 00    PUNCH:	LD	A,(iobyte)
0361   E92D E6 30       		AND	030H
0362   E92F FE 00       		CP	0
0363   E931 CA 9C E8    		JP	Z,TTYOUT
0364   E934 FE 40       		CP	40H
0365   E936 CA AE E8    		JP	Z,PTPOUT
0366   E939 FE 80       		CP	80H
0367   E93B CA B1 E8    		JP	Z,UP1OUT
0368   E93E C3 B4 E8    		JP	UP2OUT
0369   E941             
0370   E941             ;================================================================================================
0371   E941             ; List Status (List = Console)
0372   E941             ;================================================================================================
0373   E941 3A 03 00    LISTST:	LD	A,(iobyte)
0374   E944 E6 C0       		AND	0C0H
0375   E946 FE 00       		CP	0
0376   E948 CA 75 E8    		JP	Z,TTYST
0377   E94B FE 40       		CP	40H
0378   E94D CA 78 E8    		JP	Z,CRTST
0379   E950 FE 80       		CP	80H
0380   E952 CA 81 E8    		JP	Z,LPTST
0381   E955 C3 84 E8    		JP	UL1ST
0382   E958             
0383   E958             ;================================================================================================
0384   E958             ; PORT 0 (on TTY card) input.
0385   E958             ;================================================================================================
0386   E958             PORT0IN:
0387   E958 DB C0       		IN	A,(PORT0_STA)
0388   E95A FE 00       		CP	0
0389   E95C 28 FA       		JR	Z,PORT0IN
0390   E95E DB C2       		IN	A,(PORT0_DAT)
0391   E960 C9          		RET
0392   E961             		
0393   E961             ;================================================================================================
0394   E961             ; PORT 0 (on USART v2) output.
0395   E961             ;================================================================================================
0396   E961             PORT0OUT:
0397   E961 79          		LD	A,C
0398   E962 D3 C2       		OUT	(PORT0_DAT),A
0399   E964 C9          		RET
0400   E965             		
0401   E965             ;================================================================================================
0402   E965             ; PORT 0 (on TTY card) status.
0403   E965             ;================================================================================================
0404   E965             PORT0ST:
0405   E965 DB C0       		IN	A,(PORT0_STA)
0406   E967 C9          		RET
0407   E968             		
0408   E968             ;================================================================================================
0409   E968             ; PORT 1 (on USART v2) input.
0410   E968             ;================================================================================================
0411   E968             PORT1IN:
0412   E968 DB C1       		IN	A,(PORT1_STA)
0413   E96A FE 00       		CP	0
0414   E96C 28 FA       		JR	Z,PORT1IN
0415   E96E DB C3       		IN	A,(PORT1_DAT)
0416   E970 C9          		RET
0417   E971             		
0418   E971             ;================================================================================================
0419   E971             ; PORT 1 (on USART v2) output.
0420   E971             ;================================================================================================
0421   E971             PORT1OUT:
0422   E971 79          		LD	A,C
0423   E972 D3 C3       		OUT	(PORT1_DAT),A
0424   E974 C9          		RET
0425   E975             		
0426   E975             ;================================================================================================
0427   E975             ; PORT 1 (on USART v2) status.
0428   E975             ;================================================================================================
0429   E975             PORT1ST:
0430   E975 DB C1       		IN	A,(PORT1_STA)
0431   E977 C9          		RET
0432   E978             		
0433   E978             ;================================================================================================
0434   E978             ; Disk processing entry points
0435   E978             ;================================================================================================
0436   E978             seldsk:
0437   E978 21 00 00    		LD	HL,$0000
0438   E97B 79          		LD	A,C
0439   E97C FE 10       		CP	16		; 16 for 128MB disk, 8 for 64MB disk
0440   E97E 38 0D       		jr	C,chgdsk	; if invalid drive will give BDOS error
0441   E980 3A 04 00    		LD	A,(userdrv)	; so set the drive back to a:
0442   E983 B9          		CP	C		; If the default disk is not the same as the
0443   E984 C0          		RET	NZ		; selected drive then return, 
0444   E985 AF          		XOR	A		; else reset default back to a:
0445   E986 32 04 00    		LD	(userdrv),A	; otherwise will be stuck in a loop
0446   E989 32 54 FC    		LD	(sekdsk),A
0447   E98C C9          		ret
0448   E98D             
0449   E98D 32 54 FC    chgdsk:		LD 	(sekdsk),A
0450   E990 CB 07       		RLC	a		;*2
0451   E992 CB 07       		RLC	a		;*4
0452   E994 CB 07       		RLC	a		;*8
0453   E996 CB 07       		RLC	a		;*16
0454   E998 21 56 E6    		LD 	HL,dpbase
0455   E99B 06 00       		LD	b,0
0456   E99D 4F          		LD	c,A	
0457   E99E 09          		ADD	HL,BC
0458   E99F             
0459   E99F C9          		RET
0460   E9A0             
0461   E9A0             ;------------------------------------------------------------------------------------------------
0462   E9A0             home:
0463   E9A0 3A 5F FC    		ld	a,(hstwrt)	;check for pending write
0464   E9A3 B7          		or	a
0465   E9A4 20 03       		jr	nz,homed
0466   E9A6 32 5E FC    		ld	(hstact),a	;clear host active flag
0467   E9A9             homed:
0468   E9A9 01 00 00    		LD 	BC,0000h
0469   E9AC             
0470   E9AC             ;------------------------------------------------------------------------------------------------
0471   E9AC ED 43 55 FC settrk:		LD 	(sektrk),BC	; Set track passed from BDOS in register BC.
0472   E9B0 C9          		RET
0473   E9B1             
0474   E9B1             ;------------------------------------------------------------------------------------------------
0475   E9B1 ED 43 57 FC setsec:		LD 	(seksec),BC	; Set sector passed from BDOS in register BC.
0476   E9B5 C9          		RET
0477   E9B6             
0478   E9B6             ;------------------------------------------------------------------------------------------------
0479   E9B6 ED 43 69 FC setdma:		LD 	(dmaAddr),BC	; Set DMA ADDress given by registers BC.
0480   E9BA C9          		RET
0481   E9BB             
0482   E9BB             ;------------------------------------------------------------------------------------------------
0483   E9BB C5          sectran:	PUSH 	BC
0484   E9BC E1          		POP 	HL
0485   E9BD C9          		RET
0486   E9BE             
0487   E9BE             ;------------------------------------------------------------------------------------------------
0488   E9BE             read:
0489   E9BE             		;read the selected CP/M sector
0490   E9BE AF          		xor	a
0491   E9BF 32 60 FC    		ld	(unacnt),a
0492   E9C2 3E 01       		ld	a,1
0493   E9C4 32 67 FC    		ld	(readop),a		;read operation
0494   E9C7 32 66 FC    		ld	(rsflag),a		;must read data
0495   E9CA 3E 02       		ld	a,wrual
0496   E9CC 32 68 FC    		ld	(wrtype),a		;treat as unalloc
0497   E9CF C3 39 EA    		jp	rwoper			;to perform the read
0498   E9D2             
0499   E9D2             
0500   E9D2             ;------------------------------------------------------------------------------------------------
0501   E9D2             write:
0502   E9D2             		;write the selected CP/M sector
0503   E9D2 AF          		xor	a		;0 to accumulator
0504   E9D3 32 67 FC    		ld	(readop),a	;not a read operation
0505   E9D6 79          		ld	a,c		;write type in c
0506   E9D7 32 68 FC    		ld	(wrtype),a
0507   E9DA FE 02       		cp	wrual		;write unallocated?
0508   E9DC 20 17       		jr	nz,chkuna	;check for unalloc
0509   E9DE             ;
0510   E9DE             ;		write to unallocated, set parameters
0511   E9DE 3E 20       		ld	a,blksiz/128	;next unalloc recs
0512   E9E0 32 60 FC    		ld	(unacnt),a
0513   E9E3 3A 54 FC    		ld	a,(sekdsk)		;disk to seek
0514   E9E6 32 61 FC    		ld	(unadsk),a		;unadsk = sekdsk
0515   E9E9 2A 55 FC    		ld	hl,(sektrk)
0516   E9EC 22 62 FC    		ld	(unatrk),hl		;unatrk = sectrk
0517   E9EF 3A 57 FC    		ld	a,(seksec)
0518   E9F2 32 64 FC    		ld	(unasec),a		;unasec = seksec
0519   E9F5             ;
0520   E9F5             chkuna:
0521   E9F5             ;		check for write to unallocated sector
0522   E9F5 3A 60 FC    		ld	a,(unacnt)		;any unalloc remain?
0523   E9F8 B7          		or	a	
0524   E9F9 28 36       		jr	z,alloc		;skip if not
0525   E9FB             ;
0526   E9FB             ;		more unallocated records remain
0527   E9FB 3D          		dec	a		;unacnt = unacnt-1
0528   E9FC 32 60 FC    		ld	(unacnt),a
0529   E9FF 3A 54 FC    		ld	a,(sekdsk)		;same disk?
0530   EA02 21 61 FC    		ld	hl,unadsk
0531   EA05 BE          		cp	(hl)		;sekdsk = unadsk?
0532   EA06 C2 31 EA    		jp	nz,alloc		;skip if not
0533   EA09             ;
0534   EA09             ;		disks are the same
0535   EA09 21 62 FC    		ld	hl,unatrk
0536   EA0C CD D0 EA    		call	sektrkcmp	;sektrk = unatrk?
0537   EA0F C2 31 EA    		jp	nz,alloc		;skip if not
0538   EA12             ;
0539   EA12             ;		tracks are the same
0540   EA12 3A 57 FC    		ld	a,(seksec)		;same sector?
0541   EA15 21 64 FC    		ld	hl,unasec
0542   EA18 BE          		cp	(hl)		;seksec = unasec?
0543   EA19 C2 31 EA    		jp	nz,alloc		;skip if not
0544   EA1C             ;
0545   EA1C             ;		match, move to next sector for future ref
0546   EA1C 34          		inc	(hl)		;unasec = unasec+1
0547   EA1D 7E          		ld	a,(hl)		;end of track?
0548   EA1E FE 80       		cp	cpmspt		;count CP/M sectors
0549   EA20 38 09       		jr	c,noovf		;skip if no overflow
0550   EA22             ;
0551   EA22             ;		overflow to next track
0552   EA22 36 00       		ld	(hl),0		;unasec = 0
0553   EA24 2A 62 FC    		ld	hl,(unatrk)
0554   EA27 23          		inc	hl
0555   EA28 22 62 FC    		ld	(unatrk),hl		;unatrk = unatrk+1
0556   EA2B             ;
0557   EA2B             noovf:
0558   EA2B             		;match found, mark as unnecessary read
0559   EA2B AF          		xor	a		;0 to accumulator
0560   EA2C 32 66 FC    		ld	(rsflag),a		;rsflag = 0
0561   EA2F 18 08       		jr	rwoper		;to perform the write
0562   EA31             ;
0563   EA31             alloc:
0564   EA31             		;not an unallocated record, requires pre-read
0565   EA31 AF          		xor	a		;0 to accum
0566   EA32 32 60 FC    		ld	(unacnt),a		;unacnt = 0
0567   EA35 3C          		inc	a		;1 to accum
0568   EA36 32 66 FC    		ld	(rsflag),a		;rsflag = 1
0569   EA39             
0570   EA39             ;------------------------------------------------------------------------------------------------
0571   EA39             rwoper:
0572   EA39             		;enter here to perform the read/write
0573   EA39 AF          		xor	a		;zero to accum
0574   EA3A 32 65 FC    		ld	(erflag),a		;no errors (yet)
0575   EA3D 3A 57 FC    		ld	a,(seksec)		;compute host sector
0576   EA40 B7          		or	a		;carry = 0
0577   EA41 1F          		rra			;shift right
0578   EA42 B7          		or	a		;carry = 0
0579   EA43 1F          		rra			;shift right
0580   EA44 32 5D FC    		ld	(sekhst),a		;host sector to seek
0581   EA47             ;
0582   EA47             ;		active host sector?
0583   EA47 21 5E FC    		ld	hl,hstact	;host active flag
0584   EA4A 7E          		ld	a,(hl)
0585   EA4B 36 01       		ld	(hl),1		;always becomes 1
0586   EA4D B7          		or	a		;was it already?
0587   EA4E 28 21       		jr	z,filhst		;fill host if not
0588   EA50             ;
0589   EA50             ;		host buffer active, same as seek buffer?
0590   EA50 3A 54 FC    		ld	a,(sekdsk)
0591   EA53 21 59 FC    		ld	hl,hstdsk	;same disk?
0592   EA56 BE          		cp	(hl)		;sekdsk = hstdsk?
0593   EA57 20 11       		jr	nz,nomatch
0594   EA59             ;
0595   EA59             ;		same disk, same track?
0596   EA59 21 5A FC    		ld	hl,hsttrk
0597   EA5C CD D0 EA    		call	sektrkcmp	;sektrk = hsttrk?
0598   EA5F 20 09       		jr	nz,nomatch
0599   EA61             ;
0600   EA61             ;		same disk, same track, same buffer?
0601   EA61 3A 5D FC    		ld	a,(sekhst)
0602   EA64 21 5C FC    		ld	hl,hstsec	;sekhst = hstsec?
0603   EA67 BE          		cp	(hl)
0604   EA68 28 24       		jr	z,match		;skip if match
0605   EA6A             ;
0606   EA6A             nomatch:
0607   EA6A             		;proper disk, but not correct sector
0608   EA6A 3A 5F FC    		ld	a,(hstwrt)		;host written?
0609   EA6D B7          		or	a
0610   EA6E C4 78 EB    		call	nz,writehst	;clear host buff
0611   EA71             ;
0612   EA71             filhst:
0613   EA71             		;may have to fill the host buffer
0614   EA71 3A 54 FC    		ld	a,(sekdsk)
0615   EA74 32 59 FC    		ld	(hstdsk),a
0616   EA77 2A 55 FC    		ld	hl,(sektrk)
0617   EA7A 22 5A FC    		ld	(hsttrk),hl
0618   EA7D 3A 5D FC    		ld	a,(sekhst)
0619   EA80 32 5C FC    		ld	(hstsec),a
0620   EA83 3A 66 FC    		ld	a,(rsflag)		;need to read?
0621   EA86 B7          		or	a
0622   EA87 C4 4F EB    		call	nz,readhst		;yes, if 1
0623   EA8A AF          		xor	a		;0 to accum
0624   EA8B 32 5F FC    		ld	(hstwrt),a		;no pending write
0625   EA8E             ;
0626   EA8E             match:
0627   EA8E             		;copy data to or from buffer
0628   EA8E 3A 57 FC    		ld	a,(seksec)		;mask buffer number
0629   EA91 E6 03       		and	secmsk		;least signif bits
0630   EA93 6F          		ld	l,a		;ready to shift
0631   EA94 26 00       		ld	h,0		;double count
0632   EA96 29          		add	hl,hl
0633   EA97 29          		add	hl,hl
0634   EA98 29          		add	hl,hl
0635   EA99 29          		add	hl,hl
0636   EA9A 29          		add	hl,hl
0637   EA9B 29          		add	hl,hl
0638   EA9C 29          		add	hl,hl
0639   EA9D             ;		hl has relative host buffer address
0640   EA9D 11 6B FC    		ld	de,hstbuf
0641   EAA0 19          		add	hl,de		;hl = host address
0642   EAA1 EB          		ex	de,hl			;now in DE
0643   EAA2 2A 69 FC    		ld	hl,(dmaAddr)		;get/put CP/M data
0644   EAA5 0E 80       		ld	c,128		;length of move
0645   EAA7 3A 67 FC    		ld	a,(readop)		;which way?
0646   EAAA B7          		or	a
0647   EAAB 20 06       		jr	nz,rwmove		;skip if read
0648   EAAD             ;
0649   EAAD             ;	write operation, mark and switch direction
0650   EAAD 3E 01       		ld	a,1
0651   EAAF 32 5F FC    		ld	(hstwrt),a		;hstwrt = 1
0652   EAB2 EB          		ex	de,hl			;source/dest swap
0653   EAB3             ;
0654   EAB3             rwmove:
0655   EAB3             		;C initially 128, DE is source, HL is dest
0656   EAB3 1A          		ld	a,(de)		;source character
0657   EAB4 13          		inc	de
0658   EAB5 77          		ld	(hl),a		;to dest
0659   EAB6 23          		inc	hl
0660   EAB7 0D          		dec	c		;loop 128 times
0661   EAB8 20 F9       		jr	nz,rwmove
0662   EABA             ;
0663   EABA             ;		data has been moved to/from host buffer
0664   EABA 3A 68 FC    		ld	a,(wrtype)		;write type
0665   EABD FE 01       		cp	wrdir		;to directory?
0666   EABF 3A 65 FC    		ld	a,(erflag)		;in case of errors
0667   EAC2 C0          		ret	nz			;no further processing
0668   EAC3             ;
0669   EAC3             ;		clear host buffer for directory write
0670   EAC3 B7          		or	a		;errors?
0671   EAC4 C0          		ret	nz			;skip if so
0672   EAC5 AF          		xor	a		;0 to accum
0673   EAC6 32 5F FC    		ld	(hstwrt),a		;buffer written
0674   EAC9 CD 78 EB    		call	writehst
0675   EACC 3A 65 FC    		ld	a,(erflag)
0676   EACF C9          		ret
0677   EAD0             
0678   EAD0             ;------------------------------------------------------------------------------------------------
0679   EAD0             ;Utility subroutine for 16-bit compare
0680   EAD0             sektrkcmp:
0681   EAD0             		;HL = .unatrk or .hsttrk, compare with sektrk
0682   EAD0 EB          		ex	de,hl
0683   EAD1 21 55 FC    		ld	hl,sektrk
0684   EAD4 1A          		ld	a,(de)		;low byte compare
0685   EAD5 BE          		cp	(HL)		;same?
0686   EAD6 C0          		ret	nz			;return if not
0687   EAD7             ;		low bytes equal, test high 1s
0688   EAD7 13          		inc	de
0689   EAD8 23          		inc	hl
0690   EAD9 1A          		ld	a,(de)
0691   EADA BE          		cp	(hl)	;sets flags
0692   EADB C9          		ret
0693   EADC             
0694   EADC             ;================================================================================================
0695   EADC             ; Convert track/head/sector into LBA for physical access to the disk
0696   EADC             ;================================================================================================
0697   EADC             setLBAaddr:	
0698   EADC 2A 5A FC    		LD	HL,(hsttrk)
0699   EADF CB 05       		RLC	L
0700   EAE1 CB 05       		RLC	L
0701   EAE3 CB 05       		RLC	L
0702   EAE5 CB 05       		RLC	L
0703   EAE7 CB 05       		RLC	L
0704   EAE9 7D          		LD	A,L
0705   EAEA E6 E0       		AND	0E0H
0706   EAEC 6F          		LD	L,A
0707   EAED 3A 5C FC    		LD	A,(hstsec)
0708   EAF0 85          		ADD	A,L
0709   EAF1 32 50 FC    		LD	(lba0),A
0710   EAF4             
0711   EAF4 2A 5A FC    		LD	HL,(hsttrk)
0712   EAF7 CB 0D       		RRC	L
0713   EAF9 CB 0D       		RRC	L
0714   EAFB CB 0D       		RRC	L
0715   EAFD 7D          		LD	A,L
0716   EAFE E6 1F       		AND	01FH
0717   EB00 6F          		LD	L,A
0718   EB01 CB 04       		RLC	H
0719   EB03 CB 04       		RLC	H
0720   EB05 CB 04       		RLC	H
0721   EB07 CB 04       		RLC	H
0722   EB09 CB 04       		RLC	H
0723   EB0B 7C          		LD	A,H
0724   EB0C E6 20       		AND	020H
0725   EB0E 67          		LD	H,A
0726   EB0F 3A 59 FC    		LD	A,(hstdsk)
0727   EB12 CB 07       		RLC	a
0728   EB14 CB 07       		RLC	a
0729   EB16 CB 07       		RLC	a
0730   EB18 CB 07       		RLC	a
0731   EB1A CB 07       		RLC	a
0732   EB1C CB 07       		RLC	a
0733   EB1E E6 C0       		AND	0C0H
0734   EB20 84          		ADD	A,H
0735   EB21 85          		ADD	A,L
0736   EB22 32 51 FC    		LD	(lba1),A
0737   EB25             		
0738   EB25             
0739   EB25 3A 59 FC    		LD	A,(hstdsk)
0740   EB28 CB 0F       		RRC	A
0741   EB2A CB 0F       		RRC	A
0742   EB2C E6 03       		AND	03H
0743   EB2E 32 52 FC    		LD	(lba2),A
0744   EB31             
0745   EB31             ; LBA Mode using drive 0 = E0
0746   EB31 3E E0       		LD	a,0E0H
0747   EB33 32 53 FC    		LD	(lba3),A
0748   EB36             
0749   EB36             
0750   EB36 3A 50 FC    		LD	A,(lba0)
0751   EB39 D3 B3       		OUT 	(CF_LBA0),A
0752   EB3B             
0753   EB3B 3A 51 FC    		LD	A,(lba1)
0754   EB3E D3 B4       		OUT 	(CF_LBA1),A
0755   EB40             
0756   EB40 3A 52 FC    		LD	A,(lba2)
0757   EB43 D3 B5       		OUT 	(CF_LBA2),A
0758   EB45             
0759   EB45 3A 53 FC    		LD	A,(lba3)
0760   EB48 D3 B6       		OUT 	(CF_LBA3),A
0761   EB4A             
0762   EB4A 3E 01       		LD 	A,1
0763   EB4C D3 B2       		OUT 	(CF_SECCOUNT),A
0764   EB4E             
0765   EB4E C9          		RET				
0766   EB4F             
0767   EB4F             ;================================================================================================
0768   EB4F             ; Read physical sector from host
0769   EB4F             ;================================================================================================
0770   EB4F             readhst:
0771   EB4F F5          		PUSH 	AF
0772   EB50 C5          		PUSH 	BC
0773   EB51 E5          		PUSH 	HL
0774   EB52             
0775   EB52 CD A1 EB    		CALL 	cfWait
0776   EB55             
0777   EB55 CD DC EA    		CALL 	setLBAaddr
0778   EB58             
0779   EB58 3E 20       		LD 	A,CF_READ_SEC
0780   EB5A D3 B7       		OUT 	(CF_COMMAND),A
0781   EB5C             
0782   EB5C CD A1 EB    		CALL 	cfWait
0783   EB5F             
0784   EB5F 0E 04       		LD 	c,4
0785   EB61 21 6B FC    		LD 	HL,hstbuf
0786   EB64             rd4secs:
0787   EB64 06 80       		LD 	b,128
0788   EB66             rdByte:
0789   EB66 DB B0       		in 	A,(CF_DATA)
0790   EB68 77          		LD 	(HL),A
0791   EB69 23          		iNC 	HL
0792   EB6A 05          		dec 	b
0793   EB6B 20 F9       		JR 	NZ, rdByte
0794   EB6D 0D          		dec 	c
0795   EB6E 20 F4       		JR 	NZ,rd4secs
0796   EB70             
0797   EB70 E1          		POP 	HL
0798   EB71 C1          		POP 	BC
0799   EB72 F1          		POP 	AF
0800   EB73             
0801   EB73 AF          		XOR 	a
0802   EB74 32 65 FC    		ld	(erflag),a
0803   EB77 C9          		RET
0804   EB78             
0805   EB78             ;================================================================================================
0806   EB78             ; Write physical sector to host
0807   EB78             ;================================================================================================
0808   EB78             writehst:
0809   EB78 F5          		PUSH 	AF
0810   EB79 C5          		PUSH 	BC
0811   EB7A E5          		PUSH 	HL
0812   EB7B             
0813   EB7B CD A1 EB    		CALL 	cfWait
0814   EB7E             
0815   EB7E CD DC EA    		CALL 	setLBAaddr
0816   EB81             
0817   EB81 3E 30       		LD 	A,CF_WRITE_SEC
0818   EB83 D3 B7       		OUT 	(CF_COMMAND),A
0819   EB85             
0820   EB85 CD A1 EB    		CALL 	cfWait
0821   EB88             
0822   EB88 0E 04       		LD 	c,4
0823   EB8A 21 6B FC    		LD 	HL,hstbuf
0824   EB8D             wr4secs:
0825   EB8D 06 80       		LD 	b,128
0826   EB8F 7E          wrByte:		LD 	A,(HL)
0827   EB90 D3 B0       		OUT 	(CF_DATA),A
0828   EB92 23          		iNC 	HL
0829   EB93 05          		dec 	b
0830   EB94 20 F9       		JR 	NZ, wrByte
0831   EB96             
0832   EB96 0D          		dec 	c
0833   EB97 20 F4       		JR 	NZ,wr4secs
0834   EB99             
0835   EB99 E1          		POP 	HL
0836   EB9A C1          		POP 	BC
0837   EB9B F1          		POP 	AF
0838   EB9C             
0839   EB9C AF          		XOR 	a
0840   EB9D 32 65 FC    		ld	(erflag),a
0841   EBA0 C9          		RET
0842   EBA1             
0843   EBA1             ;================================================================================================
0844   EBA1             ; Wait for disk to be ready (busy=0,ready=1)
0845   EBA1             ;================================================================================================
0846   EBA1             cfWait:
0847   EBA1 F5          		PUSH 	AF
0848   EBA2             cfWait1:
0849   EBA2 DB B7       		in 	A,(CF_STATUS)
0850   EBA4 E6 80       		AND 	080H
0851   EBA6 FE 80       		cp 	080H
0852   EBA8 28 F8       		JR	Z,cfWait1
0853   EBAA F1          		POP 	AF
0854   EBAB C9          		RET
0855   EBAC             
0856   EBAC             ;================================================================================================
0857   EBAC             ; Print (on console) a sequence of characters ending with zero
0858   EBAC             ;================================================================================================
0859   EBAC             PRINTSEQ:
0860   EBAC E3          		EX 	(SP),HL 		; Push HL and put RET address into HL
0861   EBAD F5          		PUSH 	AF
0862   EBAE C5          		PUSH 	BC
0863   EBAF             NEXTCHAR:
0864   EBAF 7E          		LD 	A,(HL)
0865   EBB0 FE 00       		CP	0
0866   EBB2 28 07       		JR	Z,ENDOFPRINT
0867   EBB4 4F          		LD  	C,A
0868   EBB5 CD E5 E8    		CALL 	CONOUT		; Print to console
0869   EBB8 23          		INC 	HL
0870   EBB9 18 F4       		JR	NEXTCHAR
0871   EBBB             ENDOFPRINT:
0872   EBBB 23          		INC 	HL 			; Get past "null" terminator
0873   EBBC C1          		POP 	BC
0874   EBBD F1          		POP 	AF
0875   EBBE E3          		EX 	(SP),HL 		; Push new RET address on stack and restore HL
0876   EBBF C9          		RET
0877   EBC0             
0878   EBC0             ;================================================================================================
0879   EBC0             ; Data storage
0880   EBC0             ;================================================================================================
0881   EBC0             dirbuf: 	.ds 128 		;scratch directory area
0882   EC40             alv00: 		.ds 257			;allocation vector 0
0883   ED41             alv01: 		.ds 257			;allocation vector 1
0884   EE42             alv02: 		.ds 257			;allocation vector 2
0885   EF43             alv03: 		.ds 257			;allocation vector 3
0886   F044             alv04: 		.ds 257			;allocation vector 4
0887   F145             alv05: 		.ds 257			;allocation vector 5
0888   F246             alv06: 		.ds 257			;allocation vector 6
0889   F347             alv07: 		.ds 257			;allocation vector 7
0890   F448             alv08: 		.ds 257			;allocation vector 8
0891   F549             alv09: 		.ds 257			;allocation vector 9
0892   F64A             alv10: 		.ds 257			;allocation vector 10
0893   F74B             alv11: 		.ds 257			;allocation vector 11
0894   F84C             alv12: 		.ds 257			;allocation vector 12
0895   F94D             alv13: 		.ds 257			;allocation vector 13
0896   FA4E             alv14: 		.ds 257			;allocation vector 14
0897   FB4F             alv15: 		.ds 257			;allocation vector 15
0898   FC50             
0899   FC50 00          lba0		.DB	00h
0900   FC51 00          lba1		.DB	00h
0901   FC52 00          lba2		.DB	00h
0902   FC53 00          lba3		.DB	00h
0903   FC54             
0904   FC54             sekdsk:		.ds	1		;seek disk number
0905   FC55             sektrk:		.ds	2		;seek track number
0906   FC57             seksec:		.ds	2		;seek sector number
0907   FC59             ;
0908   FC59             hstdsk:		.ds	1		;host disk number
0909   FC5A             hsttrk:		.ds	2		;host track number
0910   FC5C             hstsec:		.ds	1		;host sector number
0911   FC5D             ;
0912   FC5D             sekhst:		.ds	1		;seek shr secshf
0913   FC5E             hstact:		.ds	1		;host active flag
0914   FC5F             hstwrt:		.ds	1		;host written flag
0915   FC60             ;
0916   FC60             unacnt:		.ds	1		;unalloc rec cnt
0917   FC61             unadsk:		.ds	1		;last unalloc disk
0918   FC62             unatrk:		.ds	2		;last unalloc track
0919   FC64             unasec:		.ds	1		;last unalloc sector
0920   FC65             ;
0921   FC65             erflag:		.ds	1		;error reporting
0922   FC66             rsflag:		.ds	1		;read sector flag
0923   FC67             readop:		.ds	1		;1 if read operation
0924   FC68             wrtype:		.ds	1		;write operation type
0925   FC69             dmaAddr:	.ds	2		;last dma address
0926   FC6B             hstbuf:		.ds	512		;host buffer
0927   FE6B             hstBufEnd:	.EQU	$
0928   FE6B             
0929   FE6B             			.DS	020h			; Start of BIOS stack area.
0930   FE8B             BIOSSTACK:	.EQU	$
0931   FE8B             
0932   FE8B             biosEnd:	.EQU	$
0933   FE8B             
0934   FE8B             		.END
tasm: Number of errors = 0
